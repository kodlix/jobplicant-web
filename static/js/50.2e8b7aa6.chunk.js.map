{"version":3,"sources":["pages/timeline/Timeline.js"],"names":["Timeline","dispatch","useDispatch","posts","useSelector","state","timeline","loading","loadingPosts","allJobs","job","profileInfo","account","useState","post","setPost","pageNumber","setPageNumber","imageToDisplay","setImageToDisplay","isAuthenticated","agent","Auth","isAuth","onShow","id","data","openModal","TIMELINE","EDITPOST","CREATEPOST","expandProfileImage","src","ACTIVEUSERPICTURE","useEffect","loadProfileInfo","loadAllJobs","loadPosts","closeEmojiPicker","className","imageUrl","width","height","alt","onClick","e","target","label","onHide","name","closeModal","ids","length","style","color","map","postId","commentCount","meta","total","disabled"],"mappings":"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","file":"static/js/50.2e8b7aa6.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button } from 'primereact/button';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ModalMode from './ModalMode';\r\nimport { openModal, closeModal } from \"store/modules/modal\";\r\nimport { loadProfileInfo } from \"store/modules/account\";\r\nimport { closeEmojiPicker } from \"store/modules/emojiPicker\";\r\nimport { loadPosts } from \"../../store/modules/timeline\";\r\nimport { loadAllJobs } from \"store/modules/job\";\r\nimport { TIMELINE } from \"constants/timeline\";\r\nimport agent from \"../../services/agent.service\";\r\nimport TimelineLeftPanel from \"./TimelineLeftPanel\";\r\nimport JobSidePanel from \"../../components/JobSidePanel\";\r\nimport Post from './Post';\r\n\r\nimport \"./Timeline.css\";\r\n\r\nconst Timeline = () => {\r\n  const dispatch = useDispatch();\r\n  const posts = useSelector(state => state.timeline.posts);\r\n  const loading = useSelector(state => state.timeline.loadingPosts);\r\n  const allJobs = useSelector(state => state.job.allJobs);\r\n  const profileInfo = useSelector((state) => state.account.profileInfo);\r\n  const [post, setPost] = useState({});\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [imageToDisplay, setImageToDisplay] = useState(\"\");\r\n  const isAuthenticated = agent.Auth.isAuth();\r\n  const pageLimit = 10;\r\n\r\n  const onShow = (id) => {\r\n    if (id) {\r\n      setPost(posts.data[id]);\r\n      dispatch(openModal(TIMELINE.EDITPOST));\r\n    }\r\n    else {\r\n      dispatch(openModal(TIMELINE.CREATEPOST));\r\n    }\r\n  }\r\n\r\n  const expandProfileImage = (src) => {\r\n    setImageToDisplay(src)\r\n    dispatch(openModal(TIMELINE.ACTIVEUSERPICTURE));\r\n  }\r\n\r\n  const onHide = (name) => {\r\n    dispatch(closeModal(name));\r\n    dispatch(closeEmojiPicker());\r\n    setImageToDisplay(\"\");\r\n    setPost({});\r\n  }\r\n\r\n  const loadmorePosts = () => {\r\n    setPageNumber(pageNumber + 1)\r\n    dispatch(loadPosts(pageNumber + 1, pageLimit, \"loadMore\"));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      dispatch(loadProfileInfo());\r\n      dispatch(loadAllJobs());\r\n    }\r\n    dispatch(loadPosts(1, pageLimit, \"loadPosts\"));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (loading === \"loadPosts\") {\r\n      dispatch(closeEmojiPicker());\r\n    }\r\n  }, [posts]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"timeline-container\" >\r\n        <div className=\"timeline-content\">\r\n          <div className=\"p-grid p-mt-2 p-m-0\">\r\n            {\r\n              isAuthenticated &&\r\n              <TimelineLeftPanel\r\n                profileInfo={profileInfo}\r\n                expandProfileImage={expandProfileImage}\r\n              />\r\n            }\r\n            <div className={`p-col-12 p-px-0 ${isAuthenticated ? \"p-md-6\" : \"p-md-9\"}`}>\r\n              {\r\n                isAuthenticated &&\r\n                <div className=\"p-card p-grid p-mb-2 p-mt-0 p-mx-0 p-p-3 align-items-center\">\r\n                  <div className=\"p-col-2 text-center profilepic-startpost-timeline p-pl-0 p-sm-pl-3\">\r\n                    {\r\n                      profileInfo.imageUrl &&\r\n                      <img\r\n                        width=\"70\"\r\n                        height=\"70\"\r\n                        alt=\"Profile\"\r\n                        className=\"rounded-circle d-flex p-ml-1 p-ml-xs-2 p-ml-sm-4 p-ml-md-3\"\r\n                        src={profileInfo?.imageUrl}\r\n                        onClick={(e) => expandProfileImage(e.target.src)}\r\n                      />\r\n                    }\r\n                    {\r\n                      !profileInfo.imageUrl &&\r\n                      <i className=\"pi pi-user timeline-emptyProfilePic-small\" />\r\n                    }\r\n                  </div>\r\n                  <div className=\"p-col-10\">\r\n                    <Button\r\n                      label=\"Start a Post\"\r\n                      className=\"postInputButton\"\r\n                      onClick={() => onShow()}\r\n                    />\r\n                    <ModalMode\r\n                      onHide={onHide}\r\n                      post={post}\r\n                      imageUrl={imageToDisplay}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              }\r\n              {\r\n                loading === \"loadPosts\" &&\r\n                posts.ids.length === 0 &&\r\n                <div className=\"p-p-5 d-flex justify-content-center\">\r\n                  <i\r\n                    className=\"pi pi-spin pi-spinner\"\r\n                    style={{ 'fontSize': '2em', color: \"#5A2846\" }} />\r\n                </div>\r\n              }\r\n              {\r\n                isAuthenticated &&\r\n                loading !== \"loadPosts\" &&\r\n                posts.ids.length === 0 &&\r\n                <div className=\"p-card p-p-3 p-mb-1 timeline-posts\">\r\n                  <div className=\"p-mb-6 p-p-4 text-center\">\r\n                    <h3 className=\"p-card-title\">\r\n                      Create a post\r\n                    </h3>\r\n                    <h6>\r\n                      Hello there, create your first post.\r\n                    </h6>\r\n                  </div>\r\n                </div>\r\n              }\r\n\r\n              {\r\n                posts?.ids?.length > 0 &&\r\n                <div className=\"timeline-postsContainer\">\r\n                  {\r\n                    posts.ids.map((postId) => {\r\n                      const post = posts.data[postId];\r\n                      if (!post) {\r\n                        return null;\r\n                      }\r\n                      return (\r\n                        <Post\r\n                          post={post}\r\n                          key={postId}\r\n                          onShow={onShow}\r\n                          profileInfo={profileInfo}\r\n                          isAuthenticated={isAuthenticated}\r\n                          expandProfileImage={expandProfileImage}\r\n                          commentCount={posts.data[postId].commentCount}\r\n                        />\r\n                      )\r\n                    }\r\n                    )}\r\n                  {\r\n                    posts.ids.length > 0 &&\r\n                    posts.meta.total > posts.ids.length &&\r\n                    loading !== \"loadMore\" &&\r\n                    <Button\r\n                      onClick={loadmorePosts}\r\n                      className=\"p-mr-2 w-100\"\r\n                      label='Load More'\r\n                    />\r\n                  }\r\n                  {\r\n                    posts.ids.length > 0 &&\r\n                    posts.meta.total > posts.ids.length &&\r\n                    loading === \"loadMore\" &&\r\n                    <Button\r\n                      className=\"p-mr-2 w-100\"\r\n                      loading={loading === \"loadMore\"}\r\n                      disabled={loading === \"loadMore\"}\r\n                    />\r\n                  }\r\n                </div>\r\n              }\r\n            </div>\r\n            <JobSidePanel data={allJobs} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Timeline;"],"sourceRoot":""}