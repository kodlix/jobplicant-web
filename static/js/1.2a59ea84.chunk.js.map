{"version":3,"sources":["components/profile/SectionHeader.js","components/profile/Portfolio.js","components/profile/Biography.js","components/profile/Experience.js","components/profile/Education.js","components/profile/Skills.js","components/profile/Hobbies.js","components/profile/ProfessionsOfInterest.js","components/profile/LocationOfInterest.js","components/profile/ContactInformation.js","components/profile/BiographyForm.js","components/LimitedTextarea.jsx","components/profile/ExperienceForm.js","components/profile/ContactInformationForm.js","components/profile/EducationForm.js","components/profile/LocationOfInterestForm.js","components/profile/HobbiesForm.js","components/profile/PortfolioForm.js","components/profile/SkillForm.js","components/profile/ProfessionsOfInterestForm.js","components/profile/PersonalInfoForm.js","components/profile/PortfolioModal.js","components/profile/ModalForm.js"],"names":["SectionHeader","openModalOnEdit","openModalOnCreate","deleteItem","hasData","sectionTitle","icon","id","showAddButton","showEditButton","showDeleteButton","isViewApplicant","className","onClick","Portfolio","openCreate","openEdit","profileInfo","useSelector","state","account","PROFILE","PORTFOLIO","portfolios","map","portfolio","index","PORTFOLIO_MODAL","src","alt","width","height","Biography","BIOGRAPHY","profile","Experience","formatDate","dispatch","useDispatch","EXPERIENCE","experiences","item","jobTitle","company","style","cursor","window","confirm","deleteExperience","Date","startDate","endDate","description","Education","EDUCATION","educations","length","education","qualification","course","deleteEducation","yearOfGraduation","institution","address","Skills","skills","SKILL","console","log","skill","i","Hobbies","hobbies","HOBBY","hobby","ProfessionsOfInterest","interests","PROFESSION","interest","LocationOfInterest","LOCATION","locations","location","ContactInformation","CONTACT_INFO","contactPhoneNumber","contactEmail","BiographyForm","data","useForm","mode","reValidateMode","register","handleSubmit","errors","formState","loading","submitting","useState","biography","setBiography","useEffect","onDelete","e","target","onSubmit","updateBiography","htmlFor","type","message","name","required","rows","placeholder","defaultValue","ModeFooter","LimitedTextarea","value","limit","React","content","setContent","charLength","setCharLength","setFormattedContent","useCallback","text","slice","charCount","maxLength","onChange","event","jobCategoryList","ExperienceForm","closeEditMode","itemToEdit","setValue","clearErrors","reset","experience","setExperience","checkedCurrent","setCheckedCurrent","jobCategory","find","j","jobCategoryName","inputChange","inputId","inputName","inputValue","updatedExperienceObject","Object","assign","shouldValidate","deleteButton","formData","toISOString","jobCategoryId","createExperience","updateExperience","inputLabel","onSelect","options","optionLabel","filter","showClear","filterBy","checked","onCancel","ContactInfoForm","trigger","countries","states","phoneNumber","country","email","city","postalCode","contactInfo","setContactInfo","loadCountry","c","entries","key","handleChange","contactData","updateContactInfo","validate","pattern","InputField","EducationForm","educationObject","componentStatus","setYearOfGraduation","setEducation","countryList","util","qualificationList","admin","qualifications","fetchCountries","getQualifications","values","q","newDate","createEducation","updateEducation","monthNavigator","yearNavigator","yearRange","monthNavigatorTemplate","originalEvent","lineHeight","yearNavigatorTemplate","dateFormat","LOIList","LOIForm","LOIs","setLOIs","currentLOI","setCurrentLOI","loiData","dataToPost","loi","updateLOI","LOI","loiToRemove","newLOIArray","handleLOIDelete","array","LOIExists","Boolean","searchObjectArrayValues","HobbyForm","setHobbies","hobbyInputValue","setHobbyInputValue","updateUserHobies","includes","trim","handleHobbyAdd","newHobbyArray","currentTarget","handleHobbyDelete","PortfolioForm","toast","useRef","ref","portfolioItems","setPortfolioItems","selectedFiles","setSelectedFiles","deletePortfolio","newPortfolioArray","FormData","forEach","file","extension","replace","filename","uuidv4","append","updateProfilePortfolio","display","alert","files","preview","URL","createObjectURL","unshift","imageURL","p","accept","current","toggle","element","SkillForm","userSkill","skillsList","currentSkill","setCurrentSkill","setSkills","getSkills","createSkill","skillToDelete","newSkillArray","handleSkillDelete","object","skillExists","ProfessionsOfInterestForm","setInterests","interestInputValue","setInterestInputValue","updateProfessionOfInterest","handleInterestAdd","interestToRemove","newInterestArray","handleInterestDelete","PersonalInfoForm","firstName","lastName","otherName","imageUrl","dateOfBirth","lga","personalProfile","setPersonalProfile","lgas","setCountryObj","setStateObj","setLgaObj","countryObj","loadStates","stateObj","loadLga","lgaObj","personal","updatePersonalProfile","conuntryId","handleCountryChange","stateId","handleStateChange","PortfolioModal","portfolioImages","numVisible","numScroll","orientation","verticalViewPortHeight","itemTemplate","onError","maxWidth","ModalForm","modalName","modal","visible","setName","onHide","loadProfileInfo","breakpoints","PERSONAL_INFO","contact"],"mappings":"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","file":"static/js/1.2a59ea84.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst SectionHeader = ({\r\n  openModalOnEdit,\r\n  openModalOnCreate,\r\n  deleteItem,\r\n  hasData,\r\n  sectionTitle,\r\n  icon,\r\n  id,\r\n  showAddButton = false,\r\n  showEditButton = false,\r\n  showDeleteButton = false,\r\n  isViewApplicant = false\r\n}) => {\r\n\r\n\r\n  return (\r\n    <div className=\"sectionHeader\">\r\n      <div className=\"p-card-title\">\r\n        <span>\r\n          <i className={`pi pi-${icon}`}></i>\r\n          {sectionTitle}\r\n        </span>\r\n        {!isViewApplicant && <span>\r\n          {showAddButton && !hasData && (\r\n            <i className=\"pi pi-plus\" onClick={openModalOnCreate}></i>\r\n          )}\r\n          {showEditButton && hasData && (\r\n            <i className=\"pi pi-pencil\" onClick={openModalOnEdit} id={id}></i>\r\n          )}\r\n          {showDeleteButton && (\r\n            <i className=\"pi pi-trash\" onClick={deleteItem} id={id}></i>\r\n          )}\r\n        </span>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SectionHeader;\r\n","import React, { useState } from \"react\";\r\nimport SectionHeader from \"./SectionHeader\";\r\nimport { PROFILE } from \"constants/profile\";\r\n\r\nimport { Carousel } from \"primereact/carousel\";\r\n\r\nimport \"./UserProfile.css\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Portfolio = ({ openCreate, openEdit }) => {\r\n  const profileInfo = useSelector((state) => state.account.profileInfo);\r\n\r\n\r\n  const expandImage = (index) => {\r\n    openEdit(PROFILE.PORTFOLIO_MODAL);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"p-col-12 p-md-3 p-pt-2 portfolio-panel\">\r\n        <div className=\"p-card\">\r\n          <SectionHeader\r\n            icon=\"images\"\r\n            sectionTitle=\"Work samples\"\r\n            id=\"portfolioEdit\"\r\n            showAddButton=\"true\"\r\n            showEditButton=\"true\"\r\n            openModalOnCreate={() => openCreate(PROFILE.PORTFOLIO)}\r\n            openModalOnEdit={() => openEdit(PROFILE.PORTFOLIO)}\r\n          />\r\n          <div className=\"p-card-body p-grid p-mt-2\">\r\n            {profileInfo?.portfolios &&\r\n              profileInfo.portfolios.map((portfolio, index) => (\r\n                <button\r\n                  key={index}\r\n                  onClick={() => expandImage(index)}\r\n                  className=\"p-md-3 p-m-2 p-p-0 portfolio-items\"\r\n                >\r\n                  <img\r\n                    src={portfolio}\r\n                    alt=\"Portfolio Item\"\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                  />\r\n                </button>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Portfolio;\r\n","import React from \"react\";\r\nimport SectionHeader from \"./SectionHeader\";\r\nimport { PROFILE } from \"constants/profile\";\r\n\r\n\r\nimport \"./UserProfile.css\";\r\n\r\nconst Biography = ({ openCreate, openEdit, profileInfo, isViewApplicant }) => {\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"p-card p-mt-2\">\r\n        <SectionHeader\r\n          icon=\"bookmark\"\r\n          sectionTitle=\"Biography\"\r\n          id=\"biographyEdit\"\r\n          showAddButton=\"true\"\r\n          showEditButton=\"true\"\r\n          openModalOnCreate={() => openEdit(PROFILE.BIOGRAPHY)}\r\n          openModalOnEdit={() => openCreate(PROFILE.BIOGRAPHY)}\r\n          hasData={profileInfo?.profile}\r\n          isViewApplicant={isViewApplicant}\r\n        />\r\n        <div className=\"p-card-body\">{profileInfo?.profile}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Biography;\r\n","import React from \"react\";\r\nimport SectionHeader from \"./SectionHeader\";\r\nimport { PROFILE } from \"constants/profile\";\r\n\r\nimport \"./UserProfile.css\";\r\nimport { deleteExperience } from \"store/modules/account\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Experience = ({ openCreate, openEdit, profileInfo, formatDate, isViewApplicant }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <>\r\n      <div className=\"p-card p-mt-2\">\r\n        <SectionHeader\r\n          icon=\"star-o\"\r\n          sectionTitle=\"Experience\"\r\n          id=\"experienceEdit\"\r\n          showAddButton=\"true\"\r\n          openModalOnCreate={() => openCreate(PROFILE.EXPERIENCE)}\r\n          openModalOnEdit={() => openEdit(PROFILE.EXPERIENCE)}\r\n          isViewApplicant={isViewApplicant}\r\n        />\r\n        {profileInfo.experiences.map((item, index) => (\r\n          <div key={index}>\r\n            <div className=\"p-card-subtitle p-ml-3 p-mb-0 mainTitle\">\r\n              <span>\r\n                <b>{item.jobTitle}</b>&nbsp; at &nbsp;\r\n                <b className=\"experienceCompany\">{item.company}</b>\r\n              </span>\r\n              {!isViewApplicant && <span>\r\n                <i\r\n                  className=\"pi pi-pencil icon-edit mr-3\"\r\n                  onClick={() => openEdit(PROFILE.EXPERIENCE, item)}\r\n                  id=\"experienceEdit\"\r\n                ></i>\r\n                <i\r\n                  style={{ cursor: \"pointer\" }}\r\n                  className=\"pi pi-times\"\r\n                  onClick={() => {\r\n                    var confirmation = window.confirm(\r\n                      \"Action is irreversible, are you sure you want to delete?\"\r\n                    );\r\n                    if (confirmation) {\r\n                      dispatch(deleteExperience(item.id));\r\n                    }\r\n                  }}\r\n                  id=\"educationEdit\"\r\n                ></i>\r\n              </span>}\r\n            </div>\r\n            <div className=\"p-card-subtitle p-ml-3\">\r\n              <b>\r\n                <small>\r\n                  ({formatDate(new Date(item.startDate))} -{\" \"}\r\n                  {formatDate(new Date(item.endDate)) || \"present\"})\r\n                </small>\r\n              </b>\r\n            </div>\r\n            <div className=\"p-card-body p-text-secondary\">\r\n              {item.description}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Experience;\r\n","import React from \"react\";\r\nimport { deleteEducation } from \"store/modules/account\";\r\nimport SectionHeader from \"./SectionHeader\";\r\nimport { PROFILE } from \"constants/profile\";\r\nimport \"./UserProfile.css\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Education = ({ openCreate, openEdit, profileInfo, formatDate, isViewApplicant }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"p-card p-mt-2\">\r\n        <SectionHeader\r\n          icon=\"book\"\r\n          sectionTitle=\"Education\"\r\n          id=\"educationEdit\"\r\n          showAddButton=\"true\"\r\n          showEditButton=\"true\"\r\n          openModalOnCreate={() => openCreate(PROFILE.EDUCATION)}\r\n          openModalOnEdit={() => openEdit(PROFILE.EDUCATION)}\r\n          isViewApplicant={isViewApplicant}\r\n\r\n        />\r\n        {profileInfo?.educations.length > 0 ? (\r\n          profileInfo?.educations.map((education, index) => (\r\n            <div key={index}>\r\n              <div className=\"p-card-subtitle p-ml-3 p-mb-0 mainTitle\">\r\n                <span>\r\n                  <b>{education.qualification}</b> in{\" \"}\r\n                  <b className=\"experienceCompany\">{education.course}</b>\r\n                </span>\r\n                {!isViewApplicant && <span>\r\n                  <i\r\n                    className=\"pi pi-pencil mr-3\"\r\n                    onClick={() => openEdit(PROFILE.EDUCATION, education)}\r\n                    id=\"educationEdit\"\r\n                  ></i>\r\n                  <i\r\n                    style={{ cursor: \"pointer\" }}\r\n                    className=\"pi pi-times\"\r\n                    onClick={() => {\r\n                      var confirmation = window.confirm(\r\n                        \"Action is irreversible, are you sure you want to delete?\"\r\n                      );\r\n                      if (confirmation) {\r\n                        dispatch(deleteEducation(education.id));\r\n                      }\r\n                    }}\r\n                    id=\"educationEdit\"\r\n                  ></i>\r\n                </span>}\r\n              </div>\r\n              <div className=\"p-card-subtitle p-ml-3 p-mb-0\">\r\n                <b>\r\n                  <small>\r\n                    Graduation (\r\n                    {formatDate(new Date(education.yearOfGraduation))})\r\n                  </small>\r\n                </b>\r\n              </div>\r\n              <div className=\"p-card-subtitle p-ml-3 p-mb-2\">\r\n                <b>\r\n                  <small>{education.institution}</small>\r\n                </b>\r\n              </div>\r\n              <div className=\"p-card-body p-text-secondary\">\r\n                {education.address}{\" \"}\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <span></span>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Education;\r\n","import React from \"react\";\r\nimport SectionHeader from \"./SectionHeader\";\r\nimport { PROFILE } from \"constants/profile\";\r\nimport \"./UserProfile.css\";\r\nimport { Badge } from \"primereact/badge\";\r\nimport { Tag } from \"primereact/tag\";\r\n/**skills.map((skill, index) => (\r\n            <span key={index} className=\"skilltag\">\r\n              <i className=\"\"></i>\r\n              {skill.name}\r\n            </span>\r\n          )) */\r\nconst Skills = ({ openEdit, openCreate, profileInfo, isViewApplicant }) => {\r\n  const formatSkills = (skills) => {\r\n    console.log(skills);\r\n    const skillTemp =\r\n      skills.length > 0\r\n        ? skills.map((skill, i) => <span key={i}><Tag>{skill}</Tag>&nbsp;&nbsp;</span>)\r\n        : \"\";\r\n    return skillTemp;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"p-card p-mt-2\">\r\n        <SectionHeader\r\n          icon=\"tag\"\r\n          sectionTitle=\"Skills\"\r\n          id=\"skillEdit\"\r\n          showAddButton=\"true\"\r\n          showEditButton=\"true\"\r\n          openModalOnCreate={() => openEdit(PROFILE.SKILL)}\r\n          openModalOnEdit={() => openCreate(PROFILE.SKILL)}\r\n          isViewApplicant={isViewApplicant}\r\n        // onClick={mode}\r\n        />\r\n        <div className=\"p-card-body\"><strong>{formatSkills(profileInfo?.skills)}</strong></div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Skills;\r\n","import React from \"react\";\r\nimport SectionHeader from \"./SectionHeader\";\r\nimport { PROFILE } from \"constants/profile\";\r\nimport \"./UserProfile.css\";\r\nimport { Tag } from \"primereact/tag\";\r\n\r\nconst Hobbies = ({ openCreate, openEdit, profileInfo, isViewApplicant }) => {\r\n  console.log(profileInfo.hobbies)\r\n\r\n  return (\r\n    <>\r\n      <div className=\"p-card p-mt-2\">\r\n        <SectionHeader\r\n          icon=\"heart\"\r\n          sectionTitle=\"Hobbies\"\r\n          id=\"hobbyEdit\"\r\n          showAddButton=\"true\"\r\n          showEditButton=\"true\"\r\n          showAddButton=\"true\"\r\n          showEditButton=\"true\"\r\n          openModalOnCreate={() => openEdit(PROFILE.HOBBY)}\r\n          openModalOnEdit={() => openCreate(PROFILE.HOBBY)}\r\n          hasData={profileInfo?.profile}\r\n          isViewApplicant={isViewApplicant}\r\n        />\r\n        <div className=\"p-card-body p-text-secondary\">\r\n          <ul className=\"listStyle p-grid\">\r\n            {profileInfo.hobbies !== null\r\n              ? (profileInfo?.hobbies.map(hobby => <span><Tag>{hobby}</Tag>&nbsp;&nbsp;</span>))\r\n              : \"No hobbies\"}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Hobbies;\r\n","import React from \"react\";\r\nimport SectionHeader from \"./SectionHeader\";\r\nimport { PROFILE } from \"constants/profile\";\r\nimport \"./UserProfile.css\";\r\nimport { Tag } from \"primereact/tag\";\r\n\r\nconst ProfessionsOfInterest = ({ openCreate, openEdit, profileInfo, isViewApplicant }) => {\r\n\r\n  const formatInterest = (interests) => <strong>{interests.map((interest, i) => <span key={i}><Tag>{interest}</Tag>&nbsp;&nbsp;</span>)}</strong>;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"p-card p-mt-2\">\r\n        <SectionHeader\r\n          icon=\"briefcase\"\r\n          sectionTitle=\"Professions of Interest\"\r\n          id=\"POIEdit\"\r\n          showAddButton=\"true\"\r\n          showAddButton=\"true\"\r\n          showEditButton=\"true\"\r\n          openModalOnCreate={() => openEdit(PROFILE.PROFESSION)}\r\n          openModalOnEdit={() => openCreate(PROFILE.PROFESSION)}\r\n          isViewApplicant={isViewApplicant}\r\n        // onClick={mode}\r\n        />\r\n        <div className=\"p-card-body p-text-secondary\">\r\n          <ul className=\"listStyle\">\r\n            {formatInterest(profileInfo.interests)}\r\n            {/* {interests !== null ?\r\n                              interests?.map((interest, index) => (\r\n                                <li key={index}>{interest}</li>\r\n                              )) : <div>No interests</div>} */}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfessionsOfInterest;\r\n","import React from \"react\";\r\nimport SectionHeader from \"./SectionHeader\";\r\nimport { PROFILE } from \"constants/profile\";\r\nimport \"./UserProfile.css\";\r\nimport { Tag } from \"primereact/tag\";\r\n\r\nconst LocationOfInterest = ({ openCreate, openEdit, profileInfo, isViewApplicant }) => {\r\n  const formatLocation = (profileLocation) => {\r\n    console.log('profile location', profileLocation?.locations)\r\n\r\n    return <strong>{profileLocation.join(\", \")}</strong>\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"p-card p-mt-2\">\r\n        <SectionHeader\r\n          icon=\"map-marker\"\r\n          sectionTitle=\"Location of Interest\"\r\n          id=\"LOIEdit\"\r\n          showAddButton=\"true\"\r\n          showEditButton=\"true\"\r\n          openModalOnCreate={() => openEdit(PROFILE.LOCATION)}\r\n          openModalOnEdit={() => openCreate(PROFILE.LOCATION)}\r\n          isViewApplicant={isViewApplicant}\r\n        />\r\n        <div className=\"p-card-body p-text-secondary\">\r\n          {profileInfo?.locations && profileInfo?.locations.length\r\n            ? profileInfo?.locations.map((location, i) => <span key={i}><Tag>{location}</Tag>&nbsp;&nbsp;</span>)\r\n            : \"locations\"}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LocationOfInterest;\r\n","import React from \"react\";\r\nimport SectionHeader from \"./SectionHeader\";\r\nimport { PROFILE } from \"constants/profile\";\r\nimport \"./UserProfile.css\";\r\n\r\nconst ContactInformation = ({ openCreate, openEdit, profileInfo, isViewApplicant }) => {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"p-card p-mt-2\">\r\n        <SectionHeader\r\n          icon=\"phone\"\r\n          sectionTitle=\"Contact Information\"\r\n          id=\"contactInfoEdit\"\r\n          showAddButton=\"true\"\r\n          showEditButton=\"true\"\r\n          showAddButton=\"true\"\r\n          showEditButton=\"true\"\r\n          openModalOnCreate={() => openEdit(PROFILE.CONTACT_INFO)}\r\n          openModalOnEdit={() => openCreate(PROFILE.CONTACT_INFO)}\r\n          hasData={profileInfo?.profile}\r\n          isViewApplicant={isViewApplicant}\r\n        />\r\n        <div className=\"p-card-body p-text-secondary\">\r\n          <span>\r\n            <b>Phone Number:</b>\r\n            {profileInfo.contactPhoneNumber}\r\n          </span><br />\r\n          <span>\r\n            <b>Email: </b>\r\n            {profileInfo.contactEmail}\r\n          </span><br />\r\n          <span>\r\n            <b>Location: </b>\r\n            {profileInfo.address}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactInformation;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { InputTextarea } from \"primereact/inputtextarea\";\r\nimport ModeFooter from \"./ModeFooter\";\r\nimport { updateBiography } from \"../../store/modules/account\";\r\nimport SectionHeader from \"./SectionHeader\";\r\n\r\nconst BiographyForm = ({ data }) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n    reValidateMode: \"onChange\",\r\n  });\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector(state => state.account.submitting);\r\n  const [biography, setBiography] = useState(\"\");\r\n  const handleDelete = (e) => {\r\n    console.log(e.target.id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setBiography(data);\r\n  }, [data]);\r\n\r\n  const biographySubmit = (biography) => {\r\n    dispatch(updateBiography(biography));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\" p-mt-2\">\r\n        <SectionHeader\r\n          id=\"biography\"\r\n          icon=\"bookmark\"\r\n          sectionTitle=\"Biography\"\r\n          onDelete={handleDelete}\r\n        />\r\n\r\n        <div className=\"\">\r\n          <form onSubmit={handleSubmit(biographySubmit)}>\r\n            <label htmlFor=\"biographyInput\" className=\"inputLabel p-mb-2\">\r\n              Give a short descripiton of your career history\r\n            </label>\r\n            <label htmlFor=\"biographyInput\" className=\"\">\r\n              {errors?.biography?.type === \"required\" && (\r\n                <span className=\"text-danger font-weight-bold\">\r\n                  {\" \"}\r\n                  <p> &nbsp;(*{errors.biography.message})</p>\r\n                </span>\r\n              )}\r\n            </label>\r\n            <InputTextarea\r\n              name=\"profile\"\r\n              {...register(\"profile\", { required: \"required\" })}\r\n              id=\"biographyInput\"\r\n              type=\"text\"\r\n              rows=\"6\"\r\n              className=\"inputField\"\r\n              placeholder=\"Biography...\"\r\n              defaultValue={biography}\r\n            />\r\n            <ModeFooter id=\"biographyForm\" loading={loading} />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BiographyForm;\r\n","import React from 'react';\r\nimport { InputTextarea } from \"primereact/inputtextarea\";\r\n\r\nconst LimitedTextarea = ({ value , limit, register }) => {\r\n  console.log('value', value)\r\n  const [content, setContent] = React.useState(value);\r\n  const [charLength, setCharLength] = React.useState(limit);\r\n  // const [content, setContent] = React.useState(value.slice(0, limit));\r\n\r\n  const setFormattedContent = React.useCallback(\r\n    text => {\r\n      setContent(text.slice(0, limit));\r\n\r\n      const charCount = text.length;\r\n      const charLength = limit - charCount;\r\n      setCharLength(charLength);\r\n    },\r\n    [limit, setContent]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <InputTextarea\r\n        id=\"address\"\r\n        type=\"text\"\r\n        rows=\"4\"\r\n        {...register(\"description\", {\r\n          required: `* Description is required`,\r\n        })}\r\n        name=\"description\"\r\n        maxLength={limit}\r\n        onChange={event => setFormattedContent(event.target.value)}\r\n        value={content}\r\n      />\r\n      <p>{charLength}/{limit}</p>\r\n    </>\r\n  )\r\n\r\n  // return (\r\n  //   <>\r\n  //     <textarea\r\n  //       rows={rows}\r\n  //       cols={cols}\r\n  //       onChange={event => setFormattedContent(event.target.value)}\r\n  //       value={content}\r\n  //     />\r\n  //     <p>\r\n  //       {content.length}/{limit}\r\n  //     </p>\r\n  //   </>\r\n  // );\r\n}\r\n\r\nexport default LimitedTextarea","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport ModeFooter from \"./ModeFooter\";\r\nimport SectionHeader from \"./SectionHeader\";\r\nimport { Dropdown } from \"primereact/dropdown\";\r\nimport { createExperience, updateExperience } from \"store/modules/experience\";\r\nimport { Calendar } from \"primereact/calendar\";\r\nimport InputField from \"components/InputField\";\r\n\r\nimport {Checkbox} from 'primereact/checkbox';\r\nimport LimitedTextarea from \"../LimitedTextarea\";\r\n\r\nconst jobCategoryList = [\r\n  { name: \"Networking\", id: \"NY1\" },\r\n  { name: \"Retail Manager\", id: \"RM1\" },\r\n  { name: \"Life Coach\", id: \"LDN1\" },\r\n  { name: \"Graphic Design\", id: \"IST1\" },\r\n  { name: \"Teaching\", id: \"PRS1\" },\r\n  { name: \"Legal Services\", id: \"PRS3\" },\r\n];\r\nconst ExperienceForm = ({ closeEditMode, itemToEdit, mode }) => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    clearErrors,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({ mode: \"onChange\", reValidateMode: \"onChange\" });\r\n\r\n  const loading = useSelector(state => state.experience.submitting);\r\n  const [experience, setExperience] = useState({});\r\n  const [checkedCurrent, setCheckedCurrent] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (itemToEdit !== null) {\r\n      setExperience({\r\n        ...experience,\r\n        jobCategory: jobCategoryList.find(\r\n          (j) => j.name == itemToEdit.jobCategoryName\r\n        ),\r\n        startDate: new Date(itemToEdit.startDate),\r\n        endDate: new Date(itemToEdit.endDate),\r\n        location: itemToEdit.location,\r\n        description: itemToEdit.description,\r\n        jobTitle: itemToEdit.jobTitle,\r\n        company: itemToEdit.company,\r\n      });\r\n\r\n      \r\n\r\n      setValue(\"description\", itemToEdit.description);\r\n      setValue(\"startDate\", itemToEdit.startDate);\r\n      setValue(\"endDate\", itemToEdit.endDate);\r\n      setValue(\"location\", itemToEdit.location);\r\n      setValue(\"description\", itemToEdit.description);\r\n      setValue(\"jobTitle\", itemToEdit.jobTitle);\r\n      setValue(\"jobCategory\", jobCategoryList.find((j) => j.name == itemToEdit.jobCategoryName));\r\n      setValue(\"company\", itemToEdit.company);\r\n    }\r\n  }, [itemToEdit]);\r\n\r\n  const onEditCancel = (e) => {\r\n    clearErrors();\r\n    closeEditMode(e.target.id);\r\n  };\r\n\r\n  const inputChange = (e, inputId) => {\r\n    const inputName =\r\n      inputId && (inputId === \"startDate\" || \"endDate\")\r\n        ? inputId\r\n        : e.target.name;\r\n    const inputValue =\r\n      inputId && (inputId === \"startDate\" || \"endDate\")\r\n        ? e.value\r\n        : e.target.value;\r\n    const updatedExperienceObject = Object.assign({}, experience);\r\n    updatedExperienceObject[inputName] = inputValue;\r\n    setExperience({ ...experience, ...updatedExperienceObject });\r\n    setValue(inputName, inputValue, { shouldValidate: true });\r\n\r\n  };\r\n\r\n  const handleDelete = (e) => {\r\n    console.log(e.target.id);\r\n  };\r\n\r\n  const experienceSubmit = (formData) => {\r\n    formData.endDate = new Date(formData.endDate).toISOString();\r\n    formData.startDate = new Date(formData.startDate).toISOString();\r\n    formData.jobCategoryName = formData.jobCategory.name;\r\n    formData.jobCategoryId = formData.jobCategory.id;\r\n\r\n    if (mode === 'create')\r\n      dispatch(createExperience(formData));\r\n    else\r\n      dispatch(updateExperience(itemToEdit.id, formData));\r\n\r\n  };\r\n\r\n  console.log('descrption', experience)\r\n  return (\r\n    <>\r\n      <div className=\"p-mt-2\">\r\n        <SectionHeader\r\n          deleteButton=\"true\"\r\n          onDelete={handleDelete}\r\n          icon=\"star-o\"\r\n          sectionTitle=\"Job Experience\"\r\n          id={experience.id}\r\n        />\r\n        <div className=\"\">\r\n          <form onSubmit={handleSubmit(experienceSubmit)}>\r\n            <div className=\"p-fluid p-formgrid p-grid\">\r\n              <div className=\"p-field p-col-12 p-md-6\">\r\n                <label className=\"inputLabel\" htmlFor=\"jobTitle\">\r\n                  Job Title\r\n                  {errors.jobTitle && (\r\n                    <span className=\"text-danger font-weight-bold\">\r\n                      &nbsp; {errors.jobTitle.message}\r\n                    </span>\r\n                  )}\r\n                </label>\r\n                <InputField\r\n                  id=\"jobTitle\"\r\n                  inputLabel=\"Job Title\"\r\n                  register={register}\r\n                  inputChange={inputChange}\r\n                  defaultValue={experience.jobTitle}\r\n                />\r\n              </div>\r\n              <div className=\"p-field p-col-12 p-md-6\">\r\n                <label className=\"inputLabel\" htmlFor=\"company\">\r\n                  Company Name\r\n                  {errors.company && (\r\n                    <span className=\"text-danger font-weight-bold\">\r\n                      &nbsp; {errors.company.message}\r\n                    </span>\r\n                  )}\r\n                </label>\r\n                <InputField\r\n                  id=\"company\"\r\n                  inputLabel=\"Company Name\"\r\n                  register={register}\r\n                  inputChange={inputChange}\r\n                  name=\"company\"\r\n                  defaultValue={experience.company}\r\n                />\r\n              </div>\r\n              <div className=\"p-field p-col-12 p-md-6\">\r\n                <label className=\"inputLabel\" htmlFor=\"startDate\">\r\n                  Start Date\r\n                  {errors.startDate && (\r\n                    <span className=\"text-danger font-weight-bold\">\r\n                      &nbsp; {errors.startDate.message}\r\n                    </span>\r\n                  )}\r\n                </label>\r\n                <Calendar\r\n                  id=\"startDate\"\r\n                  type=\"date\"\r\n                  value={experience.startDate}\r\n                  // dateFormat='dd/mm/yy'\r\n                  name=\"startDate\"\r\n                  {...register(\"startDate\", {\r\n                    required: `* Start Date is required`,\r\n                  })}\r\n                  onSelect={(e) => {\r\n                    const inputName = \"startDate\";\r\n                    const value = new Date(e.value).toISOString();\r\n\r\n                    setValue(inputName, value, { shouldValidate: true });\r\n                  }}\r\n                  name=\"startDate\"\r\n                  {...register(\"startDate\", {\r\n                    required: `* Start date is required`,\r\n                  })}\r\n                />\r\n              </div>\r\n              <div className=\"p-field p-col-12 p-md-6\">\r\n                <label className=\"inputLabel\" htmlFor=\"endDate\">\r\n                  {\" \"}\r\n                  End Date\r\n                  {errors.endDate && (\r\n                    <span className=\"text-danger font-weight-bold\">\r\n                      &nbsp; {errors.endDate.message}\r\n                    </span>\r\n                  )}\r\n                </label>\r\n                <Calendar\r\n                  id=\"endDate\"\r\n                  type=\"date\"\r\n                  value={experience.endDate}\r\n                  // dateFormat='dd/mm/yy'\r\n                  name=\"endDate\"\r\n                  {...register(\"endDate\", {\r\n                    required: `* End Date is required`,\r\n                  })}\r\n                  onSelect={(e) => {\r\n                    const inputName = \"endDate\";\r\n                    const value = e.value.toISOString();\r\n                    setValue(inputName, value, { shouldValidate: true });\r\n                  }}\r\n                  name=\"endDate\"\r\n                  {...register(\"endDate\", {\r\n                    required: `* End date is required`,\r\n                  })}\r\n                />\r\n              </div>\r\n              <div className=\"p-field p-col-12 p-md-6\">\r\n                <label className=\"inputLabel\" htmlFor=\"jobCategory\">\r\n                  Job Category\r\n                  {errors.jobCategory && (\r\n                    <span className=\"text-danger font-weight-bold\">\r\n                      &nbsp; {errors.jobCategory.message}\r\n                    </span>\r\n                  )}\r\n                </label>\r\n                <Dropdown\r\n                  options={jobCategoryList}\r\n                  optionLabel=\"name\"\r\n                  filter\r\n                  showClear\r\n                  filterBy=\"name\"\r\n                  icon=\"pi pi-plus\"\r\n                  id=\"jobCategory\"\r\n                  name=\"jobCategory\"\r\n                  value={experience.jobCategory}\r\n                  {...register(\"jobCategory\", {\r\n                    required: `* Job Category is required`,\r\n                  })}\r\n                  onChange={(e) => inputChange(e)}\r\n                />\r\n              </div>\r\n              <div className=\"p-field p-col-12 p-md-6\">\r\n                <label className=\"inputLabel\" htmlFor=\"address\">\r\n                  Location\r\n                  {errors.location && (\r\n                    <span className=\"text-danger font-weight-bold\">\r\n                      &nbsp; {errors.location.message}\r\n                    </span>\r\n                  )}\r\n                </label>\r\n                <InputField\r\n                  id=\"location\"\r\n                  inputLabel=\"Location\"\r\n                  register={register}\r\n                  inputChange={inputChange}\r\n                  defaultValue={experience.location}\r\n                />\r\n              </div>\r\n              <div className=\"p-field p-col-12\">\r\n                <label className=\"inputLabel\" htmlFor=\"address\">\r\n                  Description\r\n                  {errors.description && (\r\n                    <span className=\"text-danger font-weight-bold\">\r\n                      &nbsp; {errors.description.message}\r\n                    </span>\r\n                  )}\r\n                </label>\r\n          \r\n                <LimitedTextarea \r\n                  value={experience?.description } \r\n                  limit={500} \r\n                  register={register}\r\n                />\r\n                {/* <InputTextarea\r\n                  id=\"address\"\r\n                  type=\"text\"\r\n                  rows=\"4\"\r\n                  {...register(\"description\", {\r\n                    required: `* Description is required`,\r\n                  })}\r\n                  name=\"description\"\r\n                  onChange={(e) => inputChange(e)}\r\n                  value={experience.description}\r\n                /> */}\r\n              </div>\r\n              <div className=\"p-field p-col-12\">\r\n                <label htmlFor=\"current\">\r\n                  <Checkbox\r\n                    name=\"current\"\r\n                    onChange={e => {\r\n                      setCheckedCurrent(e.checked);\r\n                      // console.log(e)\r\n                      setExperience({...experience, [e.target.name]: e.checked});\r\n                      setValue(e.target.name, e.checked, { shouldValidate: true });\r\n                    }} checked={checkedCurrent}></Checkbox>\r\n                  Set as current\r\n                </label>\r\n              </div>\r\n            </div>\r\n            {loading && <i className=\"fa fa-spin fa-spinner\"></i>}\r\n            <ModeFooter id=\"experienceEdit\" onCancel={onEditCancel} loading={loading} />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default ExperienceForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { InputTextarea } from 'primereact/inputtextarea';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ModeFooter from './ModeFooter';\r\nimport { loadCountry } from 'store/modules/location';\r\nimport { updateContactInfo } from 'store/modules/account';\r\nimport SectionHeader from './SectionHeader';\r\nimport { Dropdown } from 'primereact/dropdown';\r\n\r\nconst ContactInfoForm = ({ closeEditMode, data }) => {\r\n  const { register, handleSubmit, setValue, trigger, clearErrors, formState: { errors } } = useForm({\r\n    mode: \"onChange\",\r\n    reValidateMode: \"all\"\r\n  });\r\n  const dispatch = useDispatch();\r\n  const countries = useSelector(state => state.location.countries);\r\n  const states = useSelector(state => state.location.states);\r\n\r\n\r\n  const [contactInfo, setContactInfo] = useState({\r\n    phoneNumber: '',\r\n    country: \"\",\r\n    email: \"\",\r\n    city: \"\",\r\n    postalCode: \"\",\r\n    address: \"\"\r\n  });\r\n  const profileInfo = useSelector(state => state.account.profileInfo);\r\n  const loading = useSelector(state => state.account.submitting);\r\n  const [selectCountry, setSelectedCountry] = useState(null);\r\n\r\n  useEffect(() => {\r\n    dispatch(loadCountry());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (profileInfo) {\r\n      console.log('profileinfo',profileInfo)\r\n      setContactInfo({\r\n        ...profileInfo,\r\n        country: countries.find(c => c.name === profileInfo.country) ||  \"\",\r\n        phoneNumber: profileInfo.contactPhoneNumber ||  \"\",\r\n        email: profileInfo.email ||  \"\",\r\n        city: profileInfo.city||  \"\",\r\n        postalCode: profileInfo.postalCode ||  \"\",\r\n        address: profileInfo.address ||  \"\"\r\n      });\r\n\r\n      for (const [key, value] of Object.entries(profileInfo)) {\r\n        setValue(key, value);\r\n      }\r\n      setValue('phoneNumber', profileInfo.contactPhoneNumber); //`contactPhoneNumber` is variable to bind to `phoneNumber`\r\n      setValue('country', profileInfo.country);\r\n    }\r\n   \r\n  }, [profileInfo]);\r\n\r\n  \r\n  \r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    const contactData = { ...contactInfo, [name]: value };\r\n    setContactInfo(contactData);\r\n  }\r\n  \r\n  const contactInfoSubmit = (data) => dispatch(updateContactInfo(contactInfo));\r\n  \r\n  const { phoneNumber, email, country, city, postalCode, address } = contactInfo;\r\n  return (\r\n    <>\r\n      <div className=\"p-mt-2\">\r\n        <SectionHeader icon=\"phone\" sectionTitle=\"Contact Information\" />\r\n        <div className=\"\">\r\n          <form onSubmit={handleSubmit(contactInfoSubmit)}>\r\n            <span className=\"skillInput p-mb-4 p-fluid p-formgrid p-grid\">\r\n              <div className=\"p-field p-col-12 p-md-6\">\r\n                <label htmlFor=\"phoneNumber\" className=\"inputLabel p-pr-3\">Phone Number\r\n                  {errors.phoneNumber && <small className=\"text-danger font-weight-bold\">&nbsp; {errors.phoneNumber.message}</small>}\r\n                </label>\r\n                <InputText\r\n                  id=\"phoneNumber\"\r\n                  name=\"phoneNumber\"\r\n                  {...register(\"phoneNumber\",\r\n                    { validate: value => value?.length > 0 || email?.length > 0 || \"* Phone Number is required\" }\r\n                  )}\r\n                  onChange={handleChange}\r\n                  value={phoneNumber}\r\n                />\r\n              </div>\r\n              <div className=\"p-field p-col-12 p-md-6\">\r\n                <label htmlFor=\"email\" className=\"inputLabel p-pr-3\">Email Address\r\n                  {errors.email && <small className=\"text-danger font-weight-bold\">&nbsp;\r\n                    {errors?.email?.message}</small>}\r\n                </label>\r\n                <InputText\r\n                  name=\"email\"\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  {...register(\"email\",\r\n                    {\r\n                      validate: value => value?.length > 0 || phoneNumber?.length > 0 || \"* Email is required\",\r\n                      pattern: {\r\n                        value: /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n                        message: \"* Entered value does not match email format\"\r\n                      }\r\n                    })}\r\n                  onChange={handleChange}\r\n                  value={email}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"p-field p-col-12 p-md-4 p-py-0 p-pl-2 p-pr-2\">\r\n                <label htmlFor=\"country\" className=\"inputLabel p-pr-3\">Country *\r\n                  {errors.country && <small className=\"text-danger font-weight-bold\">&nbsp; {errors.country.message}</small>}\r\n                </label>\r\n\r\n                <Dropdown\r\n                  options={countries}\r\n                  optionLabel=\"name\"\r\n                  filter\r\n                  showClear\r\n                  filterBy=\"name\"\r\n                  icon=\"pi pi-plus\"\r\n                  id=\"country\"\r\n                  name=\"country\"\r\n                  {...register(\"country\")}\r\n                  value={country}\r\n                  onChange={handleChange}\r\n                  \r\n                />\r\n              </div>\r\n\r\n              <div className=\"p-field p-col-12 p-md-4 p-py-0 p-pl-2 p-pr-2\">\r\n                <label htmlFor=\"city\" className=\"inputLabel p-pr-3\">City *\r\n                  {errors.city && <small className=\"text-danger font-weight-bold\">&nbsp; {errors.city.message}</small>}\r\n                </label>\r\n                <InputText\r\n                  icon=\"pi pi-plus\"\r\n                  id=\"city\"\r\n                  name=\"city\"\r\n                  placeholder=\"City\"\r\n                  {...register(\"city\", { required: ` City is required` })}\r\n                  value={city}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"p-field p-col-12 p-md-4 p-py-0 p-pl-2 p-pr-2\" >\r\n                <label htmlFor=\"postalCode\" className=\"inputLabel p-pr-3\">Postal Code *\r\n                  {errors.postalCode && <span className=\"text-danger font-weight-bold\">&nbsp; {errors.postalCode.message}</span>}\r\n                </label>\r\n                <InputText\r\n                  id=\"postalCode\"\r\n                  name=\"postalCode\"\r\n                  placeholder=\"Postal Code\"\r\n                  {...register(\"postalCode\", {})}\r\n                  onChange={handleChange}\r\n                  value={postalCode}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"p-field p-col-12 p-md-12\">\r\n                <label htmlFor=\"address\" className=\"inputLabel\">Address *\r\n                  {errors.address && <span className=\"text-danger font-weight-bold\">&nbsp; {errors.address.message}</span>}\r\n                </label>\r\n                <InputTextarea\r\n                  id=\"address\"\r\n                  name=\"address\"\r\n                  type=\"text\"\r\n                  rows=\"2\"\r\n                  className=\"inputField\"\r\n                  placeholder=\"Address\"\r\n                  {...register(\"address\")}\r\n                  value={address}\r\n                  onChange={e => {\r\n                    setContactInfo({ ...contactInfo, address: e.target.value });\r\n                    setValue('address', e.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </span>\r\n            <div>\r\n            </div>\r\n            <ModeFooter id=\"contactInfoEdit\" loading={loading} onCancel={closeEditMode} />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>);\r\n}\r\n\r\nexport default ContactInfoForm;","import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ModeFooter from \"./ModeFooter\";\r\nimport SectionHeader from \"./SectionHeader\";\r\nimport { InputTextarea } from \"primereact/inputtextarea\";\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { Calendar } from \"primereact/calendar\";\r\nimport { Dropdown } from \"primereact/dropdown\";\r\nimport { updateEducation, createEducation } from \"store/modules/education\";\r\nimport { fetchCountries } from \"store/modules/util\";\r\nimport { getQualifications } from \"store/modules/admin\";\r\n\r\n\r\n\r\nconst EducationForm = ({ educationObject, componentStatus, closeEditMode, itemToEdit, mode }) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    clearErrors,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n    reValidateMode: \"all\",\r\n  });\r\n\r\n  const loading = useSelector((state) => state.education.submitting);\r\n  const dispatch = useDispatch();\r\n  \r\n  const [yearOfGraduation, setYearOfGraduation] = useState(null);\r\n  const [education, setEducation] = useState({\r\n    institution: \"\",\r\n    qualification: \"\",\r\n    course: \"\",\r\n\r\n    country: \"\",\r\n    city: \"\",\r\n    address: \"\",\r\n  });\r\n\r\n  let todayDate = new Date();\r\n  const countryList = useSelector(state => state.util.countries);\r\n  const qualificationList = useSelector(state => state.admin.qualifications);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCountries());\r\n    dispatch(getQualifications())\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (Object.values(itemToEdit).length >= 1) {\r\n      console.log('item edit', itemToEdit)\r\n      setEducation({\r\n        ...education,\r\n        institution: itemToEdit.institution,\r\n        qualification: qualificationList.find(q => q.name == itemToEdit.qualification),\r\n        course: itemToEdit.course,\r\n\r\n        country: countryList.find(c => c.name == itemToEdit.country),\r\n        city: itemToEdit.city,\r\n        address: itemToEdit.address,\r\n      });\r\n      const newDate = new Date(itemToEdit.yearOfGraduation).toISOString();\r\n      setYearOfGraduation(new Date(itemToEdit.yearOfGraduation));\r\n\r\n      setValue('institution', itemToEdit.institution);\r\n      setValue('qualification', itemToEdit.qualification);\r\n      setValue('course', itemToEdit.course);\r\n      setValue('city', itemToEdit.city);\r\n      setValue('country', itemToEdit.country);\r\n      setValue('yearOfGraduation', newDate);\r\n      setValue('address', itemToEdit.address);\r\n\r\n    }\r\n  }, [itemToEdit])\r\n\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setEducation({ ...education, [name]: value });\r\n    setValue(name, value, { shouldValidate: true });\r\n  };\r\n\r\n  const handleDelete = (e) => {\r\n    console.log(e.target.id);\r\n  };\r\n\r\n  const onEditCancel = (e) => {\r\n    for (const [key] of Object.entries(education)) {\r\n      if (key !== \"id\") {\r\n        setValue(key, null);\r\n      }\r\n    }\r\n    setEducation({});\r\n    clearErrors();\r\n    closeEditMode(e.target.id);\r\n  };\r\n\r\n  const educationSubmit = (data) => {\r\n    console.log(data);\r\n    data.qualification = data.qualification.name;\r\n    data.yearOfGraduation = yearOfGraduation.toISOString();\r\n\r\n    if (mode === 'create') {\r\n      dispatch(createEducation(data));\r\n    } else {\r\n      dispatch(updateEducation(itemToEdit.id, data));\r\n    }\r\n\r\n  };\r\n\r\n  const monthNavigatorTemplate = (e) => {\r\n    return <Dropdown value={e.value} options={e.options} onChange={(event) => e.onChange(event.originalEvent, event.value)} style={{ lineHeight: 1 }} />;\r\n}\r\n\r\nconst yearNavigatorTemplate = (e) => {\r\n    return <Dropdown value={e.value} options={e.options} onChange={(event) => e.onChange(event.originalEvent, event.value)} className=\"p-ml-2\" style={{ lineHeight: 1 }} />;\r\n}\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* {componentStatus?.educationEdit?.length > 0 && */}\r\n      <div className=\"p-mt-2\">\r\n        <SectionHeader\r\n          componentStatus={componentStatus}\r\n          deleteButton=\"true\"\r\n          onDelete={handleDelete}\r\n          icon=\"book\"\r\n          sectionTitle=\"Education\"\r\n          id={education.id}\r\n        />\r\n        <div className=\"\">\r\n          <form onSubmit={handleSubmit(educationSubmit)}>\r\n            <div className=\"p-fluid p-formgrid p-grid\">\r\n              <div className=\"p-field p-col-12 p-md-6\">\r\n                <label className=\"inputLabel\" htmlFor=\"certificateTitle\">\r\n                  Qualification\r\n                  {errors.qualification && (\r\n                    <span className=\"text-danger font-weight-bold\">\r\n                      &nbsp; {errors.qualification.message}\r\n                    </span>\r\n                  )}\r\n                </label>\r\n                <Dropdown\r\n                  options={qualificationList}\r\n                  optionLabel=\"name\"\r\n                  filter\r\n                  showClear\r\n                  filterBy=\"name\"\r\n                  icon=\"pi pi-plus\"\r\n                  id=\"qualification\"\r\n                  name=\"qualification\"\r\n                  value={education.qualification}\r\n                  {...register(\"qualification\", {\r\n                    required: `* Qualification is required`,\r\n                  })}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"p-field p-col-12 p-md-6\">\r\n                <label className=\"inputLabel\" htmlFor=\"course\">\r\n                  Course\r\n                  {errors.course && (\r\n                    <span className=\"text-danger font-weight-bold\">\r\n                      &nbsp; {errors.course.message}\r\n                    </span>\r\n                  )}\r\n                </label>\r\n                <InputField\r\n                  id=\"course\"\r\n                  name=\"course\"\r\n                  inputLabel=\"course\"\r\n                  register={register}\r\n                  inputChange={handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"p-field p-col-12\">\r\n                <label className=\"inputLabel\" htmlFor=\"yearOfGraduation\">\r\n                  Year of Graduation\r\n                  {errors.yearOfGraduation && (\r\n                    <span className=\"text-danger font-weight-bold\">\r\n                      &nbsp; {errors.yearOfGraduation.message}\r\n                    </span>\r\n                  )}\r\n                </label>\r\n                \r\n                <Calendar \r\n                  id=\"navigatorstemplate\" \r\n                  value={yearOfGraduation} \r\n                  onChange={(e) => setYearOfGraduation(e.value)} \r\n                  monthNavigator \r\n                  yearNavigator \r\n                  yearRange=\"2010:2030\"\r\n                  monthNavigatorTemplate={monthNavigatorTemplate} \r\n                  yearNavigatorTemplate={yearNavigatorTemplate} \r\n                  dateFormat=\"yy\" \r\n                />\r\n              \r\n              </div>\r\n              <div className=\"p-field p-col-12 p-md-12\">\r\n                <label className=\"inputLabel\" htmlFor=\"institution\">\r\n                  Institution Name\r\n                  {errors.institution && (\r\n                    <span className=\"text-danger font-weight-bold\">\r\n                      &nbsp; {errors.institution.message}\r\n                    </span>\r\n                  )}\r\n                </label>\r\n                <InputField\r\n                  id=\"institution\"\r\n                  inputLabel=\"Institution Name\"\r\n                  register={register}\r\n                  name=\"institution\"\r\n                  inputChange={handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"p-field p-col-12 p-md-6\">\r\n                <label className=\"inputLabel\" htmlFor=\"city\">\r\n                  City\r\n                  {errors.city && (\r\n                    <span className=\"text-danger font-weight-bold\">\r\n                      &nbsp; {errors.city.message}\r\n                    </span>\r\n                  )}\r\n                </label>\r\n                <InputField\r\n                  id=\"city\"\r\n                  inputLabel=\"City\"\r\n                  register={register}\r\n                  name=\"city\"\r\n                  inputChange={handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"p-field p-col-12 p-md-6\">\r\n                <label className=\"inputLabel\" htmlFor=\"country\">\r\n                  Country\r\n                  {errors.country && (\r\n                    <span className=\"text-danger font-weight-bold\">\r\n                      &nbsp; {errors.country.message}\r\n                    </span>\r\n                  )}\r\n                </label>\r\n                <Dropdown\r\n                  options={countryList}\r\n                  optionLabel=\"name\"\r\n                  filter\r\n                  showClear\r\n                  filterBy=\"name\"\r\n                  icon=\"pi pi-plus\"\r\n                  id=\"country\"\r\n                  name=\"country\"\r\n                  value={education.country}\r\n                  {...register(\"country\", {\r\n                    required: `* Country is required`,\r\n                  })}\r\n                  onChange={(e) => {\r\n                    setEducation({ ...education, [\"country\"]: e.target.value });\r\n                    const value = e.target.value.name;\r\n                    setValue(\"country\", value, { shouldValidate: true });\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"p-field p-col-12\">\r\n                <label className=\"inputLabel\" htmlFor=\"address\">\r\n                  Address\r\n                  {errors.address && (\r\n                    <span className=\"text-danger font-weight-bold\">\r\n                      &nbsp; {errors.address.message}\r\n                    </span>\r\n                  )}\r\n                </label>\r\n                <InputTextarea\r\n                  id=\"address\"\r\n                  type=\"text\"\r\n                  rows=\"4\"\r\n                  {...register(\"address\", {\r\n                    required: `* Address is required`,\r\n                  })}\r\n                  name=\"address\"\r\n                  onChange={handleChange}\r\n                  value={education.address} \r\n                  maxLength={500}\r\n                />\r\n              </div>\r\n              \r\n            </div>\r\n            <ModeFooter\r\n              id=\"educationEdit\"\r\n              onCancel={onEditCancel}\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n      {/* } */}\r\n    </>\r\n  );\r\n};\r\n\r\nconst InputField = ({ id, inputLabel, register, inputChange }) => {\r\n  return (\r\n    <InputText\r\n      id={id}\r\n      type=\"text\"\r\n      name={id}\r\n      {...register(id, {\r\n        required: `* ${inputLabel} is required`,\r\n      })}\r\n      onChange={inputChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EducationForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Tag } from \"primereact/tag\";\r\nimport ModeFooter from \"./ModeFooter\";\r\nimport SectionHeader from \"./SectionHeader\";\r\nimport { Dropdown } from \"primereact/dropdown\";\r\nimport { updateLOI } from \"store/modules/account\";\r\n\r\nconst LOIList = [\r\n  { name: \"New York\", id: \"NY\" },\r\n  { name: \"Rome\", id: \"RM\" },\r\n  { name: \"London\", id: \"LDN\" },\r\n  { name: \"Istanbul\", id: \"IST\" },\r\n  { name: \"Paris\", id: \"PRS\" },\r\n  { name: \"Paris11\", id: \"PRS11\" },\r\n  { name: \"Paris22\", id: \"PRS22\" },\r\n];\r\n\r\nconst LOIForm = ({ data, closeEditMode }) => {\r\n  const { register, handleSubmit, setValue } = useForm();\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector((state) => state.account.loading);\r\n\r\n  const [LOIs, setLOIs] = useState([]);\r\n  const [currentLOI, setCurrentLOI] = useState(\"\");\r\n\r\n  const searchObjectArrayValues = (array, value) => {\r\n    const LOIExists = array.filter((LOI) => LOI.id === value);\r\n    return !Boolean(LOIExists.length > 0);\r\n  };\r\n\r\n  const handleLOIChange = (e) => {\r\n    const value = e.target.value;\r\n    setCurrentLOI(value);\r\n  };\r\n\r\n  const handleLOIAdd = () => {\r\n    if (LOIs.length > 2) {\r\n      console.log('loi is greater than 2');\r\n    }else{\r\n      const { id } = currentLOI;\r\n  \r\n      if (searchObjectArrayValues(LOIs, id)) {\r\n        setLOIs([...LOIs, currentLOI]);\r\n      }\r\n      setValue(\"location\", LOIs);\r\n      setCurrentLOI(\"\");\r\n    }\r\n  };\r\n  const handleLOIDelete = (loiToRemove) => {\r\n    // if (e.target.className === \"p-tag-icon pi pi-times\") {\r\n    const newLOIArray = LOIs.filter((LOI) => LOI !== loiToRemove);\r\n    setLOIs(newLOIArray);\r\n    setValue(\"location\", newLOIArray);\r\n    // }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data?.length > 0) {\r\n      setLOIs(data);\r\n      register(\"LOI\");\r\n      setValue(\"LOI\", data);\r\n    }\r\n  }, []);\r\n\r\n  const LOISubmit = (loiData) => {\r\n    const dataToPost = LOIs.map(loi => loi.name);\r\n    dispatch(updateLOI(dataToPost));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"p-mt-2\">\r\n        <SectionHeader icon=\"briefcase\" sectionTitle=\"Locations of Interest\" />\r\n        <div className=\"\">\r\n          <form onSubmit={handleSubmit(LOISubmit)}>\r\n            <span className=\"skillInput p-mb-4\">\r\n              <label htmlFor=\"LOIInput\" className=\"inputLabel p-pr-3\">\r\n                Add up to 2 locations of interest\r\n              </label>\r\n            </span>\r\n            {LOIs.length > 0 ? (\r\n              LOIs.map((LOI, index) => (\r\n                <button\r\n                  key={index}\r\n                  onClick={(e) => handleLOIDelete(LOI)}\r\n                  type=\"button\"\r\n                  className=\"p-mr-2 p-p-0 tag-container\"\r\n                  id={LOI.id}\r\n                >\r\n                  <Tag\r\n                    value={LOI}\r\n                    icon=\"pi pi-times\"\r\n                    className=\"p-p-2\"\r\n                  ></Tag>\r\n                </button>\r\n              ))\r\n            ) : (\r\n              <div>No tags</div>\r\n            )}\r\n            <span className=\"skillInput\">\r\n              <Dropdown\r\n                value={currentLOI}\r\n                options={LOIList}\r\n                onChange={handleLOIChange}\r\n                optionLabel=\"name\"\r\n                filter\r\n                showClear\r\n                filterBy=\"name\"\r\n                placeholder=\"Select LOI\"\r\n                icon=\"pi pi-plus\"\r\n                id=\"LOIInput\"\r\n              />\r\n              <i className=\"pi pi-plus\" onClick={handleLOIAdd}></i>\r\n            </span>\r\n            <ModeFooter\r\n              id=\"LOIEdit\"\r\n              loading={loading}\r\n              onCancel={closeEditMode}\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LOIForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { Tag } from \"primereact/tag\";\r\nimport ModeFooter from \"./ModeFooter\";\r\nimport SectionHeader from \"./SectionHeader\";\r\nimport { updateUserHobies } from \"store/modules/account\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst HobbyForm = ({ data, closeEditMode }) => {\r\n  const loading = useSelector(state => state.account.loading);\r\n  const dispatch = useDispatch();\r\n\r\n  const { register, handleSubmit, setValue } = useForm({\r\n    mode: \"onChange\",\r\n    reValidateMode: \"onChange\",\r\n  });\r\n\r\n  const [hobbies, setHobbies] = useState([]);\r\n  const [hobbyInputValue, setHobbyInputValue] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (data?.length > 0) {\r\n      setHobbies(data);\r\n      register(\"hobbies\");\r\n      setValue(\"hobbies\", data);\r\n    }\r\n  }, [data]);\r\n\r\n\r\n  const handleHobbyAdd = () => {\r\n    // const hobby = document.getElementById(\"hobbyInput\").value;\r\n    const hobby = hobbyInputValue;\r\n    if (hobbies?.includes(hobby.trim())) {\r\n      return;\r\n    }\r\n    if (hobby.trim() && hobbies.length < 5) {\r\n      setHobbies([...hobbies, hobby.trim()]);\r\n      setValue(\"hobbies\", hobbies);\r\n      setHobbyInputValue('');\r\n    }\r\n  };\r\n\r\n  const handleHobbyDelete = (e) => {\r\n    if (e.target.className === \"p-tag-icon pi pi-times\") {\r\n      const newHobbyArray = hobbies.filter(\r\n        (hobby) => hobby !== e.currentTarget.id\r\n      );\r\n      setHobbies(newHobbyArray);\r\n      setValue(\"hobbies\", newHobbyArray);\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   if (data?.length > 0) {\r\n  //     register(\"hobbies\");\r\n  //     setValue(\"hobbies\", data);\r\n  //     setHobbies(data)\r\n  //   }\r\n  // }, []);\r\n\r\n  const hobbySubmit = (hobby) => {\r\n    dispatch(updateUserHobies(hobbies));\r\n    \r\n  };\r\n\r\n  const componentStatus = { skills: \"add\" };\r\n  if (data?.length > 0) {\r\n    componentStatus.skills = \"edit\";\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"p-card p-mt-2\">\r\n        <SectionHeader\r\n          componentStatus={componentStatus}\r\n          icon=\"heart\"\r\n          sectionTitle=\"Hobbies\"\r\n        />\r\n        <div className=\"p-card-body\">\r\n          <form onSubmit={handleSubmit(hobbySubmit)}>\r\n            <span className=\"skillInput p-mb-4\">\r\n              <div>\r\n                <label htmlFor=\"hobbyInput\" className=\"inputLabel p-pr-3\">\r\n                  Add up to 5 hobbies\r\n                </label>\r\n                <InputText\r\n                  id=\"hobbyInput\"\r\n                  type=\"text\"\r\n                  // name=\"hobbies\"\r\n                  placeholder=\"Add a hobby...\"\r\n                  // {...register(\"hobbies\", {})}\r\n                  value={hobbyInputValue}\r\n                  onChange={(e) => setHobbyInputValue(e.target.value)}\r\n                />\r\n                <i className=\"pi pi-plus\" onClick={(e) => handleHobbyAdd(e)}>\r\n                  {\" \"}\r\n                  Add\r\n                </i>\r\n              </div>\r\n            </span>\r\n            <div>\r\n              {hobbies?.map((hobby, index) => (\r\n                <button\r\n                  key={index}\r\n                  onClick={(e) => handleHobbyDelete(e)}\r\n                  type=\"button\"\r\n                  className=\"p-mr-2 p-p-0 tag-container\"\r\n                  id={hobby}\r\n                >\r\n                  <Tag value={hobby} icon=\"pi pi-times\" className=\"p-p-2\"></Tag>\r\n                </button>\r\n              ))}\r\n            </div>\r\n            <ModeFooter id=\"hobbyEdit\" loading={loading} onCancel={closeEditMode} />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HobbyForm;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Button } from \"primereact/button\";\r\nimport { OverlayPanel } from \"primereact/overlaypanel\";\r\nimport { Toast } from \"primereact/toast\";\r\nimport SectionHeader from \"./SectionHeader\";\r\nimport ModeFooter from \"./ModeFooter\";\r\nimport { updateProfilePortfolio } from \"store/modules/account\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst PortfolioForm = ({ data, closeEditMode }) => {\r\n  const { handleSubmit } = useForm();\r\n  const toast = useRef(null);\r\n  const ref = useRef({});\r\n  const [portfolioItems, setPortfolioItems] = useState([]);\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n\r\n  const loading = useSelector((state) => state.account.loading);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (data?.length > 0) {\r\n      setPortfolioItems(data);\r\n    }\r\n    \r\n  }, []);\r\n\r\n  const deletePortfolio = (e) => {\r\n    const newPortfolioArray = portfolioItems.filter(\r\n      (item) => item !== e.target.id\r\n    );\r\n    setPortfolioItems(newPortfolioArray);\r\n  };\r\n\r\n\r\n  const addPortfolio = (e) => {\r\n    if (portfolioItems.length >= 10) {\r\n     alert(\"Maximum number images exceeded\");\r\n      return;\r\n    }\r\n\r\n    if (e.target.files.length) {\r\n      const file = e.target.files[0];\r\n      const preview = URL.createObjectURL(e.target.files[0]);\r\n      const newPortfolioArray = [...portfolioItems];\r\n      newPortfolioArray.unshift({\r\n        id: \"portfolio\" + (portfolioItems.length + 1),\r\n        imageURL: preview,\r\n      });\r\n      setPortfolioItems(newPortfolioArray.map(p => p.imageURL));\r\n\r\n      setSelectedFiles([...selectedFiles, file]);\r\n    }\r\n  };\r\n\r\n  const componentStatus = { portfolio: \"add\" };\r\n  if (data?.length > 0) {\r\n    componentStatus.portfolio = \"edit\";\r\n  }\r\n\r\n  const portfolioSubmit = () => {\r\n    const formData = new FormData();\r\n\r\n    selectedFiles.forEach((file) => {\r\n      const extension = file.type.replace(/(.*)\\//g, \"\");\r\n      const filename = `${uuidv4()}.${extension}`;\r\n      console.log(filename);\r\n      formData.append(\"image\", file, filename);\r\n    });\r\n    dispatch(updateProfilePortfolio(formData));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"p-card p-mt-2\">\r\n        <Toast ref={toast} />\r\n        <SectionHeader\r\n          componentStatus={componentStatus}\r\n          icon=\"images\"\r\n          sectionTitle=\"Portfolio\"\r\n        />\r\n        <div className=\"p-card-body\">\r\n          <form onSubmit={handleSubmit(portfolioSubmit)}>\r\n            <span className=\"width-100 p-mb-4\">\r\n              <div className=\"p-grid\">\r\n                <div className=\"p-sm-6 p-md-3 p-col-12 editPortfolio-container p-p-0 p-mb-3\">\r\n                  <div className=\"p-mx-2\">\r\n                    <label htmlFor=\"addPortfolioItem\">\r\n                      <i className=\"pi pi-plus-circle portfolioItem-add\"></i>\r\n                    </label>\r\n                    <input\r\n                      type=\"file\"\r\n                      name=\"portfolio\"\r\n                      id=\"addPortfolioItem\"\r\n                      style={{ display: \"none\" }}\r\n                      onChange={addPortfolio}\r\n                      onClick={(e) => (e.target.value = null)}\r\n                      accept=\"image/*\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                {portfolioItems.length > 0 &&\r\n                  portfolioItems.map((item, index) => (\r\n                    <span\r\n                      className=\"p-sm-6 p-md-3 p-col-12 editPortfolio-container p-p-0 p-mb-3\"\r\n                      key={index}\r\n                    > \r\n                      <div className=\"p-mx-2\">\r\n                        <img src={item} alt=\"Portfolio Item\" />\r\n                        <span className=\"portfolioItem-icons\">\r\n                          <Button\r\n                            type=\"button\"\r\n                            icon=\"pi pi-ellipsis-h\"\r\n                            onClick={(e) => ref.current[item].toggle(e)}\r\n                          />\r\n                          <OverlayPanel\r\n                            ref={(element) => (ref.current[item] = element)}\r\n                          >\r\n                            <div\r\n                              className=\"p-py-2 p-px-3\"\r\n                              onClick={deletePortfolio}\r\n                              id={item}\r\n                            >\r\n                              <i className=\"pi pi-trash p-pr-2\"></i> Delete\r\n                              Image\r\n                            </div>\r\n                          </OverlayPanel>\r\n                        </span>\r\n                      </div>\r\n                    </span>\r\n                  ))}\r\n              </div>\r\n            </span>\r\n            <div></div>\r\n            <ModeFooter\r\n              loading={loading}\r\n              id=\"portfolioEdit\"\r\n              onCancel={closeEditMode}\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PortfolioForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport SectionHeader from \"./SectionHeader\";\r\nimport { Tag } from \"primereact/tag\";\r\nimport { Dropdown } from \"primereact/dropdown\";\r\nimport ModeFooter from \"./ModeFooter\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createSkill, deleteSkill } from \"store/modules/userSkill\";\r\nimport { getSkills } from \"store/modules/admin\";\r\n\r\n// const skillsList = [\"Java\", \"Javascript\", \"Python\", \"Database\", \"Graphic Design\", \"Web Design\", \"Software Analysis\"];\r\n\r\nconst SkillForm = ({ data, closeEditMode }) => {\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector((state) => state.userSkill.loading);\r\n  const skillsList = useSelector((state) => state.admin.skills);\r\n  const { register, handleSubmit, setValue } = useForm();\r\n\r\n  const [currentSkill, setCurrentSkill] = useState(\"\");\r\n  const [skills, setSkills] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getSkills())\r\n  }, [])\r\n\r\n\r\n  useEffect(() => {\r\n    if (data?.length > 0) {\r\n      console.log('data', data)\r\n      setCurrentSkill();\r\n      setSkills(data);\r\n      register(\"skills\");\r\n      setValue(\"skills\", data);\r\n    }\r\n  }, [data]);\r\n\r\n  const searchObjectArrayValues = (array, object) => {\r\n    const skillExists = array.filter((skill) => skill.id === object.id);\r\n    return !Boolean(skillExists.length > 0);\r\n  };\r\n\r\n  const handleSkillChange = (e) => {\r\n    setCurrentSkill(e.value);\r\n  };\r\n\r\n\r\n\r\n  const handleSkillAdd = () => {\r\n    if (skills.length === 10) {\r\n      setCurrentSkill(\"\");\r\n      return;\r\n    }\r\n\r\n    if (currentSkill) {\r\n      if (searchObjectArrayValues(skills, currentSkill)) {\r\n        setSkills([...skills, currentSkill.name]);\r\n        setValue(\"skills\", skills);\r\n        setCurrentSkill(\"\");\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleSkillDelete = (skillToDelete) => {\r\n\r\n    const newSkillArray = skills.filter(\r\n      (skill) => skill !== skillToDelete\r\n    );\r\n\r\n    setSkills(newSkillArray);\r\n    setValue(\"skills\", newSkillArray);\r\n  };\r\n\r\n  const skillSubmit = (skill) => {\r\n    dispatch(createSkill(skills));\r\n  };\r\n\r\n  const componentStatus = { skills: \"add\" };\r\n  if (data?.length > 0) {\r\n    componentStatus.skills = \"edit\";\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"p-mt-2\">\r\n        <SectionHeader\r\n          componentStatus={componentStatus}\r\n          icon=\"tag\"\r\n          sectionTitle=\"Skills\"\r\n        />\r\n        <div className=\"\">\r\n          <form onSubmit={handleSubmit(skillSubmit)}>\r\n            <label htmlFor=\"skillInput\" className=\"inputLabel p-pr-3\">\r\n              Add up to 10 skills\r\n            </label>\r\n            {skills.map((skill, index) => (\r\n              <button\r\n                key={index}\r\n                onClick={(e) => handleSkillDelete(skill)}\r\n                type=\"button\"\r\n                className=\"p-mr-2 p-p-0 p-mb-1 tag-container\"\r\n                id={skill}\r\n              >\r\n                {loading ? (\r\n                  <i className=\"fa fa-spinner fa-spin\"></i>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n                <Tag\r\n                  value={skill}\r\n                  icon=\"pi pi-times\"\r\n                  className=\"p-p-2\"\r\n                ></Tag>\r\n              </button>\r\n            ))}\r\n            <span className=\"skillInput\">\r\n              <Dropdown\r\n                value={currentSkill}\r\n                options={skillsList}\r\n                onChange={handleSkillChange}\r\n                optionLabel=\"name\"\r\n                filter\r\n                showClear\r\n                filterBy=\"name\"\r\n                placeholder=\"Select Skill\"\r\n                icon=\"pi pi-plus\"\r\n              />\r\n              <i className=\"pi pi-plus\" onClick={handleSkillAdd}></i>\r\n            </span>\r\n            <ModeFooter id=\"skillEdit\" onCancel={closeEditMode} />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SkillForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport SectionHeader from \"./SectionHeader\";\r\nimport \"./UserProfile.css\";\r\nimport { updateProfessionOfInterest } from \"../../store/modules/account\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport ModeFooter from \"./ModeFooter\";\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { Tag } from \"primereact/tag\";\r\n\r\nconst ProfessionsOfInterestForm = ({ data, closeEditMode, onClick }) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    clearErrors,\r\n    formState: { errors },\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n    reValidateMode: \"onChange\",\r\n  });\r\n  const loading = useSelector((state) => state.account.loading);\r\n  const dispatch = useDispatch();\r\n  const mode = (event) => {\r\n    onClick(event);\r\n  };\r\n\r\n  const [interests, setInterests] = useState([]);\r\n  const [interestInputValue, setInterestInputValue] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setInterests(data);\r\n  }, [data]);\r\n\r\n  const handleInterestAdd = () => {\r\n    // const interest = document.getElementById(\"hobbyInput\").value;\r\n    const interest = interestInputValue;\r\n    if (interests?.includes(interest.trim())) {\r\n      return;\r\n    }\r\n    if (interests && interests.length < 5) {\r\n      setInterests([...interests, interest.trim()]);\r\n      setValue(\"interests\", interests);\r\n      setInterestInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  const handleInterestDelete = (interestToRemove) => {\r\n    const newInterestArray = interests.filter(\r\n      (interest) => interest !== interestToRemove\r\n    );\r\n    setInterests(newInterestArray);\r\n    setValue(\"interests\", newInterestArray);\r\n  };\r\n\r\n  const interestSubmit = (interest) => {\r\n    dispatch(updateProfessionOfInterest(interests));\r\n  \r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"p-card p-mt-2\">\r\n        <SectionHeader icon=\"heart\" sectionTitle=\"Professions of Interest\" />\r\n        <div className=\"p-card-body\">\r\n          <form onSubmit={handleSubmit(interestSubmit)}>\r\n            <span className=\"skillInput p-mb-4\">\r\n              <div>\r\n                <label htmlFor=\"interestInput\" className=\"inputLabel p-pr-3\">\r\n                  Add up profession of interest\r\n                </label>\r\n                <InputText\r\n                  id=\"interestInput\"\r\n                  type=\"text\"\r\n                  // name=\"hobbies\"\r\n                  placeholder=\"Add a interest...\"\r\n                  // {...register(\"hobbies\", {})}\r\n                  value={interestInputValue}\r\n                  onChange={(e) => setInterestInputValue(e.target.value)}\r\n                />\r\n                <i className=\"pi pi-plus\" onClick={(e) => handleInterestAdd(e)}>\r\n                  {\" \"}\r\n                  Add\r\n                </i>\r\n              </div>\r\n            </span>\r\n            <div>\r\n              {interests?.map((interest, index) => (\r\n                <button\r\n                  key={index}\r\n                  onClick={(e) => handleInterestDelete(interest)}\r\n                  type=\"button\"\r\n                  className=\"p-mr-2 p-p-0 tag-container\"\r\n                  id={interest}\r\n                >\r\n                  <Tag\r\n                    value={interest}\r\n                    icon=\"pi pi-times\"\r\n                    className=\"p-p-2\"\r\n                  ></Tag>\r\n                </button>\r\n              ))}\r\n            </div>\r\n            <ModeFooter\r\n              id=\"interestEdit\"\r\n              loading={loading}\r\n              onCancel={closeEditMode}\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfessionsOfInterestForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { InputTextarea } from \"primereact/inputtextarea\";\r\nimport InputField from \"components/InputField\";\r\nimport ModeFooter from \"./ModeFooter\";\r\nimport { updatePersonalProfile } from \"store/modules/account\";\r\nimport SectionHeader from \"./SectionHeader\";\r\nimport { Dropdown } from \"primereact/dropdown\";\r\nimport { Calendar } from \"primereact/calendar\";\r\nimport { loadCountry, loadLga, loadStates } from \"store/modules/location\";\r\n\r\n\r\nconst PersonalInfoForm = ({ data, closeEditMode }) => {\r\n  const [personalProfile, setPersonalProfile] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    otherName: \"\",\r\n    imageUrl: \"\",\r\n    dateOfBirth: \"\",\r\n    address: \"\",\r\n    country: \"\",\r\n    state: \"\",\r\n    city: \"\",\r\n    lga: \"\",\r\n  });\r\n  const loading = useSelector((state) => state.account.submitting);\r\n  const countries = useSelector(state => state.location.countries);\r\n  const states = useSelector(state => state.location.states);\r\n  const lgas = useSelector(state => state.location.lgas);\r\n  const dispatch = useDispatch();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    clearErrors,\r\n    formState: { errors },\r\n  } = useForm({ mode: \"onChange\", reValidateMode: \"onChange\" });\r\n\r\n  const [countryObj, setCountryObj] = useState(null)\r\n  const [stateObj, setStateObj] = useState(null)\r\n  const [lgaObj, setLgaObj] = useState(null)\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(loadCountry())\r\n    const countryObj = countries.find(country => country.name === data.country);\r\n    dispatch(loadStates(countryObj?.id));\r\n    setPersonalProfile({\r\n      ...personalProfile,\r\n      country: countryObj\r\n    })\r\n    setValue(\"country\", countryObj?.name);\r\n    setCountryObj(countryObj)\r\n\r\n    \r\n    // setCountryId(countryId)\r\n    \r\n    console.log('come on', data, countryObj)\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (states) {\r\n      \r\n      const stateObj = states.find(state => state.name === data.state)\r\n      setPersonalProfile({\r\n        ...personalProfile,\r\n        state: stateObj\r\n      })\r\n      setValue(\"state\", stateObj?.name)\r\n      setStateObj(stateObj)\r\n      dispatch(loadLga(stateObj?.id))\r\n    }\r\n  }, [ states])\r\n\r\n  useEffect(() => {\r\n    if (lgas) {\r\n\r\n      const lgaObj = lgas.find(lga => lga.name === data.lga);\r\n      setPersonalProfile({ ...personalProfile, lga: lgaObj });\r\n      setValue('lga', lgaObj?.name);\r\n      setLgaObj(lgaObj)\r\n    }\r\n  }, [lgas])\r\n\r\n  useEffect(() => {\r\n    if (data !== null) {\r\n      setPersonalProfile({\r\n        ...personalProfile,\r\n        firstName: data.firstName,\r\n        lastName: data.lastName,\r\n        otherName: data.otherName || \"Berner\" ,\r\n        dateOfBirth: new Date(data.dateOfBirth),\r\n        city: data.city,\r\n        country: countries.find(country => country.name === data.country),\r\n        state: states.find(state => state.name === data.state),\r\n        lga: lgas.find(lga => lga.name === data.lga),\r\n        address: data.address,\r\n      });\r\n\r\n      setValue(\"firstName\", data.firstName);\r\n      setValue(\"lastName\", data.lastName);\r\n      setValue(\"otherName\", data.otherName|| \"Berner\");\r\n      setValue(\"dateOfBirth\", data.dateOfBirth);\r\n      setValue(\"city\", data.city);\r\n      setValue(\"state\", data.state);\r\n      setValue(\"country\", data.country);\r\n      setValue(\"lga\", data.country);\r\n      setValue(\"address\", data.address || '');\r\n\r\n    }\r\n  }, [data]);\r\n\r\n  const handleCountryChange = (e) => {\r\n    if (e.target.value) {\r\n      let conuntryId = e.target.value.id;\r\n      dispatch(loadStates(conuntryId));\r\n    }\r\n  }\r\n\r\n  const handleStateChange = (e) => {\r\n    if (e.target.value) {\r\n      let stateId = e.target.value.id;\r\n      dispatch(loadLga(stateId));\r\n    }\r\n  }\r\n\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setPersonalProfile({ ...personalProfile, [name]: value });\r\n    setValue(name, value, { shouldValidate: true });\r\n  };\r\n\r\n  const handleDelete = (e) => {\r\n    console.log(e.target.id);\r\n  };\r\n\r\n  const personalInfoSubmit = (personal) => dispatch(updatePersonalProfile(personalProfile));\r\n\r\n  return (\r\n    <>\r\n      <div className=\"p-card p-mt-2\">\r\n        <SectionHeader\r\n          id=\"personal\"\r\n          icon=\"person\"\r\n          sectionTitle=\"Personal\"\r\n          onDelete={handleDelete}\r\n        />\r\n\r\n        <div className=\"p-card-body\">\r\n          <form onSubmit={handleSubmit(personalInfoSubmit)}>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <label htmlFor=\"firstName\" className=\"inputLabel p-mb-2\">\r\n                  First Name *\r\n                </label>\r\n                <label htmlFor=\"biographyInput\" className=\"\">\r\n                  {errors?.firstName?.type === \"required\" && (\r\n                    <span className=\"text-danger font-weight-bold\">\r\n                      {\" \"}\r\n                      <p>{errors.firstName.message}</p>\r\n                    </span>\r\n                  )}\r\n                </label>\r\n                <InputField\r\n                  name=\"firstName\"\r\n                  register={register}\r\n                  id=\"firstName\"\r\n                  type=\"text\"\r\n                  rows=\"12\"\r\n                  inputLabel=\"First Name\"\r\n                  className=\"inputField\"\r\n                  placeholder=\"First Name\"\r\n                  value={personalProfile.firstName}\r\n                  inputChange={handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label htmlFor=\"lastName\" className=\"inputLabel p-mb-2\">\r\n                  Last Name *\r\n                </label>\r\n                <label htmlFor=\"biographyInput\" className=\"\">\r\n                  {errors?.lastName?.type === \"required\" && (\r\n                    <span className=\"text-danger font-weight-bold\">\r\n                      {\" \"}\r\n                      <p>{errors.lastName.message})</p>\r\n                    </span>\r\n                  )}\r\n                </label>\r\n                <InputField\r\n                  name=\"lastName\"\r\n                  register={register}\r\n                  id=\"lastName\"\r\n                  type=\"text\"\r\n                  rows=\"6\"\r\n                  inputLabel=\"Last Name\"\r\n                  className=\"inputField\"\r\n                  placeholder=\"Last Name\"\r\n                  value={personalProfile.lastName}\r\n                  inputChange={handleChange}\r\n                  register={register}\r\n                />\r\n              </div>\r\n              <div className=\"p-field p-col-12 p-md-6\">\r\n                <label htmlFor=\"otherName\" className=\"inputLabel p-mb-2\">\r\n                  Other Name *\r\n                </label>\r\n                <label htmlFor=\"biographyInput\" className=\"\">\r\n                  {errors?.otherName?.type === \"required\" && (\r\n                    <span className=\"text-danger font-weight-bold\">\r\n                      {\" \"}\r\n                      <p>{errors.otherName.message})</p>\r\n                    </span>\r\n                  )}\r\n                </label>\r\n                <InputField\r\n                  name=\"otherName\"\r\n                  register={register}\r\n                  id=\"otherName\"\r\n                  type=\"text\"\r\n                  rows=\"12\"\r\n                  inputLabel=\"Other Name\"\r\n                  className=\"inputField\"\r\n                  placeholder=\"Other Name\"\r\n                  value={personalProfile.otherName}\r\n                  register={register}\r\n                  inputChange={handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"p-field p-col-12 p-md-6\">\r\n                <label className=\"inputLabel\" htmlFor=\"startDate\">\r\n                  Date Of Birth *\r\n                  {errors.dateOfBirth && (\r\n                    <span className=\"text-danger font-weight-bold\">\r\n                      &nbsp; {errors.dateOfBirth.message}\r\n                    </span>\r\n                  )}\r\n                </label>\r\n                <Calendar\r\n                  id=\"dateOfBirth\"\r\n                  type=\"date\"\r\n                  value={personalProfile.dateOfBirth}\r\n                  className=\"inputField\"\r\n                  dateFormat='dd/mm/yy'\r\n                  name=\"dateOfBirth\"\r\n                  {...register(\"dateOfBirth\", {\r\n                    required: `Date of birth is required`,\r\n                  })}\r\n                  onSelect={(e) => {\r\n                    const inputName = \"dateOfBirth\";\r\n\r\n                    const value = new Date(e.value).toISOString();\r\n\r\n                    setPersonalProfile({\r\n                      ...personalProfile,\r\n                      [inputName]: e.value,\r\n                    });\r\n                    setValue(inputName, value, { shouldValidate: true });\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"p-field p-col-12 p-md-6\">\r\n                <label className=\"inputLabel\" htmlFor=\"city\">\r\n                  Country *\r\n                  {errors.country && (\r\n                    <span className=\"text-danger font-weight-bold\">\r\n                      &nbsp; {errors.country.message}\r\n                    </span>\r\n                  )}\r\n                </label>\r\n\r\n                <Dropdown\r\n                  options={countries}\r\n                  optionLabel=\"name\"\r\n                  filter\r\n                  showClear\r\n                  filterBy=\"name\"\r\n                  icon=\"pi pi-plus\"\r\n                  id=\"country\"\r\n                  name=\"country\"\r\n                  value={personalProfile.country}\r\n                  {...register(\"country\",\r\n                    {\r\n                      required: `Country is required`\r\n                    }\r\n                  )}\r\n                  onChange={(e) => {\r\n                    handleChange(e)\r\n                    handleCountryChange(e);\r\n                  }}\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n              <div className=\"p-field p-col-12 p-md-6\">\r\n                <label className=\"inputLabel\" htmlFor=\"city\">\r\n                  State *\r\n                  {errors.state && (\r\n                    <span className=\"text-danger font-weight-bold\">\r\n                      &nbsp; {errors.state.message}\r\n                    </span>\r\n                  )}\r\n                </label>\r\n\r\n                <Dropdown\r\n                  options={states}\r\n                  optionLabel=\"name\"\r\n                  filter\r\n                  showClear\r\n                  filterBy=\"name\"\r\n                  icon=\"pi pi-plus\"\r\n                  id=\"stateList\"\r\n                  name=\"state\"\r\n                  value={personalProfile.state}\r\n                  {...register(\"state\",\r\n                    {\r\n                      required: `State is required`\r\n                    }\r\n                  )}\r\n                  onChange={(e) => {\r\n                    handleChange(e);\r\n                    handleStateChange(e);\r\n                  }}\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n              <div className=\"p-field p-col-12 p-md-6\">\r\n                <label className=\"inputLabel\" htmlFor=\"state\">\r\n                  LGA *\r\n                  {errors.lga && (\r\n                    <span className=\"text-danger font-weight-bold\">\r\n                      &nbsp; {errors.lga.message}\r\n                    </span>\r\n                  )}\r\n                </label>\r\n\r\n                <Dropdown\r\n                  options={lgas}\r\n                  optionLabel=\"name\"\r\n                  filter\r\n                  showClear\r\n                  filterBy=\"name\"\r\n                  icon=\"pi pi-plus\"\r\n                  id=\"lgaList\"\r\n                  name=\"lga\"\r\n                  value={personalProfile.lga}\r\n                  {...register(\"lga\",\r\n                    {\r\n                      required: `LGA is required`\r\n                    }\r\n                  )}\r\n                  onChange={(e) => {\r\n                    handleChange(e)\r\n                  }}\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n              <div className=\"p-field p-col-12 p-md-6\">\r\n                <label className=\"inputLabel\" htmlFor=\"country\">\r\n                  City *\r\n                  {errors.city && (\r\n                    <span className=\"text-danger font-weight-bold\">\r\n                      {errors.city.message}\r\n                    </span>\r\n                  )}\r\n                </label>\r\n                <InputField\r\n                  id=\"city\"\r\n                  inputLabel=\"City\"\r\n                  register={register}\r\n                  name=\"city\"\r\n                  inputChange={handleChange}\r\n                  className=\"inputField\"\r\n                  defaultValue={personalProfile.city}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <label className=\"inputLabel\" htmlFor=\"address\">\r\n                  Address *\r\n                  {errors.address && (\r\n                    <span className=\"text-danger font-weight-bold\">\r\n                      {errors.address.message}\r\n                    </span>\r\n                  )}\r\n                </label>\r\n                <InputTextarea\r\n                  id=\"address\"\r\n                  type=\"text\"\r\n                  rows=\"4\"\r\n                  className=\"inputField\"\r\n                  {...register(\"address\", {\r\n                    required: `Address is required`,\r\n                  })}\r\n                  name=\"address\"\r\n                  onChange={handleChange}\r\n                  value={personalProfile.address || ''}\r\n                />\r\n              </div>\r\n            </div>\r\n            <ModeFooter id=\"personalProfileForm\" loading={loading} />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PersonalInfoForm;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nimport { Toast } from \"primereact/toast\";\r\nimport SectionHeader from \"./SectionHeader\";\r\nimport ModeFooter from \"./ModeFooter\";\r\nimport { Carousel } from \"primereact/carousel\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nconst PortfolioModal = ({ data, closeEditMode }) => {\r\n  const toast = useRef(null);\r\n  const profileInfo = useSelector((state) => state.account.profileInfo);\r\n  const [portfolioImages, setPortfolioImages] = useState(profileInfo.portfolios);\r\n\r\n  const responsiveOptions = [\r\n    {\r\n      breakpoint: \"1024px\",\r\n      numVisible: 1,\r\n      numScroll: 1,\r\n    },\r\n    {\r\n      breakpoint: \"600px\",\r\n      numVisible: 1,\r\n      numScroll: 1,\r\n    },\r\n    {\r\n      breakpoint: \"480px\",\r\n      numVisible: 1,\r\n      numScroll: 1,\r\n    },\r\n  ];\r\n\r\n  const imageTemplate = (portfolio) => {\r\n    return (\r\n      <div className=\"product-item\">\r\n        <div className=\"product-item-content\">\r\n          <div className=\"p-mb-3\" style={{height: \"340px\"}}>\r\n            <img\r\n              src={portfolio}\r\n              onError={(e) => (e.target.src = `${portfolio}`)}\r\n              alt=\"portfolio image\"\r\n              className=\"product-image\"\r\n              style={{height: \"100%\", width: \"100%\"}}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"p-card p-mt-2\">\r\n        <Toast ref={toast} />\r\n        <SectionHeader icon=\"images\" sectionTitle=\"Portfolio\" />\r\n        <div className=\"p-card-body\">\r\n          <Carousel\r\n            value={portfolioImages}\r\n            numVisible={1}\r\n            numScroll={1}\r\n            orientation=\"horizontal\"\r\n            verticalViewPortHeight=\"352px\"\r\n            itemTemplate={imageTemplate}\r\n          \r\n            style={{ maxWidth: \"100%\", height: \"400px\", }}\r\n          />\r\n\r\n          <ModeFooter id=\"portfolioEdit\" onCancel={closeEditMode} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PortfolioModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Dialog } from \"primereact/dialog\";\r\nimport BiographyForm from \"./BiographyForm\";\r\nimport { PROFILE } from \"constants/profile\";\r\n\r\nimport \"./ModalForm.css\";\r\nimport ExperienceForm from \"./ExperienceForm\";\r\nimport ContactInfoForm from \"./ContactInformationForm\";\r\nimport EducationForm from \"./EducationForm\";\r\nimport LOIForm from \"./LocationOfInterestForm\";\r\nimport HobbyForm from \"./HobbiesForm\";\r\nimport PortfolioForm from \"./PortfolioForm\";\r\nimport SkillForm from \"./SkillForm\";\r\nimport ProfessionsOfInterestForm from \"./ProfessionsOfInterestForm\";\r\nimport { loadProfileInfo } from \"store/modules/account\";\r\nimport PersonalInfoForm from \"./PersonalInfoForm\";\r\nimport PortfolioModal from \"./PortfolioModal\";\r\n\r\nconst ModalForm = ({ data, itemToEdit, mode }) => {\r\n  const modalName = useSelector((state) => state.modal.name);\r\n  const visible = useSelector((state) => state.modal.visible);\r\n  const [name, setName] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setName(modalName);\r\n  }, [modalName]);\r\n\r\n  const onHide = () => dispatch(loadProfileInfo());\r\n\r\n  return (\r\n    <Dialog\r\n      visible={visible}\r\n      onHide={onHide}\r\n      breakpoints={{ \"960px\": \"75vw\" }}\r\n      style={{ width: \"50vw\" }}\r\n    >\r\n      {name === PROFILE.BIOGRAPHY && (\r\n        <BiographyForm data={data.profile} itemToEdit={itemToEdit} mode={mode} />\r\n      )}\r\n      {name === PROFILE.PERSONAL_INFO && (\r\n        <PersonalInfoForm data={data} itemToEdit={itemToEdit} mode={mode} />\r\n      )}\r\n      {name === PROFILE.EXPERIENCE && (\r\n        <ExperienceForm data={data.experiences} itemToEdit={itemToEdit} mode={mode} />\r\n      )}\r\n      {name === PROFILE.CONTACT_INFO && (\r\n        <ContactInfoForm data={data.contact} itemToEdit={itemToEdit} mode={mode} />\r\n      )}\r\n      {name === PROFILE.EDUCATION && (\r\n        <EducationForm data={data.experiences} itemToEdit={itemToEdit} mode={mode} />\r\n      )}\r\n      {name === PROFILE.LOCATION && (\r\n        <LOIForm data={data.locations} itemToEdit={itemToEdit} mode={mode} />\r\n      )}\r\n      {name === PROFILE.HOBBY && (\r\n        <HobbyForm data={data.hobbies} itemToEdit={itemToEdit} mode={mode} />\r\n      )}\r\n      {name === PROFILE.SKILL && (\r\n        <SkillForm data={data.skills} itemToEdit={itemToEdit} mode={mode} />\r\n        )}\r\n      {name === PROFILE.PROFESSION && (\r\n        <ProfessionsOfInterestForm\r\n        data={data.interests}\r\n        itemToEdit={itemToEdit}\r\n        mode={mode}\r\n        />\r\n        )}\r\n      {name === PROFILE.PORTFOLIO && (\r\n          <PortfolioForm data={data.portfolios} itemToEdit={itemToEdit} mode={mode} />\r\n        )}\r\n      {name === PROFILE.PORTFOLIO_MODAL && (\r\n        <PortfolioModal data={data.portfolios} itemToEdit={itemToEdit} mode={mode} />\r\n      )}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ModalForm;\r\n"],"sourceRoot":""}