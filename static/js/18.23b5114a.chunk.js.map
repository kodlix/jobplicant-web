{"version":3,"sources":["helpers/converter.js","components/JobSidePanel.js","pages/job/FilterPanel.js","pages/job/ListJob.js"],"names":["formatter","toMoney","input","toLocaleString","style","currency","replace","toDate","date","moment","format","capitalizeFirstLetter","name","toUpperCase","slice","getPageToLoad","itemCount","pageLimit","number","Number","isInteger","Math","ceil","JobSidePanel","data","className","map","job","to","id","title","severity","value","contactType","hideCompanyName","companyName","location","minSalary","maxSalary","length","FilterPanel","useState","selectedCategory","setSelectedCategory","salaryRange","setSalaryRange","JobCategories","code","onCategoryChange","e","options","optionLabel","onChange","label","type","inputId","min","max","range","CardSkeleton","shape","size","width","height","formatValue","Intl","NumberFormat","CardItem","image","tag","index","styles","viewLinkStyle","container","backgroundImage","BackgroundImage","backgroundSize","backgroundRepeat","position","padding","boxContainer","display","justifyContent","alignItems","flexDirection","box","border","backgroundColor","inputStyle","boxButton","color","skillTextStyle","borderRadius","textAlign","fontWeight","marginRight","jobListingHeader","margin","btnFind","actions","ListJob","dispatch","useDispatch","jobs","useSelector","state","allJobs","loading","useEffect","loadAllJobs","placeholder"],"mappings":"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","file":"static/js/18.23b5114a.chunk.js","sourcesContent":["import moment from 'moment';\r\n\r\nexport const formatter = {\r\n  toMoney: (input) =>\r\n    \"â‚¦\" +\r\n    input\r\n      .toLocaleString(\"en-US\", {\r\n        style: \"currency\",\r\n        currency: \"NGN\",\r\n      })\r\n      .replace(\"NGN\", \"\"),\r\n  toDate: (date) => moment(date).format('DD-MM-YYYY'),\r\n  capitalizeFirstLetter: (name) => {\r\n    if (name) {\r\n      return name[0].toUpperCase() + name.slice(1);\r\n    }\r\n  },\r\n  getPageToLoad: (itemCount, pageLimit) => {\r\n    let number = itemCount / pageLimit;\r\n    let pageToLoad = Number.isInteger(number) ? number + 1 : Math.ceil(number);\r\n    return pageToLoad;\r\n  }\r\n};\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { formatter } from 'helpers/converter';\r\nimport { Tag } from 'primereact/tag';\r\nimport { Skeleton } from 'primereact/skeleton'\r\n\r\nimport \"./JobSidePanel.css\";\r\n\r\n\r\nconst JobSidePanel = ({ data }) => {\r\n  return (\r\n    <>\r\n      <div className=\"p-col-12 p-md-3 p-pr-0 p-py-md-2 p-pl-md-2 p-pl-0 p-pt-0\">\r\n        <div className=\"p-card\">\r\n          <div className=\"p-card-title cardtitle-JobPanelComponent\">\r\n            Recent Jobs\r\n          </div>\r\n          <div className=\"p-pb-4\">\r\n            {\r\n              data?.map((job) =>\r\n                <Link to={`/jobs/view/${job.id}`} className=\"p-card-body p-card-body-JobPanelComponent p-px-3 p-pb-3\" key={job.id} id={job.id}>\r\n                  <div className=\"p-card-title cardbody-JobPanelComponent\">\r\n                    <div className=\"d-flex justify-content-between\">\r\n                      <div className=\"cardsubtitle-JobPanelComponent\">{job.title}</div>\r\n                      <Tag className=\"p-mr-2\" severity=\"success\" value={job.contactType}></Tag>\r\n                    </div>\r\n                    {\r\n                      !job.hideCompanyName &&\r\n                      <div>\r\n                        <i className=\"align-text-bottom pi  pi-briefcase p-mr-1\" />\r\n                        <b className=\"p-pr-1\">Company:</b>\r\n                        <span className=\"jobdetails-JobPanelComponent\">{job.companyName}</span>\r\n                      </div>\r\n                    }\r\n                    <div>\r\n                      <i className=\"align-text-bottom pi pi-map-marker p-mr-1\" />\r\n                      <b className=\"p-pr-1\">Location:</b>\r\n                      <span className=\"jobdetails-JobPanelComponent\">\r\n                        {job.location}\r\n                      </span>\r\n                    </div>\r\n                    <div>\r\n                      <i className=\"align-text-bottom pi pi-money-bill p-mr-1\" />\r\n                      <b className=\"p-pr-1\">Salary:</b>\r\n                      <span className=\"jobdetails-JobPanelComponent\">\r\n                        {`~${formatter.toMoney((job.minSalary + job.maxSalary) / 2)}`}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"seemore-JobPanelComponent\">See more...</div>\r\n                </Link>\r\n              )\r\n            }\r\n            {\r\n              !data.length &&\r\n              <h6 className=\"p-px-3 p-pt-3 p-mb-6 p-pb-6 cardsubtitle-JobPanelComponent\">\r\n                No Recent Jobs available at the moment\r\n              </h6>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default JobSidePanel;","import React, { useState } from 'react';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { InputNumber } from 'primereact/inputnumber';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { Button } from 'primereact/button';\r\nimport { Slider } from 'primereact/slider';\r\n\r\nimport \"./FilterPanel.css\";\r\n\r\nconst FilterPanel = () => {\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n  const [salaryRange, setSalaryRange] = useState([0, 100]);\r\n  const JobCategories = [\r\n    { name: 'New York', code: 'NY' },\r\n    { name: 'Rome', code: 'RM' },\r\n    { name: 'London', code: 'LDN' },\r\n    { name: 'Istanbul', code: 'IST' },\r\n    { name: 'Paris', code: 'PRS' }\r\n  ];\r\n\r\n  const onCategoryChange = (e) => {\r\n    setSelectedCategory(e.value);\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n        <div className=\"p-card p-md-3 p-col-12 p-p-0\">\r\n          <div className=\"p-card-title d-flex justify-content-between card-header-filterpanel p-p-3\">\r\n            <span className=\"cardTitle-filterpanel\">\r\n              Filters\r\n            </span>\r\n            <span className=\"card-sidetitle-filterpanel\">\r\n              Clear all filters\r\n            </span>\r\n          </div>\r\n          <div className=\"p-card-title cardContent-filterpanel\">\r\n            <div className=\"d-flex justify-content-between\">\r\n              <div className=\"cardSubtitle-filterpanel\">\r\n                Job Category\r\n            </div>\r\n              <div className=\"card-sidetitle-filterpanel\">\r\n                Clear\r\n            </div>\r\n            </div>\r\n            <Dropdown\r\n              options={JobCategories}\r\n              value={selectedCategory}\r\n              optionLabel=\"name\"\r\n              onChange={onCategoryChange}\r\n              className=\"w-100 formElements-filterPanel\"\r\n              name=\"jobCategory\"\r\n            />\r\n          </div>\r\n          <div className=\"p-card-title cardContent-filterpanel\">\r\n            <div className=\"d-flex justify-content-between\">\r\n              <div className=\"cardSubtitle-filterpanel\">\r\n                Job Type\r\n            </div>\r\n              <div className=\"card-sidetitle-filterpanel\">\r\n                Clear\r\n            </div>\r\n            </div>\r\n            {/* <InputText className=\"w-100 formElements-filterPanel\"/> */}\r\n            <Dropdown\r\n              options={JobCategories}\r\n              value={selectedCategory}\r\n              optionLabel=\"name\"\r\n              onChange={onCategoryChange}\r\n              className=\"w-100 formElements-filterPanel\"\r\n              name=\"jobType\"\r\n            />\r\n          </div>\r\n          <div className=\"p-card-title cardContent-filterpanel\">\r\n            <div className=\"d-flex justify-content-between align-items-center p-pb-2\">\r\n              <div className=\"cardSubtitle-filterpanel\">\r\n                Salary Range (â‚¦)\r\n            </div>\r\n              <Button className=\"card-sideButton\" label=\"Apply\" type=\"button\" />\r\n            </div>\r\n            <div>\r\n              <div className=\"d-flex\">\r\n                <InputNumber\r\n                  inputId=\"integeronly\"\r\n                  value={salaryRange[0]}\r\n                  min={0}\r\n                  max={salaryRange[1] && 100}\r\n                  onChange={(e) => setSalaryRange([e.value, salaryRange[1]])}\r\n                  className=\"salaryRange-filterPanel formElements-filterPanel\"\r\n                />\r\n                <span className=\"p-mx-1\"> - </span>\r\n                <InputNumber\r\n                  inputId=\"integeronly\"\r\n                  value={salaryRange[1]}\r\n                  min={salaryRange[0] && 0}\r\n                  max={100}\r\n                  onChange={(e) => setSalaryRange([salaryRange[0], e.value])}\r\n                  className=\"salaryRange-filterPanel formElements-filterPanel\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <Slider\r\n              range\r\n              min={0}\r\n              max={100}\r\n              value={salaryRange}\r\n              onChange={(e) => setSalaryRange(e.value)}\r\n              className=\"formElements-filterPanel p-mt-3\" />\r\n          </div>\r\n          <div className=\"p-card-title cardContent-filterpanel\">\r\n            <div className=\"d-flex justify-content-between\">\r\n              <div className=\"cardSubtitle-filterpanel\">\r\n                Experience Level\r\n            </div>\r\n              <div className=\"card-sidetitle-filterpanel\">\r\n                Clear\r\n            </div>\r\n            </div>\r\n            <Dropdown\r\n              options={JobCategories}\r\n              value={selectedCategory}\r\n              optionLabel=\"name\"\r\n              onChange={onCategoryChange}\r\n              className=\"w-100 formElements-filterPanel\"\r\n              name=\"jobCategory\"\r\n            />\r\n          </div>\r\n          <div className=\"p-card-title p-py-4 p-px-3\">\r\n            <div className=\"d-flex justify-content-between\">\r\n              <div className=\"cardSubtitle-filterpanel\">\r\n                Location\r\n            </div>\r\n              <div className=\"card-sidetitle-filterpanel\">\r\n                Clear\r\n            </div>\r\n            </div>\r\n            <InputText className=\"w-100 formElements-filterPanel\" />\r\n          </div>\r\n        </div>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FilterPanel;","import { Badge } from 'primereact/badge'\r\nimport { Skeleton } from 'primereact/skeleton'\r\nimport { Dropdown } from 'primereact/dropdown'\r\nimport { InputText } from 'primereact/inputtext'\r\nimport React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Tag } from \"primereact/tag\";\r\nimport BackgroundImage from '../../assets/bg.png'\r\n\r\nimport './ListJob.css'\r\nimport FilterPanel from './FilterPanel'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { loadAllJobs } from 'store/modules/job'\r\nimport Spinner from 'components/spinner/spinner.component'\r\nimport JobSidePanel from 'components/JobSidePanel'\r\nimport { Button } from 'primereact/button'\r\nimport { Avatar } from 'primereact/avatar'\r\n\r\nconst CardSkeleton = () => (\r\n    <div className=\"custom-skeleton p-p-4\">\r\n        <div className=\"p-d-flex p-mb-3\">\r\n            <Skeleton shape=\"circle\" size=\"4rem\" className=\"p-mr-2\"></Skeleton>\r\n            <div>\r\n                <Skeleton width=\"10rem\" className=\"p-mb-2\"></Skeleton>\r\n                <Skeleton width=\"5rem\" className=\"p-mb-2\"></Skeleton>\r\n                <Skeleton height=\".5rem\"></Skeleton>\r\n            </div>\r\n        </div>\r\n        <Skeleton width=\"100%\" height=\"150px\"></Skeleton>\r\n        <div className=\"p-d-flex p-jc-between p-mt-3\">\r\n            <Skeleton width=\"4rem\" height=\"2rem\"></Skeleton>\r\n            <Skeleton width=\"4rem\" height=\"2rem\"></Skeleton>\r\n        </div>\r\n    </div>\r\n)\r\nconst formatValue = value => new Intl.NumberFormat('en-US', {}).format(value);\r\n\r\nconst CardItem = ({ job }) => (\r\n    <div className=\"card mb-2 custom-skeleton p-p-4\">\r\n        <div className=\"p-d-flex p-mb-3\">\r\n            <Avatar shape=\"circle\" size=\"large\" className=\"p-mr-2\" image=\"https://source.unsplash.com/random/60x60\" />\r\n            <div>\r\n                <p width=\"10rem\" className=\"p-mb-2\">{job.companyName}</p>\r\n                <p width=\"5rem\" className=\"p-mb-2\">Salary <strong>&#x20A6;{formatValue(job.minSalary)}</strong> - <strong>&#x20A6;{formatValue(job.maxSalary)}</strong></p>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"p-d-flex p-jc-between p-mt-3\">\r\n            <div width=\"100%\" height=\"100px\">\r\n                <p className=\"heading-3\">Skills</p>\r\n                {['CSS', 'Photoshop'].map((tag, index) => <span key={index} className=\"mr-1\"><Tag>{tag}</Tag></span>)}\r\n            </div>\r\n            <div><Link to={`/jobs/view/${job.id}`} style={styles.viewLinkStyle} className=\"btn btn-sm\">View Job</Link></div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nconst ListJob = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const jobs = useSelector(state => state.job.allJobs);\r\n    const loading = useSelector(state => state.job.loading)\r\n\r\n    useEffect(() => {\r\n        dispatch(loadAllJobs())\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"list-job-wrapper\">\r\n            <div className=\"list-job-container\"\r\n                style={styles.container}\r\n            >\r\n                <div className=\"list-job-search-container\" style={styles.boxContainer}>\r\n                    <div className=\"list-job-search-box\" style={styles.box}>\r\n                        <InputText style={styles.inputStyle} placeholder=\"Job Title\" />\r\n                    </div>\r\n                    <div className=\"list-job-search-box\" style={styles.box}>\r\n                        <InputText style={styles.inputStyle} placeholder=\"Location\" />\r\n                    </div>\r\n                    <div className=\"list-job-search-box\" style={styles.box}>\r\n                        <Dropdown style={styles.inputStyle} placeholder=\"Category\" />\r\n                    </div>\r\n                    <div className=\"list-job-search-box\" style={styles.boxButton}>\r\n                        <button style={styles.btnFind}>Find Jobs</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"p-pl-3\">\r\n                    <Link to={\"/jobs/create\"}>\r\n                        <Button label=\"Post job\" className=\"p-button-rounded p-button\" />\r\n                    </Link>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {/* {jobs && <p>{JSON.stringify(jobs)}</p>} */}\r\n\r\n            <div className=\"container mt-5\">\r\n                <div className=\"p-grid\">\r\n                    <FilterPanel />\r\n                    <div className=\"p-col-12 p-md-6\">\r\n                        {loading ?\r\n                            <CardSkeleton /> : (<>\r\n                                <div className=\"header-count-section\" style={styles.jobListingHeader}>\r\n                                    <h4 className=\"ml-4\">{jobs.length} matches found</h4>\r\n                                </div>\r\n                                <div className=\"job-listing-container\">\r\n                                    {jobs.map((job, index) => <CardItem key={index} job={job} />)}\r\n\r\n                                </div>\r\n                            </>)}\r\n                    </div>\r\n                    <JobSidePanel data={jobs} />\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n/**\r\n * <div key={index} className=\"p-card p-4 mt-2 p-d-flex justify-content-between\" style={{ position: 'relative' }} >\r\n                                    <Badge severity=\"success\" value={job.contactType} style={{ position: 'absolute', top: 10, right: 10 }}></Badge>\r\n                                    <div className=\"p-d-flex\">\r\n                                        <div className=\"image-container\">\r\n                                            <img\r\n                                                src=\"https://source.unsplash.com/random/100x100\"\r\n                                                alt=\"image\"\r\n                                                className=\"rounded-circle\"\r\n                                            // style={{ borderRadius: '50%', height: '100px', justifyContent: 'center' }}\r\n                                            />\r\n                                        </div> \r\n                                        <div className=\"p-2\" ></div>\r\n                                        <div>\r\n                                            <ul>\r\n                                                <li className=\"p-d-flex p-ai-center p-as-center\"><h4>{job.title}</h4> </li>\r\n                                                <li>{job.companyName} | <span>Salary <strong>&#x20A6;{formatValue(job.minSalary)}</strong> - <strong>&#x20A6;{formatValue(job.maxSalary)}</strong></span> </li>\r\n                                                <li className=\"d-flex p-jc-between\" style={{ marginTop: '4px' }}>\r\n                                                    <div className=\"box p-d-flex p-align-items-center\">\r\n                                                        <p>Skills</p>\r\n                                                        <div className=\"d-flex\">\r\n                                                            {['CSS', 'Photoshop'].map((tag, index) => <span key={index}><Tag>{tag}</Tag>{\" \"}</span>)}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </li>\r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>)\r\n\r\n */\r\n\r\n\r\nconst styles = {\r\n    container: {\r\n        backgroundImage: `url(${BackgroundImage})`,\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        width: \"100%\",\r\n        height: '160px',\r\n        position: \"relative\",\r\n        padding: '100px'\r\n    },\r\n\r\n    boxContainer: {\r\n        display: \"flex\",\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: 'row'\r\n    },\r\n    box: {\r\n        border: '2px solid #55B2B0',\r\n        backgroundColor: 'white',\r\n        // padding: '12px 36px'\r\n    },\r\n    inputStyle: {\r\n        width: '100%',\r\n        border: 'none'\r\n    },\r\n    boxButton: {\r\n        border: '2px solid #55B2B0',\r\n        backgroundColor: '#55B2B0',\r\n        padding: '12px 36px',\r\n        color: 'white'\r\n    },\r\n    skillTextStyle: {\r\n        backgroundColor: '#ddd',\r\n        borderRadius: '25%',\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n        marginRight: '6px',\r\n        padding: '6px'\r\n    },\r\n    jobListingHeader: {\r\n        backgroundColor: '#ccc',\r\n        padding: '6px 0px',\r\n        margin: '16px 0px',\r\n    },\r\n    viewLinkStyle: {\r\n        backgroundColor: '#4E4E4F',\r\n        color: 'white',\r\n        padding: '8px 12px',\r\n\r\n    },\r\n    btnFind: {\r\n        border: 'none',\r\n        backgroundColor: 'transparent',\r\n        width: '100%',\r\n        height: '100%',\r\n        color: 'white'\r\n    },\r\n    actions: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n    }\r\n}\r\n\r\nexport default ListJob"],"sourceRoot":""}