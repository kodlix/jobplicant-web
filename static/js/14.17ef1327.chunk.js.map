{"version":3,"sources":["components/profile/SectionHeader.js","../node_modules/primereact/confirmdialog/confirmdialog.esm.js","pages/instant-jobs/Recent_instant_Jobs.js","pages/instant-job-hire/instant-header.js","pages/instant-job-hire/Create.js"],"names":["SectionHeader","openModalOnEdit","openModalOnCreate","deleteItem","hasData","sectionTitle","icon","id","showAddButton","showEditButton","showDeleteButton","isViewApplicant","className","onClick","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","_assertThisInitialized","self","ReferenceError","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_typeof","obj","Symbol","iterator","constructor","_possibleConstructorReturn","_getPrototypeOf","getPrototypeOf","_defineProperty","value","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","e","_isNativeReflectConstruct","result","Super","NewTarget","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","_objectSpread","forEach","getOwnPropertyDescriptors","defineProperties","confirmDialog","appendTo","document","body","confirmDialogWrapper","createDocumentFragment","DomHandler","appendChild","visible","undefined","confirmDialogEl","React","createElement","ConfirmDialog","ReactDOM","render","updateConfirmDialog","newProps","cloneElement","_destroy","unmountComponentAtNode","show","onHide","hide","update","_Component","subClass","superClass","TypeError","create","_inherits","Constructor","protoProps","staticProps","_super","_this","instance","_classCallCheck","state","reject","bind","accept","acceptLabel","localeOption","rejectLabel","setState","_this2","prevProps","acceptClassName","classNames","rejectClassName","content","Fragment","Button","label","rejectIcon","acceptIcon","autoFocus","footer","defaultContentOptions","element","ObjectUtils","getJSXElement","iconClassName","dialogProps","findDiffKeys","defaultProps","message","renderFooter","Dialog","breakpoints","renderElement","Portal","Component","RecentInstantJobs","dispatch","useDispatch","useState","page","take","copyAlert","setCopyAlert","allCurrentInstantJobs","useSelector","instantJob","console","log","useEffect","fetchAllInstantJobs","handleShareButton","jobId","currentTarget","dataset","el","window","location","host","select","execCommand","removeChild","setTimeout","style","height","map","instantjob","flexWrap","src","borderRadius","alt","to","fontSize","service","str","description","no_words","split","splice","join","moment","createdAt","fromNow","data-id","InstantHeader","title","showCreateButton","showBack","count","showSearchBar","searchValue","setSearchValue","loading","contact","loadingContact","placeholder","onChange","inputValue","name","iconPos","type","New","mode","useRef","useForm","reValidateMode","register","handleSubmit","errors","formState","setValue","watch","startdate","enddate","desc","setDesc","selectedCategory","setSelectedCategory","isJobDateNow","setIsJobDateNow","startDate","setStartDate","endDate","setEndDate","period","Date","instantJobDate","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","onSubmit","data","header","toISOString","now","navigator","geolocation","getCurrentPosition","successResult","coordinates","lat","coords","latitude","lng","longitude","fetch","then","response","json","results","formatted_address","error","alert","createInstantJob","htmlFor","options","code","optionLabel","showClear","filterBy","required","shouldValidate","address","phoneNumber","checked","defaultChecked","disabled","onSelect","validate","defaultValue","rows","cols"],"mappings":"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","file":"static/js/14.17ef1327.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst SectionHeader = ({\r\n  openModalOnEdit,\r\n  openModalOnCreate,\r\n  deleteItem,\r\n  hasData,\r\n  sectionTitle,\r\n  icon,\r\n  id,\r\n  showAddButton = false,\r\n  showEditButton = false,\r\n  showDeleteButton = false,\r\n  isViewApplicant = false\r\n}) => {\r\n\r\n\r\n  return (\r\n    <div className=\"sectionHeader\">\r\n      <div className=\"p-card-title\">\r\n        <span>\r\n          <i className={`pi pi-${icon}`}></i>\r\n          {sectionTitle}\r\n        </span>\r\n        {!isViewApplicant && <span>\r\n          {showAddButton && !hasData && (\r\n            <i className=\"pi pi-plus\" onClick={openModalOnCreate}></i>\r\n          )}\r\n          {showEditButton && hasData && (\r\n            <i className=\"pi pi-pencil\" onClick={openModalOnEdit} id={id}></i>\r\n          )}\r\n          {showDeleteButton && (\r\n            <i className=\"pi pi-trash\" onClick={deleteItem} id={id}></i>\r\n          )}\r\n        </span>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SectionHeader;\r\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { DomHandler, classNames, ObjectUtils, Portal } from 'primereact/core';\nimport { Dialog } from 'primereact/dialog';\nimport { Button } from 'primereact/button';\nimport { localeOption } from 'primereact/api';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\nfunction confirmDialog(props) {\n  var appendTo = props.appendTo || document.body;\n  var confirmDialogWrapper = document.createDocumentFragment();\n  DomHandler.appendChild(confirmDialogWrapper, appendTo);\n  props = _objectSpread(_objectSpread({}, props), {\n    visible: props.visible === undefined ? true : props.visible\n  });\n  var confirmDialogEl = /*#__PURE__*/React.createElement(ConfirmDialog, props);\n  ReactDOM.render(confirmDialogEl, confirmDialogWrapper);\n\n  var updateConfirmDialog = function updateConfirmDialog(newProps) {\n    props = _objectSpread(_objectSpread({}, props), newProps);\n    ReactDOM.render( /*#__PURE__*/React.cloneElement(confirmDialogEl, props), confirmDialogWrapper);\n  };\n\n  return {\n    _destroy: function _destroy() {\n      ReactDOM.unmountComponentAtNode(confirmDialogWrapper);\n    },\n    show: function show() {\n      updateConfirmDialog({\n        visible: true,\n        onHide: function onHide() {\n          updateConfirmDialog({\n            visible: false\n          }); // reset\n        }\n      });\n    },\n    hide: function hide() {\n      updateConfirmDialog({\n        visible: false\n      });\n    },\n    update: function update(newProps) {\n      updateConfirmDialog(newProps);\n    }\n  };\n}\nvar ConfirmDialog = /*#__PURE__*/function (_Component) {\n  _inherits(ConfirmDialog, _Component);\n\n  var _super = _createSuper(ConfirmDialog);\n\n  function ConfirmDialog(props) {\n    var _this;\n\n    _classCallCheck(this, ConfirmDialog);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      visible: props.visible\n    };\n    _this.reject = _this.reject.bind(_assertThisInitialized(_this));\n    _this.accept = _this.accept.bind(_assertThisInitialized(_this));\n    _this.hide = _this.hide.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ConfirmDialog, [{\n    key: \"acceptLabel\",\n    value: function acceptLabel() {\n      return this.props.acceptLabel || localeOption('accept');\n    }\n  }, {\n    key: \"rejectLabel\",\n    value: function rejectLabel() {\n      return this.props.rejectLabel || localeOption('reject');\n    }\n  }, {\n    key: \"accept\",\n    value: function accept() {\n      if (this.props.accept) {\n        this.props.accept();\n      }\n\n      this.hide('accept');\n    }\n  }, {\n    key: \"reject\",\n    value: function reject() {\n      if (this.props.reject) {\n        this.props.reject();\n      }\n\n      this.hide('reject');\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      this.setState({\n        visible: true\n      });\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(result) {\n      var _this2 = this;\n\n      this.setState({\n        visible: false\n      }, function () {\n        if (_this2.props.onHide) {\n          _this2.props.onHide(result);\n        }\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.visible !== this.props.visible) {\n        this.setState({\n          visible: this.props.visible\n        });\n      }\n    }\n  }, {\n    key: \"renderFooter\",\n    value: function renderFooter() {\n      var acceptClassName = classNames('p-confirm-dialog-accept', this.props.acceptClassName);\n      var rejectClassName = classNames('p-confirm-dialog-reject', {\n        'p-button-text': !this.props.rejectClassName\n      }, this.props.rejectClassName);\n      var content = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n        label: this.rejectLabel(),\n        icon: this.props.rejectIcon,\n        className: rejectClassName,\n        onClick: this.reject\n      }), /*#__PURE__*/React.createElement(Button, {\n        label: this.acceptLabel(),\n        icon: this.props.acceptIcon,\n        className: acceptClassName,\n        onClick: this.accept,\n        autoFocus: true\n      }));\n\n      if (this.props.footer) {\n        var defaultContentOptions = {\n          accept: this.accept,\n          reject: this.reject,\n          acceptClassName: acceptClassName,\n          rejectClassName: rejectClassName,\n          acceptLabel: this.acceptLabel(),\n          rejectLabel: this.rejectLabel(),\n          element: content,\n          props: this.props\n        };\n        return ObjectUtils.getJSXElement(this.props.footer, defaultContentOptions);\n      }\n\n      return content;\n    }\n  }, {\n    key: \"renderElement\",\n    value: function renderElement() {\n      var className = classNames('p-confirm-dialog', this.props.className);\n      var iconClassName = classNames('p-confirm-dialog-icon', this.props.icon);\n      var dialogProps = ObjectUtils.findDiffKeys(this.props, ConfirmDialog.defaultProps);\n      var message = ObjectUtils.getJSXElement(this.props.message, this.props);\n      var footer = this.renderFooter();\n      return /*#__PURE__*/React.createElement(Dialog, _extends({\n        visible: this.state.visible\n      }, dialogProps, {\n        className: className,\n        footer: footer,\n        onHide: this.hide,\n        breakpoints: this.props.breakpoints\n      }), /*#__PURE__*/React.createElement(\"i\", {\n        className: iconClassName\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"p-confirm-dialog-message\"\n      }, message));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var element = this.renderElement();\n      return /*#__PURE__*/React.createElement(Portal, {\n        element: element,\n        appendTo: this.props.appendTo\n      });\n    }\n  }]);\n\n  return ConfirmDialog;\n}(Component);\n\n_defineProperty(ConfirmDialog, \"defaultProps\", {\n  visible: false,\n  message: null,\n  rejectLabel: null,\n  acceptLabel: null,\n  icon: null,\n  rejectIcon: null,\n  acceptIcon: null,\n  rejectClassName: null,\n  acceptClassName: null,\n  className: null,\n  appendTo: null,\n  footer: null,\n  breakpoints: null,\n  onHide: null,\n  accept: null,\n  reject: null\n});\n\nexport { ConfirmDialog, confirmDialog };\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchAllInstantJobs } from 'store/modules/instantJob';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\nimport \"../profile/UserProfile.css\";\r\nimport SectionHeader from \"components/profile/SectionHeader\";\r\n\r\nimport './Instant-Jobs.css';\r\n\r\n\r\nconst RecentInstantJobs = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [take, setTake] = useState(10);\r\n    const [copyAlert, setCopyAlert] = useState(null);\r\n\r\n    const allCurrentInstantJobs = useSelector(state => state.instantJob.allCurrentInstantJobs);\r\n    console.log(\"allcurrentjob\", allCurrentInstantJobs)\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchAllInstantJobs(page, take))\r\n    }, [dispatch])\r\n\r\n    const handleShareButton = (e,) => {\r\n        const jobId = e.currentTarget.dataset.id;\r\n        const el = document.createElement('input');\r\n        el.value = window.location.host + `/instant-hire/view/${jobId}`;\r\n        document.body.appendChild(el);\r\n        el.select();\r\n        document.execCommand('copy');\r\n        document.body.removeChild(el);\r\n        setCopyAlert(jobId);\r\n        setTimeout(function () { setCopyAlert(false); }, 1000);\r\n    }\r\n\r\n\r\n    function truncate(str, no_words) {\r\n        return str.split(\" \").splice(0, no_words).join(\" \");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"p-col-12 p-md-3 p-pt-2\">\r\n                <div className=\"p-card\">\r\n                    <SectionHeader\r\n                        icon=\"briefcase\"\r\n                        sectionTitle=\"Recent Instant Jobs\"\r\n                        id=\"portfolioEdit\"\r\n                        showEditButton=\"false\"\r\n                    />\r\n                    <div className=\"p-card-body p-grid p-mt-1 overflow-auto\" style={{ height: 500 }}>\r\n                        {allCurrentInstantJobs && allCurrentInstantJobs.length > 0 && allCurrentInstantJobs.map(instantjob =>\r\n                            <div key={instantjob.id} className=\"\" >\r\n                                <div className=\"panel-login text-center\"></div>\r\n                                <div className=\"highlight-card p-p-1\">\r\n                                    <div className=\"row \" style={{ flexWrap: \"nowrap !important\" }} >\r\n                                        <div className=\"col-3 rounded-circle\">\r\n                                            <img\r\n                                                src=\"https://source.unsplash.com/random/100x100\" style={{ borderRadius: \"50%\" }}\r\n                                                className=\"img-fluid\"\r\n                                                alt=\"user-image\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"col-9\">\r\n                                            <small >\r\n                                                <Link className=\"p-text-secondary\" to={`/instant-hire/view/${instantjob.id}`}>\r\n                                                    <p className=\"font-weight-bold\"> <span className=\"app-color text-capitalize\" style={{ fontSize: 15 }}> {instantjob.service}</span></p>\r\n                                                    <p className=\"font-weight-bold text-capitalize\">{instantjob.location} </p>\r\n                                                    <p><span className=\"font-weight-bold text-capitalize\"> </span> {`${truncate(instantjob.description, 20)} ${'...'}`}</p>\r\n                                                </Link>\r\n                                                <div className=\"d-flex justify-content-between\">\r\n                                                    <div>\r\n                                                        <p className=\"p-pt-2 float-right\"> {moment(instantjob.createdAt).fromNow()} </p>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <div>\r\n                                                            <i className=\"pi pi-share-alt p-pt-2\" data-id={instantjob.id}\r\n                                                                onClick={handleShareButton}> Share\r\n                                                            </i>\r\n                                                        </div>\r\n                                                        <span className={copyAlert === instantjob.id ? \"job-copyModalAlert--active\" : \"job-copyModalAlert\"}>\r\n                                                            Link copied\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            </small >\r\n                                        </div>\r\n                                        <hr />\r\n                                    </div>\r\n                                </div>\r\n                            </div>)}\r\n                        {\r\n                            allCurrentInstantJobs?.length === 0 && <strong className=\"mx-auto\">No Recent Job Yet</strong>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RecentInstantJobs;\r\n","\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'primereact/button';\r\nimport { InputText } from 'primereact/inputtext';\r\n\r\nimport './InstantJobHire.css'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchAllInstantJobs } from 'store/modules/instantJob';\r\n\r\n\r\nconst InstantHeader = ({ title, showCreateButton = false, showBack = false, count, showSearchBar = false }) => {\r\n    const dispatch = useDispatch();\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n    const [page, setPage] = useState(1)\r\n    const [take, setTake] = useState(10)\r\n    const loading = useSelector(state => state.contact.loadingContact);\r\n\r\n\r\n\r\n\r\n    const handleSearchInputChange = (e) => {\r\n        const inputValue = e.target.name === \"clear\" ? \"\" : e.currentTarget.value;\r\n        if (inputValue) {\r\n            setSearchValue(inputValue);\r\n            dispatch(fetchAllInstantJobs(page, take));\r\n        }\r\n        else {\r\n            setSearchValue(\"\");\r\n            // dispatch(loadFreeUsers(1, 10, \"loadingFreeUsers\"))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <header className=\"instant d-flex\">\r\n                <div className=\"title-container w-100\"   >\r\n                    <h2 className=\"title sm-screen \">{title} {count > 0 && `(${count})`} </h2>\r\n                </div>\r\n\r\n                {showSearchBar && <div className=\"d-flex align-items-baseline\">\r\n                    <div className=\"p-input-icon-right searchInput-container-contact\">\r\n                        <div className=\"p-input-icon-left\">\r\n                            <i className=\"pi pi-search\" />\r\n                            <InputText className=\"p-mr-2 p-pr-5 contact-searchInput\" placeholder=\"Search instant jobs\" value={searchValue} onChange={handleSearchInputChange} />\r\n                        </div>\r\n                        {\r\n                            loading === \"searchUsers\" &&\r\n                            <i className=\"pi pi-spin pi-spinner p-mr-2\" />\r\n                        }\r\n                        {\r\n                            searchValue && loading !== \"searchUsers\" &&\r\n                            <i className=\"pi pi-times p-mr-2\" name=\"clear\" />\r\n                        }\r\n                    </div>\r\n                </div>}\r\n                <div className=\"flex-shrink-0\">\r\n                    {showCreateButton && <Link to=\"/create-instant-hire\"> <Button iconPos=\"left\" label=\"Create\" className=\"create-btn\" type=\"button\" /></Link>}\r\n                    {showBack && <Link to=\"/instant-hires\" className=\"bk-btn p-pt-2 app-color\"><i className=\"pi pi-arrow-left\">Back</i></Link>}\r\n                </div>\r\n            </header >\r\n            <hr className=\"font-weight-bolder appcolor\" />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default InstantHeader;","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Button } from 'primereact/button';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { InputTextarea } from 'primereact/inputtextarea';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport InstantHeader from './instant-header';\r\nimport { confirmDialog } from 'primereact/confirmdialog';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createInstantJob } from 'store/modules/instantJob';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport RecentInstantJobs from 'pages/instant-jobs/Recent_instant_Jobs';\r\n\r\nimport './InstantJobHire.css'\r\n\r\nconst New = ({ mode }) => {\r\n    const dispatch = useDispatch();\r\n    const toast = useRef(null);\r\n\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch } = useForm({\r\n        mode: \"onChange\",\r\n        reValidateMode: \"onChange\"\r\n    });\r\n\r\n    const { startdate, enddate } = watch([\"startDate\", \"endDate\"]);\r\n\r\n\r\n    const [desc, setDesc] = useState(\"\");\r\n    const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n    const [isJobDateNow, setIsJobDateNow] = useState(false);\r\n    const [startDate, setStartDate] = useState(null);\r\n    const [endDate, setEndDate] = useState(null);\r\n    const API_KEY = \"AIzaSyDxaC_Q4OI6Kx84VPT4W4k6N6FYLEVfcw0\";\r\n\r\n    const loading = useSelector(state => state.instantJob.loading);\r\n    // console.log(\"loading => \", loading);\r\n\r\n\r\n    const Categories = [\r\n        { name: 'Mechanic', code: 'Mec' },\r\n        { name: 'Plumber', code: 'Plu' },\r\n        { name: 'Tailor', code: 'Tai' },\r\n        { name: 'Chef', code: 'Chef' },\r\n        { name: 'Dry-cleaners', code: 'Lan' },\r\n        { name: 'Painter', code: 'Pai' },\r\n        { name: 'Janitor', code: 'Jan' },\r\n        { name: 'Massage', code: 'Mas' },\r\n\r\n    ];\r\n\r\n\r\n    // const minDate = () => {\r\n    //     let mindate = new Date();\r\n    //     console.log(\"mindate\", mindate)\r\n    //     let fomatDate = mindate.split(\" \")\r\n    //     return mindate\r\n    // }\r\n\r\n    // let mindate = new Date();\r\n    // console.log(\"mindate\", mindate)\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n\r\n        setSelectedCategory(e.value);\r\n        setValue(name, value, { shouldValidate: true });\r\n    };\r\n\r\n\r\n    let period = new Date();\r\n    let instantJobDate = period.getUTCFullYear() + \"/\" + (period.getUTCMonth() + 1) + \"/\" + period.getUTCDate() + \" \" + period.getUTCHours() + \":\" + period.getUTCMinutes() + \":\" + period.getUTCSeconds();\r\n\r\n\r\n    // useEffect(() => {\r\n    // if (isJobDateNow) {\r\n    //     isJobDateNow && setValue(\"startDate\", instantJobDate, { shouldValidate: true })\r\n    //     console.log(\"instant job => \", instantJobDate)\r\n    // }\r\n\r\n    // }, [])\r\n\r\n\r\n    const toggleJobDate = (e) => {\r\n        if (e.target.checked) {\r\n            setValue(\"startDate\", instantJobDate, { shouldValidate: true })\r\n            // setValue(\"time\", new Date().toLocaleTimeString(), { shouldValidate: false })\r\n\r\n            console.log(\"instant job => \", instantJobDate)\r\n            setIsJobDateNow(true);\r\n        } else {\r\n            setValue(\"startDate\", \"\", { shouldValidate: true })\r\n            setIsJobDateNow(!isJobDateNow);\r\n        }\r\n    }\r\n\r\n    const locateUserHandler = () => {\r\n        if (!navigator.geolocation) {\r\n            alert('location feature is not available in your browser, please use another browser');\r\n            return;\r\n        }\r\n        navigator.geolocation.getCurrentPosition(successResult => {\r\n            const coordinates = {\r\n                lat: successResult.coords.latitude,\r\n                lng: successResult.coords.longitude,\r\n            }\r\n            console.log(\"user location -\", coordinates)\r\n\r\n            fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${coordinates.lat},${coordinates.lng}&key=${API_KEY}`)\r\n\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    let requester_location = data.results[0].formatted_address;\r\n                    console.log(\"requester's location => \", data)\r\n\r\n                })\r\n        },\r\n            error => {\r\n                alert('Could not locate your address unforturnately')\r\n            })\r\n    }\r\n\r\n\r\n    const onSubmit = (data) => {\r\n        confirmDialog({\r\n            message: 'Are you sure you want to make this request?',\r\n            header: 'Confirmation',\r\n            icon: 'pi pi-exclamation-triangle',\r\n            accept: () => {\r\n                if (isJobDateNow) {\r\n                    data.startDate = new Date().toISOString()\r\n                    data.now = true;\r\n                } else {\r\n                    data.now = false;\r\n                }\r\n                data.service = data.service.name;\r\n                locateUserHandler();\r\n                dispatch(createInstantJob(data));\r\n            },\r\n            reject: () => {\r\n                return;\r\n            },\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"background instant\" >\r\n                <div className=\"content-container\">\r\n                    <div className=\"p-grid\">\r\n                        <div className=\"p-col-12 p-md-9\">\r\n                            <div className=\"card card-size-list\">\r\n                                <div className=\"card-body\"></div>\r\n                                <InstantHeader\r\n                                    title=\"Create new instant hire\"\r\n                                    showBack={true}\r\n                                />\r\n\r\n                                <form onSubmit={handleSubmit(onSubmit)}>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"p-fluid p-md-6 p-sm-12\">\r\n                                            <div className=\"p-field\">\r\n                                                <label htmlFor=\"service\"> Job Service *</label>\r\n\r\n                                                <Dropdown\r\n                                                    options={Categories}\r\n                                                    optionLabel=\"name\"\r\n                                                    filter\r\n                                                    showClear\r\n                                                    filterBy=\"name\"\r\n                                                    icon=\"pi pi-plus\"\r\n                                                    id=\"service\"\r\n                                                    name=\"service\"\r\n                                                    value={selectedCategory}\r\n                                                    {...register(\"service\", { required: ` Please Select a service` })}\r\n                                                    onChange={handleChange}\r\n                                                />\r\n\r\n                                                {errors.service && <span className=\"text-danger font-weight-bold \"> <p>{errors.service.message}</p>\r\n                                                </span>}\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                        <div className=\"p-fluid p-md-6 p-sm-12\">\r\n                                            <div className=\"p-field\">\r\n                                                <label htmlFor=\"location\">Location * </label>\r\n                                                <InputText\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Location\"\r\n                                                    name=\"location\"\r\n                                                    {...register(\"location\", { required: \"Location is required\" })}\r\n                                                />\r\n                                                {errors.location && <span className=\"text-danger font-weight-bold \"> <p>{errors.location.message}</p>\r\n                                                </span>}\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"p-fluid p-md-6 p-sm-12\">\r\n                                            <div className=\"p-field\">\r\n                                                <label htmlFor=\"address\">Meet Up Location * </label>\r\n                                                <InputText\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Address\"\r\n                                                    name=\"address\"\r\n                                                    {...register(\"address\", { required: \"Address is required\" })}\r\n                                                />\r\n                                                {errors.address && <span className=\"text-danger font-weight-bold \"> <p>{errors.address.message}</p>\r\n                                                </span>}\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"p-fluid p-md-6 p-sm-12\">\r\n                                            <div className=\"p-field\">\r\n                                                <label htmlFor=\"phoneNumber\">Phone Number * </label>\r\n                                                <InputText\r\n                                                    type=\"number\"\r\n                                                    placeholder=\"Phone Number\"\r\n                                                    name=\"phoneNumber\"\r\n                                                    {...register(\"phoneNumber\", { required: \"Phone Number is required\" })}\r\n\r\n                                                />\r\n\r\n                                                {errors.address && <span className=\"text-danger font-weight-bold \"> <p>{errors.phoneNumber.message}</p>\r\n                                                </span>}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"p-fluid p-md-6 p-sm-12\">\r\n\r\n                                            <div className=\"p-field\">\r\n                                                <label htmlFor=\"startDate\">  Start Date * &nbsp;\r\n                                                    ( <input type=\"checkbox\" onClick={toggleJobDate} name=\"instance\" defaultChecked={isJobDateNow}\r\n                                                        className=\"align-text-bottom\" />\r\n                                                    <small className=\"font-weight-bold\"> NOW </small>  ) &nbsp; {isJobDateNow && (<span className=\"appcolor text-white px-3\"> {instantJobDate}</span>)}\r\n                                                </label>\r\n                                                <Calendar\r\n                                                    id=\"startDate\"\r\n                                                    type=\"date\"\r\n                                                    value={startDate}\r\n                                                    disabled={isJobDateNow}\r\n                                                    // maxDate={endDate}\r\n                                                    name=\"startDate\"\r\n                                                    {...register(\"startDate\", {\r\n                                                        required: ` Start Date is required`,\r\n                                                    })}\r\n                                                    onSelect={(e) => {\r\n                                                        const inputName = \"startDate\";\r\n                                                        const value = new Date(e.value).toISOString();\r\n\r\n                                                        setStartDate(value);\r\n                                                        setValue(inputName, value, { shouldValidate: true });\r\n                                                    }}\r\n                                                    name=\"startDate\"\r\n                                                    {...register(\"startDate\", {\r\n                                                        required: `Start date is required`,\r\n                                                    })}\r\n                                                />\r\n                                                {errors.startDate && <span className=\"text-danger font-weight-bold \"> <p>{errors.startDate.message}</p>\r\n                                                </span>}\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"p-fluid p-md-6 p-sm-12\">\r\n                                            <div className=\"p-field\">\r\n                                                <label htmlFor=\"endDate\">{\" \"}End Date * </label>\r\n                                                <Calendar\r\n                                                    id=\"endDate\"\r\n                                                    type=\"date\"\r\n                                                    value={endDate}\r\n                                                    // minDate={minDate}\r\n                                                    name=\"endDate\"\r\n                                                    {...register(\"endDate\", {\r\n                                                        required: `End Date is required`,\r\n                                                    })}\r\n                                                    onSelect={(e) => {\r\n                                                        const inputName = \"endDate\";\r\n                                                        const value = e.value.toISOString();\r\n                                                        setEndDate(value);\r\n                                                        setValue(inputName, value, { shouldValidate: true });\r\n                                                    }}\r\n                                                    name=\"endDate\"\r\n                                                    {...register(\"endDate\", {\r\n                                                        required: ` End date is required`,\r\n                                                        validate: value => !value || !startdate || value > startdate || \"End date cannot be less than Start date\"\r\n                                                    })}\r\n                                                />\r\n                                                {errors.endDate && (<span className=\"text-danger font-weight-bold\">&nbsp; {errors.endDate.message}</span>)}\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        {/* {!isJobDateNow && <div className=\"p-fluid p-md-6 p-sm-12\">\r\n                                            <div className=\"p-field\">\r\n                                                <label htmlFor=\"lastname\"> Time *</label>\r\n                                                <InputText type=\"time\"\r\n                                                    placeholder=\"Time\"\r\n                                                    name=\"time\"\r\n                                                    {...register(\"time\", { required: \"Time is required\" })}\r\n                                                />\r\n                                                {errors.time && <span className=\"text-danger font-weight-bold \"> <p>{errors.time.message}</p>\r\n                                                </span>}\r\n                                            </div>\r\n                                        </div>} */}\r\n                                        <div className=\"p-fluid p-md-12 p-sm-12\">\r\n                                            <div className=\"p-field\">\r\n                                                <label htmlFor=\"lastname\"> Description *</label>\r\n                                                <InputTextarea\r\n                                                    defaultValue={desc}\r\n                                                    onChange={(e) => setDesc(e.target.value)}\r\n                                                    rows={3}\r\n                                                    cols={30}\r\n                                                    placeholder=\"Job Description\"\r\n                                                    name=\"description\"\r\n                                                    {...register(\"description\", { required: \"Description is required\" })}\r\n                                                />\r\n                                                {errors.description && <span className=\"text-danger font-weight-bold \"> <p>{errors.description.message}</p>\r\n                                                </span>}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <Button icon=\"pi pi-check\"\r\n                                        iconPos=\"left\"\r\n                                        label={loading ? \"Please wait...\" : \"Submit\"}\r\n                                        disabled={loading}\r\n                                        type=\"submit\"\r\n                                        className=\"float-right\" />\r\n                                </form>\r\n\r\n                                {/* <ConfirmDialog visible={visible} onHide={() => setVisible(false)} message=\"Are you sure you want to proceed?\"\r\n                header=\"Confirmation\" icon=\"pi pi-exclamation-triangle\" accept={accept} reject={reject} />\r\n            <Button onClick={() => setVisible(true)} icon=\"pi pi-check\" label=\"Confirm\" /> */}\r\n                            </div>\r\n                        </div>\r\n                        <RecentInstantJobs />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default New;\r\n"],"sourceRoot":""}