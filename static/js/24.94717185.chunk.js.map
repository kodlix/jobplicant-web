{"version":3,"sources":["helpers/converter.js","pages/applicant-profile/ApplicantProfile.jsx"],"names":["formatter","toMoney","input","toLocaleString","style","currency","replace","toDate","date","moment","format","capitalizeFirstLetter","name","toUpperCase","slice","getPageToLoad","itemCount","pageLimit","number","Number","isInteger","Math","ceil","ApplicantProfile","applicantId","useParams","id","useState","activeTab","setActiveTab","limit","page","isShowInfo","setIsShowInfo","isHideReview","setIsHideReview","applicantid","dispatch","useDispatch","loading","useSelector","state","account","profileInfo","applicantReview","review","accountType","agentService","Auth","current","console","log","history","useHistory","mode","setMode","itemToEdit","setItemToEdit","useEffect","loadCountry","loadAccountByUser","loadApplicantReviews","openCreate","openModal","openEdit","data","formatDate","getFullYear","getMonth","toString","padStart","getDate","className","isViewApplicant","onClick","goBack","hidden","ACCOUNT_TYPE","ARTISAN","length","map","index","reviewerName","src","alt","rating","title","createdAt"],"mappings":"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","file":"static/js/24.94717185.chunk.js","sourcesContent":["import moment from 'moment';\r\n\r\nexport const formatter = {\r\n  toMoney: (input) =>\r\n    \"â‚¦\" +\r\n    input\r\n      .toLocaleString(\"en-US\", {\r\n        style: \"currency\",\r\n        currency: \"NGN\",\r\n      })\r\n      .replace(\"NGN\", \"\"),\r\n  toDate: (date) => moment(date).format('DD-MM-YYYY'),\r\n  capitalizeFirstLetter: (name) => {\r\n    if (name) {\r\n      return name[0].toUpperCase() + name.slice(1);\r\n    }\r\n  },\r\n  getPageToLoad: (itemCount, pageLimit) => {\r\n    let number = itemCount / pageLimit;\r\n    let pageToLoad = Number.isInteger(number) ? number + 1 : Math.ceil(number);\r\n    return pageToLoad;\r\n  }\r\n};\r\n\r\n","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loadAccountByUser } from \"store/modules/account\";\r\nimport { openModal } from \"store/modules/modal\";\r\nimport Biography from \"components/profile/Biography\";\r\nimport Experience from \"components/profile/Experience\";\r\nimport Education from \"components/profile/Education\";\r\nimport Skills from \"components/profile/Skills\";\r\nimport Hobbies from \"components/profile/Hobbies\";\r\nimport ProfessionsOfInterest from \"components/profile/ProfessionsOfInterest\";\r\nimport LocationOfInterest from \"components/profile/LocationOfInterest\";\r\nimport ContactInformation from \"components/profile/ContactInformation\";\r\nimport ModalForm from 'components/profile/ModalForm';\r\nimport agentService from 'services/agent.service';\r\nimport Spinner from 'components/spinner/spinner.component';\r\nimport { loadCountry } from 'store/modules/location';\r\nimport PersonalInfo from 'components/profile/PersonalInfo';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport { ACCOUNT_TYPE } from 'constants/accountType';\r\nimport { loadApplicantReviews } from 'store/modules/review';\r\nimport { formatter } from 'helpers/converter';\r\nimport Portfolio from 'components/profile/Portfolio';\r\nimport { Button } from 'primereact/button';\r\nimport \"./ApplicantProfile.css\"\r\n\r\n// const ApplicantContext  = useContext(false);\r\n\r\nconst ApplicantProfile = () => {\r\n    const applicantId = useParams().id;\r\n    const [activeTab, setActiveTab] = useState(\"info\");\r\n    const [limit, setLimit] = useState(50);\r\n    const [page, setPage] = useState(1);\r\n    const [isShowInfo, setIsShowInfo] = useState(true);\r\n    const [isHideReview, setIsHideReview] = useState(true);\r\n\r\n    const applicantid = useParams().id;\r\n    const dispatch = useDispatch();\r\n    const loading = useSelector(state => state.account.loading);\r\n    const profileInfo = useSelector((state) => state.account.profileInfo);\r\n    const applicantReview = useSelector(state => state.review.review);\r\n    const accountType = agentService.Auth.current().accountType;\r\n\r\n    console.log(\"applicantReview\", applicantReview)\r\n\r\n    const history = useHistory();\r\n\r\n    const handleInfoTab = () => {\r\n        setIsHideReview(true);\r\n        setIsShowInfo(true);\r\n    }\r\n\r\n    const handleReviewTab = () => {\r\n        setIsHideReview(false);\r\n        setIsShowInfo(false);\r\n    }\r\n\r\n    const [mode, setMode] = useState(\"create\");\r\n    const [itemToEdit, setItemToEdit] = useState({});\r\n\r\n    useEffect(() => {\r\n        dispatch(loadCountry());\r\n        dispatch(loadAccountByUser(applicantid));\r\n        dispatch(loadApplicantReviews(applicantId, page, limit));\r\n    }, [dispatch, applicantid]);\r\n\r\n    const openCreate = (name) => {\r\n        setMode(\"create\");\r\n        setItemToEdit({});\r\n        dispatch(openModal(name));\r\n    };\r\n\r\n    const openEdit = (name, data) => {\r\n        setMode(\"edit\");\r\n        setItemToEdit(data);\r\n        dispatch(openModal(name));\r\n    };\r\n\r\n    const formatDate = (date) => {\r\n        let year = date.getFullYear();\r\n        let month = (1 + date.getMonth()).toString().padStart(2, \"0\");\r\n        let day = date.getDate().toString().padStart(2, \"0\");\r\n\r\n        return year + \"/\" + month + \"/\" + day;\r\n    };\r\n    console.log('loading', loading)\r\n    if (loading)\r\n        return <Spinner />\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"pt-5\">\r\n                <div className=\"d-flex justify-content-lg-between\">\r\n                    <PersonalInfo\r\n                        openCreate={openCreate}\r\n                        openEdit={openEdit}\r\n                        data={profileInfo}\r\n                        isViewApplicant={true}\r\n\r\n                    />\r\n                    <div className=\"flex-shrink-0\">\r\n                        <Button onClick={() => history.goBack()} className=\"bk-btn p-pt-2 app-color\"><i className=\"pi pi-arrow-left text-white\">  Back</i></Button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"p-grid\">\r\n                    <div className=\"p-col-9 content-smallscreen\">\r\n                        <div className=\"content-tab\">\r\n                            <div className=\"p-d-inline-flex m-2\">\r\n                                <div onClick={() => { setActiveTab(\"info\"); handleInfoTab() }} className=\"text-center pointer\">\r\n                                    <i\r\n                                        className={`pi pi-info-circle ${activeTab === \"info\" && \"pi-active\"\r\n                                            }`}\r\n                                    ></i>\r\n                                    <div className=\"tab-titles pi-active\">Info</div>\r\n                                </div>\r\n\r\n                                <div onClick={() => { setActiveTab(\"review\"); handleReviewTab() }} className=\"text-center pointer\">\r\n                                    <i\r\n                                        className={`pi pi-star ${activeTab === \"review\" && \"pi-active\"}`}\r\n                                    ></i>\r\n                                    <div className={`tab-titles`}>Reviews</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"content-body\" hidden={!isShowInfo}>\r\n                            <Biography\r\n                                openCreate={openCreate}\r\n                                openEdit={openEdit}\r\n                                profileInfo={profileInfo}\r\n                                isViewApplicant={true}\r\n                            />\r\n\r\n                            <div className=\"p-grid\">\r\n                                <div className=\"p-col-12 p-md-8 content-leftPanel\">\r\n                                    <Experience\r\n                                        openCreate={openCreate}\r\n                                        openEdit={openEdit}\r\n                                        profileInfo={profileInfo}\r\n                                        formatDate={formatDate}\r\n                                        isViewApplicant={true}\r\n\r\n                                    />\r\n                                    <Education\r\n                                        openCreate={openCreate}\r\n                                        openEdit={openEdit}\r\n                                        profileInfo={profileInfo}\r\n                                        formatDate={formatDate}\r\n                                        isViewApplicant={true}\r\n\r\n                                    />\r\n                                </div>\r\n                                <div className=\"p-col-12 content-rightPanel p-md-4\">\r\n                                    <ContactInformation\r\n                                        openCreate={openCreate}\r\n                                        openEdit={openEdit}\r\n                                        profileInfo={profileInfo}\r\n                                        isViewApplicant={true}\r\n\r\n                                    />\r\n                                    <Skills\r\n                                        openCreate={openCreate}\r\n                                        openEdit={openEdit}\r\n                                        profileInfo={profileInfo}\r\n                                        isViewApplicant={true}\r\n                                    />\r\n                                    {accountType !== ACCOUNT_TYPE.ARTISAN && <Hobbies\r\n                                        openCreate={openCreate}\r\n                                        openEdit={openEdit}\r\n                                        profileInfo={profileInfo}\r\n                                        isViewApplicant={true}\r\n                                    />}\r\n                                    {accountType !== ACCOUNT_TYPE.ARTISAN && <ProfessionsOfInterest\r\n                                        openCreate={openCreate}\r\n                                        openEdit={openEdit}\r\n                                        profileInfo={profileInfo}\r\n                                        isViewApplicant={true}\r\n                                    />}\r\n                                    <LocationOfInterest\r\n                                        openCreate={openCreate}\r\n                                        openEdit={openEdit}\r\n                                        profileInfo={profileInfo}\r\n                                        isViewApplicant={true}\r\n                                    />\r\n\r\n                                </div>\r\n                            </div>\r\n                            <ModalForm data={profileInfo} mode={mode} itemToEdit={itemToEdit} />\r\n                        </div>\r\n                        {/* review tab. */}\r\n                        <div className=\"pt-2\" hidden={isHideReview}>\r\n                            <div className=\"p-card p-4 \">\r\n                                <h3>Reviews</h3>\r\n                            </div>\r\n                            <div className=\"mt-1 mb-3\">\r\n                                {applicantReview.data && applicantReview.data.length > 0 && applicantReview.data.map((review, index) => (\r\n                                    <div className=\"p-card p-4 mt-2 d-flex justify-content-between\" key={index} >\r\n                                        <div className=\"d-flex\">\r\n                                            <div className=\"d-col text-center\">\r\n                                                <div>\r\n                                                    <p>{review?.reviewerName}</p>\r\n                                                </div>\r\n                                                <img\r\n                                                    src=\"https://source.unsplash.com/random/50x50\"\r\n                                                    className=\"rounded circle\"\r\n                                                    alt=\"image\"\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"p-2\"></div>\r\n                                            <div>\r\n                                                <ul>\r\n                                                    <li className=\"d-flex flex-column\">\r\n                                                        <p className=\"p-1\">{ }</p>\r\n                                                        <span>\r\n                                                            <div\r\n                                                                className=\"stars\"\r\n                                                                style={{ \"--rating\": review?.rating }}\r\n                                                            ></div>\r\n                                                        </span>\r\n                                                    </li>\r\n\r\n                                                    <li className=\"d-flex\">{review?.title}</li>\r\n                                                </ul>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"flex-column-reverse\">\r\n                                            <p>{formatter.toDate(review.createdAt)}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                                {applicantReview.length === 0 && <strong className=\"mx-auto text-secondary\">No review found</strong>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {accountType === ACCOUNT_TYPE.ARTISAN && <Portfolio openCreate={openCreate} openEdit={openEdit} />}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ApplicantProfile;"],"sourceRoot":""}