{"version":3,"sources":["components/profile/SectionHeader.js","pages/instant-jobs/Recent_instant_Jobs.js","pages/instant-job-hire/Review.js"],"names":["SectionHeader","openModalOnEdit","openModalOnCreate","deleteItem","hasData","sectionTitle","icon","id","showAddButton","showEditButton","showDeleteButton","isViewApplicant","className","onClick","RecentInstantJobs","dispatch","useDispatch","useState","page","take","copyAlert","setCopyAlert","allCurrentInstantJobs","useSelector","state","instantJob","console","log","useEffect","fetchAllInstantJobs","handleShareButton","e","jobId","currentTarget","dataset","el","document","createElement","value","window","location","host","body","appendChild","select","execCommand","removeChild","setTimeout","style","height","length","map","instantjob","flexWrap","src","borderRadius","alt","to","fontSize","service","str","description","no_words","split","splice","join","moment","createdAt","fromNow","data-id","Review","props","history","useHistory","rating","setRating","useForm","mode","reValidateMode","register","handleSubmit","errors","formState","setValue","watch","review","setReview","loading","applicant","useParams","goBack","onSubmit","data","applicantId","createReview","width","cancel","onChange","stars","name","htmlFor","type","placeholder","required","title","message","reviewerDisplayName","defaultValue","target","rows","cols","detail","iconPos","label","disabled"],"mappings":"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","file":"static/js/19.fdd40f97.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst SectionHeader = ({\r\n  openModalOnEdit,\r\n  openModalOnCreate,\r\n  deleteItem,\r\n  hasData,\r\n  sectionTitle,\r\n  icon,\r\n  id,\r\n  showAddButton = false,\r\n  showEditButton = false,\r\n  showDeleteButton = false,\r\n  isViewApplicant = false\r\n}) => {\r\n\r\n\r\n  return (\r\n    <div className=\"sectionHeader\">\r\n      <div className=\"p-card-title\">\r\n        <span>\r\n          <i className={`pi pi-${icon}`}></i>\r\n          {sectionTitle}\r\n        </span>\r\n        {!isViewApplicant && <span>\r\n          {showAddButton && !hasData && (\r\n            <i className=\"pi pi-plus\" onClick={openModalOnCreate}></i>\r\n          )}\r\n          {showEditButton && hasData && (\r\n            <i className=\"pi pi-pencil\" onClick={openModalOnEdit} id={id}></i>\r\n          )}\r\n          {showDeleteButton && (\r\n            <i className=\"pi pi-trash\" onClick={deleteItem} id={id}></i>\r\n          )}\r\n        </span>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SectionHeader;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchAllInstantJobs } from 'store/modules/instantJob';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\nimport \"../profile/UserProfile.css\";\r\nimport SectionHeader from \"components/profile/SectionHeader\";\r\n\r\nimport './Instant-Jobs.css';\r\n\r\n\r\nconst RecentInstantJobs = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [take, setTake] = useState(10);\r\n    const [copyAlert, setCopyAlert] = useState(null);\r\n\r\n    const allCurrentInstantJobs = useSelector(state => state.instantJob.allCurrentInstantJobs);\r\n    console.log(\"allcurrentjob\", allCurrentInstantJobs)\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchAllInstantJobs(page, take))\r\n    }, [dispatch])\r\n\r\n    const handleShareButton = (e,) => {\r\n        const jobId = e.currentTarget.dataset.id;\r\n        const el = document.createElement('input');\r\n        el.value = window.location.host + `/instant-hire/view/${jobId}`;\r\n        document.body.appendChild(el);\r\n        el.select();\r\n        document.execCommand('copy');\r\n        document.body.removeChild(el);\r\n        setCopyAlert(jobId);\r\n        setTimeout(function () { setCopyAlert(false); }, 1000);\r\n    }\r\n\r\n\r\n    function truncate(str, no_words) {\r\n        return str.split(\" \").splice(0, no_words).join(\" \");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"p-col-12 p-md-3 p-pt-2\">\r\n                <div className=\"p-card\">\r\n                    <SectionHeader\r\n                        icon=\"briefcase\"\r\n                        sectionTitle=\"Recent Instant Jobs\"\r\n                        id=\"portfolioEdit\"\r\n                        showEditButton=\"false\"\r\n                    />\r\n                    <div className=\"p-card-body p-grid p-mt-1 overflow-auto\" style={{ height: 500 }}>\r\n                        {allCurrentInstantJobs && allCurrentInstantJobs.length > 0 && allCurrentInstantJobs.map(instantjob =>\r\n                            <div key={instantjob.id} className=\"\" >\r\n                                <div className=\"panel-login text-center\"></div>\r\n                                <div className=\"highlight-card p-p-1\">\r\n                                    <div className=\"row \" style={{ flexWrap: \"nowrap !important\" }} >\r\n                                        <div className=\"col-3 rounded-circle\">\r\n                                            <img\r\n                                                src=\"https://source.unsplash.com/random/100x100\" style={{ borderRadius: \"50%\" }}\r\n                                                className=\"img-fluid\"\r\n                                                alt=\"user-image\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"col-9\">\r\n                                            <small >\r\n                                                <Link className=\"p-text-secondary\" to={`/instant-hire/view/${instantjob.id}`}>\r\n                                                    <p className=\"font-weight-bold\"> <span className=\"app-color text-capitalize\" style={{ fontSize: 15 }}> {instantjob.service}</span></p>\r\n                                                    <p className=\"font-weight-bold text-capitalize\">{instantjob.location} </p>\r\n                                                    <p><span className=\"font-weight-bold text-capitalize\"> </span> {`${truncate(instantjob.description, 20)} ${'...'}`}</p>\r\n                                                </Link>\r\n                                                <div className=\"d-flex justify-content-between\">\r\n                                                    <div>\r\n                                                        <p className=\"p-pt-2 float-right\"> {moment(instantjob.createdAt).fromNow()} </p>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <div>\r\n                                                            <i className=\"pi pi-share-alt p-pt-2\" data-id={instantjob.id}\r\n                                                                onClick={handleShareButton}> Share\r\n                                                            </i>\r\n                                                        </div>\r\n                                                        <span className={copyAlert === instantjob.id ? \"job-copyModalAlert--active\" : \"job-copyModalAlert\"}>\r\n                                                            Link copied\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            </small >\r\n                                        </div>\r\n                                        <hr />\r\n                                    </div>\r\n                                </div>\r\n                            </div>)}\r\n                        {\r\n                            allCurrentInstantJobs?.length === 0 && <strong className=\"mx-auto\">No Recent Job Yet</strong>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RecentInstantJobs;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport { Rating } from 'primereact/rating';\r\nimport { Button } from 'primereact/button';\r\nimport { acceptApplicant, loadApplicants, loadInstantJob, rejectApplicant, } from 'store/modules/instantJob';\r\nimport Spinner from 'components/spinner/spinner.component'\r\nimport { Tooltip } from 'primereact/tooltip';\r\nimport 'primeflex/primeflex.css';\r\n\r\nimport './InstantJobHire.css'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Tag } from 'primereact/tag';\r\nimport { confirmDialog } from 'primereact/confirmdialog';\r\nimport RecentInstantJobs from 'pages/instant-jobs/Recent_instant_Jobs';\r\nimport { InputTextarea } from 'primereact/inputtextarea';\r\nimport { useForm } from 'react-hook-form';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { createReview } from 'store/modules/review';\r\n\r\nconst Review = (props) => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory();\r\n\r\n    const [rating, setRating] = useState(0);\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch } = useForm({\r\n        mode: \"onChange\",\r\n        reValidateMode: \"onChange\"\r\n    });\r\n    const [review, setReview] = useState(\"\")\r\n    const loading = useSelector(state => state.review.loading);\r\n\r\n\r\n    // const instantJob = useSelector(state => state.instantJob.instantjob);\r\n    // const applicants = useSelector(state => state.instantJob.applicants);\r\n    // console.log(\"Applicant => \", applicants);\r\n    // console.log(\"instant-job => \", instantJob)\r\n\r\n    const applicant = useParams();\r\n    console.log(\"applicantid\", applicant)\r\n\r\n    useEffect(() => {\r\n        register(\"rating\")\r\n    }, [register])\r\n\r\n    // const handleChange = (e) => {\r\n    //     const { name, value } = e.target;\r\n    // };\r\n\r\n\r\n\r\n    const onSubmit = (data) => {\r\n        data.applicantId = applicant.applicantId;\r\n        data.jobId = applicant.jobId;\r\n        data.rating = rating;\r\n        dispatch(createReview(data))\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"content-container\">\r\n                <div className=\"p-grid\">\r\n\r\n                    <div className=\"card review-card-size mt-2 p-col-sm-12\">\r\n                        <div className=\"card-body p-pt-0\">\r\n                            <div className=\"applicants-display\">\r\n                                <div className=\"d-flex justify-content-between p-mb-1\">\r\n                                    <div>\r\n                                        <h5> <span className=\"font-weight-bold text-secondary\"></span> <span className=\"app-color\">\r\n                                            Rate & Review </span></h5>\r\n                                    </div>\r\n                                    <div className=\"bk-btn p-pt-2 app-color\" onClick={() => history.goBack()}>\r\n                                        {/* <Link to=\"/instant-hires\" className=\"bk-btn p-pt-2 app-color\"> */}\r\n                                        <i className=\"pi pi-arrow-left\">Back</i>\r\n                                        {/* </Link> */}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"d-flex d-row p-mt-3\">\r\n                                    <p className=\"p-mr-5\"> <span className=\"font-weight-bold\" >Job Id : </span> {applicant.jobId}</p>\r\n                                    <p className=\"p-mr-5\"> <span className=\"font-weight-bold\">Job Closed : </span><span>31 July, 2001</span></p>\r\n                                    <p className=\"p-mr-5\">  <span className=\"font-weight-bold\">Applicant :</span> <span>Mr Jonathan Ebele</span></p>\r\n                                </div>\r\n\r\n                                {/* <hr className=\"appcolor\" /> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"card review-card-size mt-2 mb-2 p-col-sm-12\">\r\n                        <div className=\"card-body p-pt-0\">\r\n                            <form onSubmit={handleSubmit(onSubmit)} className=\"applicants-display\">\r\n                                <div>\r\n                                    <h5> <span className=\"font-weight-bold text-secondary\"></span> <span className=\"app-color\">\r\n                                        Leave feedback about this artisan</span></h5>\r\n                                </div>\r\n\r\n                                <div className=\"row p-mt-4\">\r\n                                    <div className=\"col-2 rounded-circle\">\r\n                                        <img\r\n                                            src=\"https://source.unsplash.com/random/100x100\" style={{ borderRadius: \"50%\" }}\r\n                                            className=\"img-fluid\"\r\n                                            alt=\"user-image\" height=\"100\" width=\"100\"\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"col-10\">\r\n                                        <div>\r\n                                            {/* <p ><span style={{ fontSize: 15 }}> Adebisi Adekoga </span></p> */}\r\n                                            <p ><span style={{ fontSize: 15 }}> Drycleaner </span></p>\r\n                                            <div>\r\n                                                <p className=\"card-text\"><span className=\"font-weight-bold\">Rate this Appliant</span>  </p>\r\n                                                <div className=\"p-p-0\">\r\n                                                    <Rating\r\n                                                        value={rating}\r\n                                                        cancel={false}\r\n                                                        onChange={(e) => setRating(e.value)}\r\n                                                        stars={5}\r\n                                                        name=\"rating\"\r\n                                                    />\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                            {/* <p> <span></span> </p> */}\r\n\r\n                                        </div >\r\n                                    </div>\r\n                                </div>\r\n                                <hr />\r\n                                <div>\r\n                                    <div className=\"p-fluid p-formgrid p-grid\">\r\n                                        <div className=\"p-field p-col\">\r\n                                            <label htmlFor=\"title\">Review Title *</label>\r\n                                            <InputText\r\n                                                id=\"title\"\r\n                                                name=\"title\"\r\n                                                type=\"text\"\r\n                                                placeholder=\"e.g. I'm impressed / I'm not impressed\"\r\n                                                {...register(\"title\", { required: \"Title is required\" })}\r\n                                            />\r\n                                            {errors.title && <span className=\"text-danger font-weight-bold \"> <p>{errors.title.message}</p>\r\n                                            </span>}\r\n                                        </div>\r\n                                        <div className=\"p-field p-col\">\r\n                                            <label htmlFor=\"reviewerDisplayName\">Your Name *</label>\r\n                                            <InputText\r\n                                                id=\"reviewerDisplayName\"\r\n                                                name=\"reviewerDisplayName\"\r\n                                                type=\"text\"\r\n                                                {...register(\"reviewerDisplayName\", { required: \"Enter a Name \" })}\r\n\r\n                                            />\r\n                                            {errors.reviewerDisplayName && <span className=\"text-danger font-weight-bold \"> <p>{errors.reviewerDisplayName.message}</p>\r\n                                            </span>}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"p-fluid p-md-12 p-pl-0 p-sm-12\">\r\n                                        <div className=\"p-field\">\r\n                                            <label htmlFor=\"detail\"> Detailed Review *</label>\r\n                                            <InputTextarea\r\n                                                defaultValue={review}\r\n                                                onChange={(e) => setReview(e.target.value)}\r\n                                                rows={3}\r\n                                                cols={100}\r\n                                                placeholder=\"Please describe your experience with this applicant.\"\r\n\r\n                                                name=\"detail\"\r\n                                                {...register(\"detail\", { required: \"Details about this person service is required\" })}\r\n                                            />\r\n                                            {errors.detail && <span className=\"text-danger font-weight-bold \"> <p>{errors.detail.message}</p>\r\n                                            </span>}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <Button\r\n                                    icon={loading ? \" \" : \"pi pi-check\"}\r\n                                    iconPos=\"left\"\r\n                                    id=\"saveButton\"\r\n                                    type=\"submit\"\r\n                                    className=\"float-right\"\r\n                                    label={loading ? \"Please wait...\" : \"Submit\"}\r\n                                    disabled={loading}\r\n                                />\r\n\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Review\r\n"],"sourceRoot":""}