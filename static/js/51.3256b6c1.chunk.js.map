{"version":3,"sources":["pages/timeline/ViewPost.js"],"names":["ViewPost","dispatch","useDispatch","posts","useSelector","state","timeline","loading","loadingPosts","error","allJobs","job","profileInfo","account","useState","imageToDisplay","setImageToDisplay","params","useParams","isAuthenticated","agent","Auth","isAuth","useEffect","viewPost","id","loadProfileInfo","loadAllJobs","expandProfileImage","src","openModal","TIMELINE","ACTIVEUSERPICTURE","className","onHide","name","closeModal","closeEmojiPicker","post","data","imageUrl","ids","length","style","color","statusCode","onShow","EDITPOST","CREATEPOST"],"mappings":"iRAqHeA,UArGE,WAAO,IAAD,EACfC,EAAWC,cACXC,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SAASH,SAC5CI,EAAUH,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SAASE,gBAC9CC,EAAQL,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SAASG,SAC5CC,EAAUN,aAAY,SAAAC,GAAK,OAAIA,EAAMM,IAAID,WACzCE,EAAcR,aAAY,SAACC,GAAD,OAAWA,EAAMQ,QAAQD,eACzD,EAA4CE,mBAAS,IAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACMC,EAASC,cACTC,EAAkBC,IAAMC,KAAKC,SAYnCC,qBAAU,WACJN,IACFhB,EAASuB,YAASP,EAAOQ,GAAI,aACzBN,IACFlB,EAASyB,eACTzB,EAAS0B,mBAGZ,CAAC1B,IAEJ,IAAM2B,EAAqB,SAACC,GAC1Bb,EAAkBa,GAClB5B,EAAS6B,YAAUC,IAASC,qBAQ9B,OACE,mCACE,qBAAKC,UAAU,qBAAf,SACE,qBAAKA,UAAU,mBAAf,SACE,sBAAKA,UAAU,sBAAf,UACGd,GACC,cAAC,IAAD,CACEP,YAAaA,EACbgB,mBAAoBA,IAExB,sBAAKK,UAAS,iCAA4Bd,EAAkB,SAAW,UAAvE,UACE,cAAC,IAAD,CACEe,OAjBC,SAACC,GACdlC,EAASmC,YAAWD,IACpBlC,EAASoC,eACTrB,EAAkB,KAeNsB,KAAI,OAAEnC,QAAF,IAAEA,OAAF,EAAEA,EAAOoC,KAAKtB,EAAOQ,IACzBe,SAAUzB,IAGE,aAAZR,GACsB,KAAjB,OAALJ,QAAK,IAALA,OAAA,EAAAA,EAAOsC,IAAIC,SACX,qBAAKT,UAAU,sCAAf,SACE,mBACEA,UAAU,wBACVU,MAAO,CAAE,SAAY,MAAOC,MAAO,eAIjB,OAAjB,OAALnC,QAAK,IAALA,OAAA,EAAAA,EAAOoC,aACP,sBAAKZ,UAAU,0GAAf,UACE,6BACE,sCAIF,oBAAIA,UAAU,SAAd,4CAMG,OAAL9B,QAAK,IAALA,GAAA,UAAAA,EAAOsC,WAAP,eAAYC,QAAS,GACrB,qBAAKT,UAAU,0BAAf,SACE,cAAC,IAAD,CACEK,KAAMnC,EAAMoC,KAAKtB,EAAOQ,IAExBqB,OAzEH,SAACrB,GAEZxB,EADEwB,EACOK,YAAUC,IAASgB,UAGnBjB,YAAUC,IAASiB,cAqEdpC,YAAaA,EACbO,gBAAiBA,EACjBS,mBAAoBA,GAJfX,EAAOQ,SASpB,cAAC,IAAD,CAAcc,KAAM7B","file":"static/js/51.3256b6c1.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ModalMode from './ModalMode';\r\nimport { useParams } from 'react-router-dom'\r\nimport { openModal, closeModal } from \"store/modules/modal\";\r\nimport { loadProfileInfo } from \"store/modules/account\";\r\nimport { closeEmojiPicker } from \"store/modules/emojiPicker\";\r\nimport { viewPost } from \"../../store/modules/timeline\";\r\nimport TimelineLeftPanel from \"./TimelineLeftPanel\";\r\nimport { loadAllJobs } from \"store/modules/job\";\r\nimport { TIMELINE } from \"constants/timeline\";\r\nimport agent from \"../../services/agent.service\";\r\nimport JobSidePanel from \"../../components/JobSidePanel\";\r\nimport \"./Timeline.css\";\r\nimport Post from './Post';\r\n\r\nconst ViewPost = () => {\r\n  const dispatch = useDispatch();\r\n  const posts = useSelector(state => state.timeline.posts);\r\n  const loading = useSelector(state => state.timeline.loadingPosts);\r\n  const error = useSelector(state => state.timeline.error);\r\n  const allJobs = useSelector(state => state.job.allJobs);\r\n  const profileInfo = useSelector((state) => state.account.profileInfo);\r\n  const [imageToDisplay, setImageToDisplay] = useState(\"\");\r\n  const params = useParams();\r\n  const isAuthenticated = agent.Auth.isAuth();\r\n\r\n\r\n  const onShow = (id) => {\r\n    if (id) {\r\n      dispatch(openModal(TIMELINE.EDITPOST));\r\n    }\r\n    else {\r\n      dispatch(openModal(TIMELINE.CREATEPOST));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (params) {\r\n      dispatch(viewPost(params.id, \"viewPost\"));\r\n      if (isAuthenticated) {\r\n        dispatch(loadProfileInfo());\r\n        dispatch(loadAllJobs());\r\n      }\r\n    }\r\n  }, [dispatch]);\r\n\r\n  const expandProfileImage = (src) => {\r\n    setImageToDisplay(src)\r\n    dispatch(openModal(TIMELINE.ACTIVEUSERPICTURE));\r\n  }\r\n\r\n  const onHide = (name) => {\r\n    dispatch(closeModal(name));\r\n    dispatch(closeEmojiPicker());\r\n    setImageToDisplay(\"\");\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"timeline-container\">\r\n        <div className=\"timeline-content\">\r\n          <div className=\"p-grid p-mt-2 p-m-0\">\r\n            {isAuthenticated &&\r\n              <TimelineLeftPanel\r\n                profileInfo={profileInfo}\r\n                expandProfileImage={expandProfileImage}\r\n              />}\r\n            <div className={`p-col-12 p-md-6 p-px-0 ${isAuthenticated ? \"p-md-6\" : \"p-md-9\"}`}>\r\n              <ModalMode\r\n                onHide={onHide}\r\n                post={posts?.data[params.id]}\r\n                imageUrl={imageToDisplay}\r\n              />\r\n              {\r\n                loading === \"viewPost\" &&\r\n                posts?.ids.length === 0 &&\r\n                <div className=\"p-p-5 d-flex justify-content-center\">\r\n                  <i\r\n                    className=\"pi pi-spin pi-spinner\"\r\n                    style={{ 'fontSize': '2em', color: \"#5A2846\" }} />\r\n                </div>\r\n              }\r\n              {\r\n                error?.statusCode === 404 &&\r\n                <div className=\"p-card p-py-3 p-py-sm-5 p-pl-3 p-pl-sm-5 p-pr-4 p-pr-sm-6 timeline-posts timeline-postsContainer--empty\">\r\n                  <h1>\r\n                    <u>\r\n                      404\r\n                    </u>\r\n                  </h1>\r\n                  <h5 className=\"p-mt-4\">\r\n                    This post no longer exists\r\n                  </h5>\r\n                </div>\r\n              }\r\n              {\r\n                posts?.ids?.length > 0 &&\r\n                <div className=\"timeline-postsContainer\">\r\n                  <Post\r\n                    post={posts.data[params.id]}\r\n                    key={params.id}\r\n                    onShow={onShow}\r\n                    profileInfo={profileInfo}\r\n                    isAuthenticated={isAuthenticated}\r\n                    expandProfileImage={expandProfileImage}\r\n                  />\r\n                </div>\r\n              }\r\n            </div>\r\n            <JobSidePanel data={allJobs} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ViewPost;"],"sourceRoot":""}