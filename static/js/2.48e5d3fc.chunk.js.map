{"version":3,"sources":["helpers/converter.js","components/JobSidePanel.js","constants/timeline.js","pages/timeline/TimelineLeftPanel.js","components/ThumbDown.js","components/ThumbUp.js","pages/timeline/CommentForm.js","pages/timeline/Comment.js","pages/timeline/CommentList.js","pages/timeline/Post.js","pages/timeline/PostForm.js","pages/timeline/PostJobModal.js","pages/timeline/ModalMode.js"],"names":["formatter","toMoney","input","toLocaleString","style","currency","replace","toDate","date","moment","format","capitalizeFirstLetter","name","toUpperCase","slice","getPageToLoad","itemCount","pageLimit","number","Number","isInteger","Math","ceil","JobSidePanel","data","className","map","job","to","id","title","severity","value","contactType","hideCompanyName","companyName","location","minSalary","maxSalary","length","TIMELINE","CREATEPOST","CREATEJOB","EDITPOST","ACTIVEUSERPICTURE","POSTIMAGE","TimelineLeftPanel","profileInfo","expandProfileImage","imageUrl","width","height","alt","src","onClick","e","target","firstName","accountType","ACCOUNT_TYPE","CORPORATE","lastName","city","country","type","iconPos","icon","ThumbsDown","disliked","color","xmlns","fill","viewBox","transform","d","ThumbsUp","liked","CommentForm","postId","dispatch","useDispatch","emojiPickerId","useSelector","state","emojiPicker","loadingTypeCommentModule","comment","loadingType","useState","setComment","useForm","register","handleSubmit","setValue","formState","errors","useEffect","closeEmojiPicker","window","addEventListener","_handleClickEvent","some","parentId","isDescendantElement","_handleEmojiToggle","el","isDescendant","parentNode","openEmojiPicker","onSubmit","postComment","rows","cols","autoResize","placeholder","required","onChange","inputValue","trim","shouldValidate","inputChange","showPreview","showSkinTones","onSelect","emoji","emojiToAdd","sym","unified","split","codesArray","forEach","push","String","fromCodePoint","handleEmojiSelect","exclude","skin","position","right","top","size","label","disabled","Comment","key","displayCommentForm","isAuthenticated","agent","Auth","isAuth","API_ROOT","createdAt","fromNow","createdBy","current","email","role","aria-expanded","data-bs-toggle","aria-labelledby","data-id","deleteComment","currentTarget","dataset","message","editMode","commentId","likeComment","handleLike","likes","dislikeComment","handleDislike","dislikes","CommentList","onViewComments","commentCount","comments","commentIds","timeline","pageNumber","setPageNumber","loading","meta","total","Post","post","onShow","setImageToDisplay","loadingPosts","copyAlert","setCopyAlert","isCorporate","author","ARTISAN","rating","deletePost","dangerouslySetInnerHTML","__html","body","postImage","openModal","likePost","dislikePost","document","createElement","host","appendChild","select","execCommand","removeChild","setTimeout","commentPage","loadComments","CreatePostModal","clearModalInput","postActionStatus","account","postObject","setPostObject","isEmojiOpen","setIsEmojiOpen","_quill","setQuill","preview","raw","image","setImage","code","selectedViewerGroup","setSelectedViewerGroup","baseClassName","Object","keys","imageurl","inputName","htmlValue","updatedPostObject","assign","header","range","getSelection","focus","deleteText","index","insertText","formData","FormData","append","editPost","createPost","options","optionLabel","htmlFor","defaultValue","validate","headerTemplate","onLoad","quill","onTextChange","getText","display","files","URL","createObjectURL","accept","autoFocus","PostJobModal","visible","onHide","onModalCheckChange","modalJobPostMode","ModalMode","modalName","modal","modalVisible","toggle","setToggle","dialogTitle","closeModal","checked","onLabel","offLabel","onIcon","offIcon","PostForm"],"mappings":"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","file":"static/js/2.48e5d3fc.chunk.js","sourcesContent":["import moment from 'moment';\r\n\r\nexport const formatter = {\r\n  toMoney: (input) =>\r\n    \"₦\" +\r\n    input\r\n      .toLocaleString(\"en-US\", {\r\n        style: \"currency\",\r\n        currency: \"NGN\",\r\n      })\r\n      .replace(\"NGN\", \"\"),\r\n  toDate: (date) => moment(date).format('DD-MM-YYYY'),\r\n  capitalizeFirstLetter: (name) => {\r\n    if (name) {\r\n      return name[0].toUpperCase() + name.slice(1);\r\n    }\r\n  },\r\n  getPageToLoad: (itemCount, pageLimit) => {\r\n    let number = itemCount / pageLimit;\r\n    let pageToLoad = Number.isInteger(number) ? number + 1 : Math.ceil(number);\r\n    return pageToLoad;\r\n  }\r\n};\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { formatter } from 'helpers/converter';\r\nimport { Tag } from 'primereact/tag';\r\nimport { Skeleton } from 'primereact/skeleton'\r\n\r\nimport \"./JobSidePanel.css\";\r\n\r\n\r\nconst JobSidePanel = ({ data }) => {\r\n  return (\r\n    <>\r\n      <div className=\"p-col-12 p-md-3 p-pr-0 p-py-md-2 p-pl-md-2 p-pl-0 p-pt-0\">\r\n        <div className=\"p-card\">\r\n          <div className=\"p-card-title cardtitle-JobPanelComponent\">\r\n            Recent Jobs\r\n          </div>\r\n          <div className=\"p-pb-4\">\r\n            {\r\n              data?.map((job) =>\r\n                <Link to={`/jobs/view/${job.id}`} className=\"p-card-body p-card-body-JobPanelComponent p-px-3 p-pb-3\" key={job.id} id={job.id}>\r\n                  <div className=\"p-card-title cardbody-JobPanelComponent\">\r\n                    <div className=\"d-flex justify-content-between\">\r\n                      <div className=\"cardsubtitle-JobPanelComponent\">{job.title}</div>\r\n                      <Tag className=\"p-mr-2\" severity=\"success\" value={job.contactType}></Tag>\r\n                    </div>\r\n                    {\r\n                      !job.hideCompanyName &&\r\n                      <div>\r\n                        <i className=\"align-text-bottom pi  pi-briefcase p-mr-1\" />\r\n                        <b className=\"p-pr-1\">Company:</b>\r\n                        <span className=\"jobdetails-JobPanelComponent\">{job.companyName}</span>\r\n                      </div>\r\n                    }\r\n                    <div>\r\n                      <i className=\"align-text-bottom pi pi-map-marker p-mr-1\" />\r\n                      <b className=\"p-pr-1\">Location:</b>\r\n                      <span className=\"jobdetails-JobPanelComponent\">\r\n                        {job.location}\r\n                      </span>\r\n                    </div>\r\n                    <div>\r\n                      <i className=\"align-text-bottom pi pi-money-bill p-mr-1\" />\r\n                      <b className=\"p-pr-1\">Salary:</b>\r\n                      <span className=\"jobdetails-JobPanelComponent\">\r\n                        {`~${formatter.toMoney((job.minSalary + job.maxSalary) / 2)}`}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"seemore-JobPanelComponent\">See more...</div>\r\n                </Link>\r\n              )\r\n            }\r\n            {\r\n              !data.length &&\r\n              <h6 className=\"p-px-3 p-pt-3 p-mb-6 p-pb-6 cardsubtitle-JobPanelComponent\">\r\n                No Recent Jobs available at the moment\r\n              </h6>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default JobSidePanel;","export const TIMELINE  = {\r\n  CREATEPOST: 'displayCreatePost',\r\n  CREATEJOB: 'displayCreateJob',\r\n  EDITPOST: 'displayEditPost',\r\n  ACTIVEUSERPICTURE: 'expandImage',\r\n  POSTIMAGE: 'displayPostImage'\r\n}","import React from 'react';\r\nimport { Button } from 'primereact/button';\r\nimport { formatter } from '../../helpers/converter';\r\nimport { Link } from 'react-router-dom';\r\nimport { ACCOUNT_TYPE } from 'constants/accountType';\r\n\r\nconst TimelineLeftPanel = ({ profileInfo, expandProfileImage }) => {\r\n  return (\r\n    <div className=\"p-col-12 p-md-3 p-pl-0 p-py-md-2 p-pr-md-2 p-pb-0 p-pr-0\">\r\n      <div className=\"p-card\">\r\n        <div className=\"leftpanel-top-container-timeline\"></div>\r\n        <div className=\"leftpanel-bottom-container-timeline\">\r\n          {\r\n            profileInfo.imageUrl &&\r\n            <img\r\n              width=\"80\"\r\n              height=\"80\"\r\n              alt=\"Profile\"\r\n              src={profileInfo?.imageUrl}\r\n              className=\"rounded-circle timeline-profilePicture\"\r\n              onClick={(e) => expandProfileImage(e.target.src)} />\r\n          }\r\n          {\r\n            !profileInfo.imageUrl &&\r\n            <div className=\"\">\r\n              <i className=\"pi pi-user timeline-emptyProfilePic\"></i>\r\n            </div>\r\n          }\r\n          {\r\n            profileInfo?.firstName && profileInfo?.accountType !== ACCOUNT_TYPE.CORPORATE &&\r\n            <>\r\n              <h4 className=\"p-mt-2\">\r\n                {`${formatter.capitalizeFirstLetter(profileInfo?.firstName)} ${formatter.capitalizeFirstLetter(profileInfo?.lastName)}`}\r\n              </h4>\r\n              <p className=\"p-mb-4 \">\r\n                <p className=\"p-mt-1\">\r\n                  Graphic Designer at Self Employed\r\n                </p>\r\n                <span className=\"p-mt-1\">\r\n                  {\r\n                    (profileInfo.city || profileInfo.country) &&\r\n                    <i className=\"pi pi-map-marker p-pr-1\"></i>\r\n                  }\r\n                  {\r\n                    profileInfo.city &&\r\n                    <span>{profileInfo?.city}</span>\r\n                  }\r\n                  {\r\n                    (profileInfo.city && profileInfo.country) &&\r\n                    <span>, &nbsp;</span>\r\n                  }\r\n                  {\r\n                    profileInfo.country &&\r\n                    <span>Nigeria</span>\r\n                  }\r\n                </span>\r\n              </p>\r\n            </>\r\n          }\r\n          {\r\n            profileInfo?.firstName && profileInfo?.accountType === ACCOUNT_TYPE.CORPORATE &&\r\n            <>\r\n              <h4 className=\"p-my-1 timeline-companyName\">\r\n                {formatter.capitalizeFirstLetter(profileInfo?.companyName)}\r\n              </h4>\r\n              <p className=\"p-mb-4\">\r\n                {\r\n                  (profileInfo.city || profileInfo.country) &&\r\n                  <i className=\"pi pi-map-marker p-pr-1\"></i>\r\n                }\r\n                <span className=\"p-mt-1\">\r\n                  {\r\n                    profileInfo.city &&\r\n                    <span>{profileInfo?.city}</span>\r\n                  }\r\n                  {\r\n                    profileInfo.city && profileInfo.country &&\r\n                    <span>, &nbsp;</span>\r\n                  }\r\n                  {\r\n                    profileInfo.country &&\r\n                    <span>Nigeria</span>\r\n                  }\r\n                </span>\r\n              </p>\r\n            </>\r\n          }\r\n          <div className=\"timeline-leftpanel-connection\">\r\n            <h5>\r\n              Following\r\n            </h5>\r\n            <h6>\r\n              45\r\n            </h6>\r\n          </div>\r\n          <div className=\"timeline-leftpanel-connection\">\r\n            <h5>\r\n              Followers\r\n            </h5>\r\n            <h6>\r\n              45\r\n            </h6>\r\n          </div>\r\n          <Link\r\n            className=\"timeline-leftpanel-connection w-100\"\r\n            to={profileInfo.accountType === ACCOUNT_TYPE.CORPORATE ? \"/company\" : \"/profile\"}\r\n          >\r\n            <h6>\r\n              View Profile\r\n            </h6>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"p-card p-mt-2\">\r\n        <div className=\"p-card-title cardtitle-timeline p-mb-3\">\r\n          Suggestions\r\n        </div>\r\n        <div className=\"p-card-body d-flex justify-content-between\">\r\n          <span className=\"d-flex align-items-end\">\r\n            <img\r\n              width=\"40\"\r\n              height=\"40\"\r\n              src=\"../../assets/logo.png\"\r\n              className=\"rounded-circle profile-picture-timeline p-mr-2\"\r\n            />\r\n            <span>\r\n              <div className=\"p-card-title cardsubtitle-timeline p-mb-0\">\r\n                Jane Doe\r\n              </div>\r\n              <p className=\"jobDescription-timeline\">\r\n                Graphic Designer\r\n              </p>\r\n            </span>\r\n          </span>\r\n          <Button\r\n            type=\"button\"\r\n            iconPos=\"left\"\r\n            icon=\"pi pi-plus\"\r\n            className=\"p-p-0 suggestion-button-timeline\"\r\n          />\r\n        </div>\r\n        <div className=\"p-card-body d-flex justify-content-between\">\r\n          <span className=\"d-flex align-items-end\">\r\n            <img\r\n              src=\"../../assets/logo.png\"\r\n              width=\"40\"\r\n              height=\"40\"\r\n              className=\"rounded-circle profile-picture-timeline p-mr-2\"\r\n            />\r\n            <span>\r\n              <div className=\"p-card-title cardsubtitle-timeline p-mb-0\">\r\n                Jane Doe\r\n              </div>\r\n              <p className=\"jobDescription-timeline\">\r\n                Graphic Designer\r\n              </p>\r\n            </span>\r\n          </span>\r\n          <Button\r\n            type=\"button\"\r\n            iconPos=\"left\"\r\n            icon=\"pi pi-plus\"\r\n            className=\"p-p-0 suggestion-button-timeline\"\r\n          />\r\n        </div>\r\n        <div className=\"p-card-body d-flex justify-content-between\">\r\n          <span className=\"d-flex align-items-end\">\r\n            <img\r\n              width=\"40\"\r\n              height=\"40\"\r\n              src=\"../../assets/logo.png\"\r\n              className=\"rounded-circle profile-picture-timeline p-mr-2\"\r\n            />\r\n            <span>\r\n              <div className=\"p-card-title cardsubtitle-timeline p-mb-0\">\r\n                Jane Doe\r\n              </div>\r\n              <p className=\"jobDescription-timeline\">\r\n                Graphic Designer\r\n              </p>\r\n            </span>\r\n          </span>\r\n          <Button\r\n            type=\"button\"\r\n            iconPos=\"left\"\r\n            icon=\"pi pi-plus\"\r\n            className=\"p-p-0 suggestion-button-timeline\"\r\n          />\r\n        </div>\r\n        <div className=\"p-card-body d-flex justify-content-between\">\r\n          <span className=\"d-flex align-items-end\">\r\n            <img\r\n              width=\"40\"\r\n              height=\"40\"\r\n              src=\"../../assets/logo.png\"\r\n              className=\"rounded-circle profile-picture-timeline p-mr-2\" />\r\n            <span>\r\n              <div className=\"p-card-title cardsubtitle-timeline p-mb-0\">\r\n                Jane Doe\r\n              </div>\r\n              <p className=\"jobDescription-timeline\">\r\n                Graphic Designer\r\n              </p>\r\n            </span>\r\n          </span>\r\n          <Button\r\n            type=\"button\"\r\n            iconPos=\"left\"\r\n            icon=\"pi pi-plus\"\r\n            className=\"p-p-0 suggestion-button-timeline\"\r\n          />\r\n        </div>\r\n        <div className=\"p-card-body d-flex justify-content-between\">\r\n          <span className=\"d-flex align-items-end\">\r\n            <img\r\n              width=\"40\"\r\n              height=\"40\"\r\n              src=\"../../assets/logo.png\"\r\n              className=\"rounded-circle profile-picture-timeline p-mr-2\"\r\n            />\r\n            <span>\r\n              <div className=\"p-card-title cardsubtitle-timeline p-mb-0\">\r\n                Jane Doe\r\n              </div>\r\n              <p className=\"jobDescription-timeline\">\r\n                Graphic Designer\r\n              </p>\r\n            </span>\r\n          </span>\r\n          <Button\r\n            type=\"button\"\r\n            iconPos=\"left\"\r\n            icon=\"pi pi-plus\"\r\n            className=\"p-p-0 suggestion-button-timeline\"\r\n          />\r\n        </div>\r\n        <div className=\"p-card-body d-flex justify-content-between\">\r\n          <span className=\"d-flex align-items-end\">\r\n            <img\r\n              width=\"40\"\r\n              height=\"40\"\r\n              src=\"../../assets/logo.png\"\r\n              className=\"rounded-circle profile-picture-timeline p-mr-2\" />\r\n            <span>\r\n              <div className=\"p-card-title cardsubtitle-timeline p-mb-0\">\r\n                Jane Doe\r\n              </div>\r\n              <p className=\"jobDescription-timeline\">\r\n                Graphic Designer\r\n              </p>\r\n            </span>\r\n          </span>\r\n          <Button\r\n            type=\"button\"\r\n            iconPos=\"left\"\r\n            icon=\"pi pi-plus\"\r\n            className=\"p-p-0 suggestion-button-timeline\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default TimelineLeftPanel;","import React from 'react';\r\nimport \"./Thumbs.css\";\r\n\r\nconst ThumbsDown = ({ disliked, width, height, className }) => {\r\n  const color = disliked ? \"red\" : \"#828282\";\r\n  return (\r\n    <>\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width={width} height={height} fill={color} className={`bi bi-hand-thumbs-up-fill ${className} thumbDown-component`} viewBox=\"0 0 16 16\" transform=\"rotate(180)\">\r\n        <path d=\"M6.956 1.745C7.021.81 7.908.087 8.864.325l.261.066c.463.116.874.456 1.012.965.22.816.533 2.511.062 4.51a9.84 9.84 0 0 1 .443-.051c.713-.065 1.669-.072 2.516.21.518.173.994.681 1.2 1.273.184.532.16 1.162-.234 1.733.058.119.103.242.138.363.077.27.113.567.113.856 0 .289-.036.586-.113.856-.039.135-.09.273-.16.404.169.387.107.819-.003 1.148a3.163 3.163 0 0 1-.488.901c.054.152.076.312.076.465 0 .305-.089.625-.253.912C13.1 15.522 12.437 16 11.5 16H8c-.605 0-1.07-.081-1.466-.218a4.82 4.82 0 0 1-.97-.484l-.048-.03c-.504-.307-.999-.609-2.068-.722C2.682 14.464 2 13.846 2 13V9c0-.85.685-1.432 1.357-1.615.849-.232 1.574-.787 2.132-1.41.56-.627.914-1.28 1.039-1.639.199-.575.356-1.539.428-2.59z\" />\r\n      </svg>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ThumbsDown;","import React from 'react';\r\nimport \"./Thumbs.css\";\r\n\r\nconst ThumbsUp = ({ liked, width, height, className }) => {\r\n  const color = liked ? \"green\" : \"#828282\";\r\n  return (\r\n    <>\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width={width} height={height} fill={color} className={`bi bi-hand-thumbs-up-fill ${className} thumbUp-component`} viewBox=\"0 0 16 16\">\r\n        <path d=\"M6.956 1.745C7.021.81 7.908.087 8.864.325l.261.066c.463.116.874.456 1.012.965.22.816.533 2.511.062 4.51a9.84 9.84 0 0 1 .443-.051c.713-.065 1.669-.072 2.516.21.518.173.994.681 1.2 1.273.184.532.16 1.162-.234 1.733.058.119.103.242.138.363.077.27.113.567.113.856 0 .289-.036.586-.113.856-.039.135-.09.273-.16.404.169.387.107.819-.003 1.148a3.163 3.163 0 0 1-.488.901c.054.152.076.312.076.465 0 .305-.089.625-.253.912C13.1 15.522 12.437 16 11.5 16H8c-.605 0-1.07-.081-1.466-.218a4.82 4.82 0 0 1-.97-.484l-.048-.03c-.504-.307-.999-.609-2.068-.722C2.682 14.464 2 13.846 2 13V9c0-.85.685-1.432 1.357-1.615.849-.232 1.574-.787 2.132-1.41.56-.627.914-1.28 1.039-1.639.199-.575.356-1.539.428-2.59z\" />\r\n      </svg>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ThumbsUp;","import React, { useState, useEffect } from 'react';\r\nimport { InputTextarea } from 'primereact/inputtextarea';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Button } from 'primereact/button';\r\nimport 'emoji-mart/css/emoji-mart.css';\r\nimport { Picker } from 'emoji-mart';\r\nimport { Emoji } from 'emoji-mart'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { postComment } from \"../../store/modules/comment\";\r\nimport { openEmojiPicker, closeEmojiPicker } from \"store/modules/emojiPicker\";\r\nimport './CommentSection.css';\r\n\r\nconst CommentForm = ({ postId, imageUrl, expandProfileImage }) => {\r\n  const dispatch = useDispatch();\r\n  const emojiPickerId = useSelector(state => state.emojiPicker.name);\r\n  const loadingTypeCommentModule = useSelector(state => state.comment.loadingType);\r\n  const [comment, setComment] = useState(\"\");\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    setValue } = useForm(\"\");\r\n\r\n  useEffect(() => {\r\n    if (loadingTypeCommentModule === \"createCommentSuccess\") {\r\n      // clear comment form input on successful comment create\r\n      setComment(\"\")\r\n      setValue(\"message\", \"\");\r\n      if (emojiPickerId === postId) {\r\n        // close picker of comment form with same postId on successful comment create\r\n        dispatch(closeEmojiPicker());\r\n      }\r\n    }\r\n  }, [loadingTypeCommentModule])\r\n\r\n  const inputChange = (e) => {\r\n    const inputValue = e.target.value;\r\n    setComment(inputValue)\r\n\r\n    // check if inputValue is empty\r\n    if (inputValue.trim().length > 0) {\r\n      setValue(\"message\", inputValue, { shouldValidate: true })\r\n    }\r\n    else {\r\n      setValue(\"message\", inputValue.trim(), { shouldValidate: true })\r\n    }\r\n  }\r\n\r\n  //Emoji Picker\r\n  useEffect(() => {\r\n    window.addEventListener('click', _handleClickEvent);\r\n  }, [])\r\n\r\n  const handleEmojiSelect = (emojiToAdd) => {\r\n    let sym = emojiToAdd.unified.split('-')\r\n    let codesArray = []\r\n    sym.forEach(el => codesArray.push('0x' + el))\r\n    let emoji = String.fromCodePoint(...codesArray)\r\n    setComment(comment + emoji)\r\n  }\r\n\r\n  const _handleClickEvent = (e) => {\r\n    const { target } = e;\r\n    const parentIds = ['TextEditor-comment-emoji-button', 'TextEditor-comment-emoji-picker'];\r\n\r\n    // Check if the target element is a decendant of any of the above parent IDs\r\n    const isDescendant = parentIds.some((parentId) => isDescendantElement(target, parentId));\r\n\r\n    // If element is not a descendant, then close the picker\r\n    if (!isDescendant) {\r\n      _handleEmojiToggle(false);\r\n    }\r\n  }\r\n\r\n  const isDescendantElement = (el, parentId) => {\r\n    let isDescendant = false;\r\n\r\n    if (el.id === parentId) {\r\n      isDescendant = true;\r\n    }\r\n\r\n    while (el = el.parentNode) {\r\n      if (el.id === parentId) {\r\n        isDescendant = true;\r\n      }\r\n    }\r\n\r\n    return isDescendant;\r\n  }\r\n\r\n  const _handleEmojiToggle = (state) => {\r\n    if (emojiPickerId) {\r\n      dispatch(closeEmojiPicker());\r\n    }\r\n    else {\r\n      dispatch(openEmojiPicker(state));\r\n    };\r\n  }\r\n  //Emoji Picker\r\n\r\n  const onSubmit = (data) => {\r\n    dispatch(postComment(postId, data, \"createComment\"));\r\n  }\r\n\r\n  return (\r\n    <div className='d-flex p-mt-2 w-100'>\r\n      <img\r\n        alt=\"Profile\"\r\n        src={imageUrl}\r\n        width=\"55\"\r\n        height=\"55\"\r\n        className=\"rounded-circle profile-picture-timeline align-self-center\"\r\n        onClick={expandProfileImage}\r\n      />\r\n      <form\r\n        onSubmit={handleSubmit(onSubmit)}\r\n        className='timeline-commentInputContainer'\r\n      >\r\n        <InputTextarea\r\n          rows={1}\r\n          cols={30}\r\n          autoResize\r\n          name=\"message\"\r\n          value={comment}\r\n          className=\"commentForm\"\r\n          placeholder=\"Write your comment...\"\r\n          {...register(\"message\", { required: true })}\r\n          onChange={(e) => { inputChange(e) }}\r\n        />\r\n        <span className=\"timeline-commentButtons-container\">\r\n          {\r\n            emojiPickerId === postId &&\r\n            <div id='TextEditor-comment-emoji-picker'>\r\n              <Picker\r\n                showPreview={false}\r\n                showSkinTones={false}\r\n                onSelect={(emoji) => handleEmojiSelect(emoji)}\r\n                exclude={[\"flags\", \"recent\"]}\r\n                skin=\"1\"\r\n                style={{ position: 'absolute', right: '0', top: '-360px', 'z-index': '1', 'padding-bottom': '10px' }}\r\n              />\r\n            </div>\r\n          }\r\n          <span\r\n            id=\"TextEditor-comment-emoji-button\"\r\n            onClick={() => _handleEmojiToggle(postId)}\r\n          >\r\n            <Emoji\r\n              emoji={{ id: 'slightly_smiling_face' }}\r\n              size={23}\r\n            />\r\n          </span>\r\n          <Button\r\n            type=\"submit\"\r\n            label=\"Comment\"\r\n            disabled={loadingTypeCommentModule === \"createComment\"}\r\n            className=\"p-px-1 p-ml-2 timeline-commentButton\"\r\n          />\r\n        </span>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommentForm;","import React, { useState } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport moment from 'moment';\r\nimport { likeComment, dislikeComment, deleteComment } from \"../../store/modules/comment\";\r\nimport agent, { API_ROOT } from \"../../services/agent.service\";\r\nimport { formatter } from '../../helpers/converter';\r\nimport ThumbsDown from \"../../components/ThumbDown\";\r\nimport ThumbsUp from \"../../components/ThumbUp\";\r\nimport CommentForm from './CommentForm';\r\nimport './CommentSection.css';\r\nimport { ACCOUNT_TYPE } from 'constants/accountType';\r\n\r\nconst Comment = ({ comment, key, postId, expandProfileImage }) => {\r\n  const dispatch = useDispatch();\r\n  const [displayCommentForm, setDisplayCommentForm] = useState(false);\r\n  const isAuthenticated = agent.Auth.isAuth();\r\n\r\n  const handleLike = (e) => {\r\n    const commentId = e.currentTarget.dataset.id;\r\n    dispatch(likeComment(commentId, postId));\r\n  }\r\n\r\n  const handleDislike = (e) => {\r\n    const commentId = e.currentTarget.dataset.id;\r\n    dispatch(dislikeComment(commentId, postId));\r\n  }\r\n\r\n  const onEdit = () => {\r\n    setDisplayCommentForm(true);\r\n  }\r\n  return (\r\n    <div className=\"timeline-commentContainer\" id={key}>\r\n      <div className=\"d-flex p-pl-3 p-pt-3 w-100\">\r\n        {\r\n          comment.imageUrl\r\n            ?\r\n            <img\r\n              width=\"40\"\r\n              height=\"40\"\r\n              src={`${API_ROOT}/${comment.imageUrl}`}\r\n              className=\"rounded-circle profile-picture-timeline p-mr-2\"\r\n              onClick={expandProfileImage}\r\n              alt=\"profile\"\r\n            />\r\n            :\r\n            <i className=\"pi pi-user timeline-comment-emptyProfilePic-small\" />\r\n        }\r\n        <div className=\"w-100\">\r\n          <span className=\" d-flex justify-content-between\">\r\n            <div>\r\n              <h6>\r\n                {\r\n                  comment.accountType === ACCOUNT_TYPE.CORPORATE\r\n                    ?\r\n                    comment.companyName\r\n                    :\r\n                    (`${formatter.capitalizeFirstLetter(comment?.firstName)} ${formatter.capitalizeFirstLetter(comment?.lastName)}`)\r\n                }\r\n              </h6>\r\n              <div className=\"timeline-cardtitle-posttime p-pt-1 p-pb-3\">\r\n                <i className=\"pi pi-clock p-pr-1\" />\r\n                <span>\r\n                  {moment(comment.createdAt).fromNow('MMMM Do YYYY')} ago\r\n                </span>\r\n              </div>\r\n            </div>\r\n            {comment.createdBy === agent.Auth.current()?.email &&\r\n              <div className=\"dropdown font-weight-bold ml-2\">\r\n                <i\r\n                  type=\"button\"\r\n                  role=\"button\"\r\n                  aria-expanded=\"false\"\r\n                  id=\"dropdownMenuLink\"\r\n                  data-bs-toggle=\"dropdown\"\r\n                  className=\"pi pi-ellipsis-v\"\r\n                />\r\n                <ul\r\n                  className=\"dropdown-menu\"\r\n                  aria-labelledby=\"dropdownMenuLink\"\r\n                >\r\n                  <li\r\n                    data-id={comment.id}\r\n                    className=\"dropdown-item timeline-dropdownItem\"\r\n                    onClick={(e) => dispatch(deleteComment(e.currentTarget.dataset.id, postId))}\r\n                  >\r\n                    Delete\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            }\r\n          </span>\r\n\r\n          {\r\n            !displayCommentForm &&\r\n            <div className=\"p-pt-2\">\r\n              {comment.message}\r\n            </div>\r\n          }\r\n        </div>\r\n      </div>\r\n      {\r\n        displayCommentForm &&\r\n        <CommentForm\r\n          id={comment.id}\r\n          postId={postId}\r\n          editMode={displayCommentForm}\r\n        />\r\n      }\r\n      <div className=\"p-mb-3\">\r\n        <b>\r\n          <small className=\"d-flex align-center justify-content-end p-mt-3\">\r\n            {\r\n              isAuthenticated ?\r\n                <span\r\n                  data-id={comment.id}\r\n                  className=\"post-statusbar-content p-pr-2\"\r\n                  onClick={(e) => handleLike(e)}\r\n                >\r\n                  <ThumbsUp\r\n                    width=\"20\"\r\n                    height=\"20\"\r\n                    liked={false}\r\n                    className=\"p-mr-1\"\r\n                  />\r\n                  {\r\n                    comment.likes > 0 &&\r\n                    <h6 className=\"text-success\">\r\n                      {comment.likes}\r\n                    </h6>\r\n                  }\r\n                </span>\r\n                :\r\n                <p className=\"p-pr-2\">\r\n                  {\r\n                    comment.likes > 0 &&\r\n                    <>\r\n                      {`${comment.likes} ${comment.likes > 1 ? \"likes\" : \"like\"}`}\r\n                    </>\r\n                  }\r\n                </p>\r\n            }\r\n            {\r\n              isAuthenticated ?\r\n                <span\r\n                  className=\"post-statusbar-content\"\r\n                  onClick={(e) => handleDislike(e)}\r\n                  data-id={comment.id}\r\n                >\r\n                  {\r\n                    isAuthenticated &&\r\n                    <ThumbsDown\r\n                      width=\"20\"\r\n                      height=\"20\"\r\n                      disliked={false}\r\n                      className=\"p-mr-1\"\r\n                    />\r\n                  }\r\n                  {\r\n                    comment.dislikes > 0 &&\r\n                    <h6>\r\n                      {comment.dislikes}\r\n                    </h6>\r\n                  }\r\n                </span>\r\n                :\r\n                <p className=\"p-pr-2\">\r\n                  {\r\n                    comment.dislikes > 0 &&\r\n                    <>\r\n                      {`${comment.dislikes} ${comment.dislikes > 1 ? \"dislikes\" : \"dislike\"}`}\r\n                    </>\r\n                  }\r\n                </p>\r\n            }\r\n          </small>\r\n        </b>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comment;","import React, { useState } from 'react';\r\nimport { Button } from 'primereact/button';\r\nimport Comment from './Comment';\r\nimport { useSelector } from \"react-redux\";\r\nimport './CommentSection.css';\r\n\r\nconst CommentList = ({ postId, onViewComments, expandProfileImage, commentCount }) => {\r\n  const loadingType = useSelector(state => state.comment.loadingType);\r\n  const comments = useSelector(state => state.comment.comments);\r\n  const commentIds = useSelector(state => state.timeline.commentIds);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const pageLimit = 10;\r\n\r\n  const onViewMoreComments = () => {\r\n    onViewComments(postId, pageNumber + 1, pageLimit, postId + \"-loadingMoreComments\")\r\n    setPageNumber(pageNumber + 1);\r\n  }\r\n\r\n  return (\r\n    <div className='p-card-body p-pt-1 p-px-0'>\r\n      {\r\n        commentIds?.[postId]?.map((commentId) => {\r\n          const comment = comments.data[commentId];\r\n          return (\r\n            <>\r\n              <Comment\r\n                key={comment.id}\r\n                comment={comment}\r\n                postId={postId}\r\n                expandProfileImage={expandProfileImage}\r\n              />\r\n            </>\r\n          )\r\n        })\r\n      }\r\n      {\r\n        !commentIds?.[postId] &&\r\n        commentCount &&\r\n        <Button\r\n          label=\"View comments\"\r\n          loading={loadingType === postId + \"-loadingComments\"}\r\n          className=\"timeline-commentListTitle\"\r\n          onClick={() => onViewComments(postId, 1, pageLimit, postId + \"-loadingComments\")}\r\n        />\r\n      }\r\n      {\r\n        commentIds?.[postId] &&\r\n        commentIds?.[postId]?.length < comments.meta[postId].total &&\r\n        <Button\r\n          label={`View more comments (${(comments.meta[postId].total) - (commentIds?.[postId]?.length)})`}\r\n          loading={loadingType === postId + \"-loadingMoreComments\"}\r\n          className=\"timeline-commentListTitle\"\r\n          onClick={onViewMoreComments}\r\n        />\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommentList;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CommentList from './CommentList';\r\nimport CommentForm from './CommentForm';\r\nimport { formatter } from '../../helpers/converter';\r\nimport { openModal } from \"store/modules/modal\";\r\nimport { deletePost, likePost, dislikePost, viewPost } from \"../../store/modules/timeline\";\r\nimport { loadComments } from \"../../store/modules/comment\";\r\nimport { TIMELINE } from \"constants/timeline\";\r\nimport agent, { API_ROOT } from \"../../services/agent.service\";\r\nimport moment from \"moment\";\r\nimport ThumbsDown from \"../../components/ThumbDown\";\r\nimport ThumbsUp from \"../../components/ThumbUp\";\r\nimport \"./Timeline.css\";\r\n\r\nimport \"./Timeline.css\";\r\nimport { ACCOUNT_TYPE } from 'constants/accountType';\r\nconst Post = ({ profileInfo, post, isAuthenticated, expandProfileImage, onShow, commentCount, setImageToDisplay }) => {\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector(state => state.timeline.loadingPosts);\r\n  const [copyAlert, setCopyAlert] = useState(null);\r\n  const isCorporate = profileInfo?.accountType === ACCOUNT_TYPE.CORPORATE ? true : false;\r\n  const postId = post.id;\r\n\r\n  const expandPostImage = (e) => {\r\n    setImageToDisplay(e.target.src);\r\n    dispatch(openModal(TIMELINE.POSTIMAGE));\r\n  }\r\n\r\n  const handleLike = (e) => {\r\n    const postId = e.currentTarget.dataset.id\r\n    dispatch(likePost(postId));\r\n  }\r\n\r\n  const handleDislike = (e) => {\r\n    const postId = e.currentTarget.dataset.id\r\n    dispatch(dislikePost(postId));\r\n  }\r\n\r\n  const handleShareButton = (e) => {\r\n    const postId = e.currentTarget.dataset.id;\r\n    const el = document.createElement('input');\r\n    el.value = window.location.host + `/post/${postId}`;\r\n    document.body.appendChild(el);\r\n    el.select();\r\n    document.execCommand('copy');\r\n    document.body.removeChild(el);\r\n    setCopyAlert(postId);\r\n    setTimeout(function () { setCopyAlert(false); }, 1000);\r\n  }\r\n\r\n  const handleViewComments = (postId, commentPage, pageLimit, loadingType) => {\r\n    dispatch(loadComments(postId, commentPage, pageLimit, loadingType));\r\n  }\r\n  return (\r\n    <div className=\"p-card p-py-3 p-py-sm-5 p-pl-3 p-pl-sm-5 p-pr-4 p-pr-sm-6 p-mb-2 timeline-posts\">\r\n      <span className=\"d-flex justify-content-between\">\r\n        <span className=\"d-flex\">\r\n          {\r\n            post?.author?.imageUrl ?\r\n              <img\r\n                width=\"70\"\r\n                height=\"70\"\r\n                src={`${API_ROOT}/${post.author.imageUrl}`}\r\n                alt={\r\n                  !isCorporate\r\n                    ? formatter.capitalizeFirstLetter(post.author.firstName)\r\n                    : formatter.capitalizeFirstLetter(post.author.companyName)\r\n                }\r\n                className=\"rounded-circle p-mt-2 p-mb-2 p-mr-sm-3 p-mr-0 profile-picture-timeline text-white\"\r\n                onClick={(e) => expandProfileImage(e.target.src)}\r\n              />\r\n              :\r\n              <i className=\"pi pi-user p-mt-2 p-mb-2 p-mr-sm-3 p-mr-2 timeline-emptyProfilePic-medium\"></i>\r\n          }\r\n          <span>\r\n            {\r\n              !isCorporate &&\r\n              <span className=\"p-card-title cardtitle-posts p-mb-0\">\r\n                {`${formatter.capitalizeFirstLetter(post?.author?.firstName)} ${formatter.capitalizeFirstLetter(post?.author?.lastName)}`}\r\n              </span>\r\n            }\r\n            {\r\n              isCorporate &&\r\n              <span className=\"p-card-title cardtitle-posts p-mb-0\">\r\n                {formatter.capitalizeFirstLetter(post?.author?.companyName)}\r\n              </span>\r\n            }\r\n            {\r\n              post.author.accountType === ACCOUNT_TYPE.ARTISAN &&\r\n              <span className=\"stars p-ml-1 align-text-bottom\" style={{ \"--rating\": post.author.rating }} />\r\n            }\r\n            <div className=\"poster-description\">\r\n              <p>\r\n              </p>\r\n              <i className=\"pi pi-briefcase p-pr-1\" />\r\n              <span>Software Engineer</span>\r\n              <i className=\"pi pi-map-marker p-pl-2 p-pr-1\" />\r\n              <span>Nigeria</span>\r\n            </div>\r\n            <div className=\"timeline-cardtitle-posttime\">\r\n              <i className=\"pi pi-clock p-pr-1 p-mt-2\" />\r\n              <span>\r\n                {moment(post.createdAt).fromNow('MMMM Do YYYY')} ago\r\n              </span>\r\n            </div>\r\n          </span>\r\n        </span>\r\n        {\r\n          post.createdBy === agent.Auth.current()?.email &&\r\n          <div className=\"dropdown font-weight-bold ml-2\">\r\n            <i\r\n              type=\"button\"\r\n              className=\"pi pi-ellipsis-v\"\r\n              role=\"button\"\r\n              data-bs-toggle=\"dropdown\"\r\n              id=\"dropdownMenuLink\"\r\n              aria-expanded=\"false\"\r\n            />\r\n            <ul\r\n              className=\"dropdown-menu\"\r\n              aria-labelledby=\"dropdownMenuLink\"\r\n            >\r\n              <li\r\n                className=\"dropdown-item timeline-dropdownItem\"\r\n                onClick={() => onShow(post.id)}\r\n              >\r\n                Edit\r\n              </li>\r\n              <li\r\n                className=\"dropdown-item timeline-dropdownItem\"\r\n                data-id={post.id}\r\n                onClick={(e) => dispatch(deletePost(e.currentTarget.dataset.id))}\r\n              >\r\n                Delete\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        }\r\n      </span>\r\n      <h6 className=\"p-my-3\">\r\n        <u>\r\n          {post.title}\r\n        </u>\r\n      </h6>\r\n      <div className=\"p-my-4 w-100 h-100\">\r\n        <div\r\n          className=\"p-mb-3\"\r\n          dangerouslySetInnerHTML={{ __html: post.body }}\r\n        />\r\n        {\r\n          post?.postImage &&\r\n          <img\r\n            width=\"100%\"\r\n            alt={post.title}\r\n            className=\"timeline-postImage text-white\"\r\n            src={`${API_ROOT}/${post.postImage}`}\r\n            onClick={expandPostImage} />\r\n        }\r\n      </div>\r\n      <div className=\"cardtitle-statusbar-timeline p-my-3 p-py-3\">\r\n        {\r\n          <div className=\"d-flex\">\r\n            {\r\n              isAuthenticated ?\r\n                <span\r\n                  data-id={post.id}\r\n                  onClick={(e) => handleLike(e)}\r\n                  className=\"post-statusbar-content p-pr-2 align-items-start\"\r\n                >\r\n                  <ThumbsUp\r\n                    width=\"23\"\r\n                    height=\"23\"\r\n                    liked={false}\r\n                    className=\"p-mr-1\"\r\n                  />\r\n                  {\r\n                    post.likes > 0 &&\r\n                    <h6 className=\"p-pr-1\">\r\n                      {post.likes}\r\n                    </h6>\r\n                  }\r\n                </span>\r\n                :\r\n                <p className=\"p-pr-2\">\r\n                  {\r\n                    post.likes > 0 &&\r\n                    <>\r\n                      {`${post.likes} ${post.likes > 1 ? \"likes\" : \"like\"}`}\r\n                    </>\r\n                  }\r\n                </p>\r\n            }\r\n            {\r\n              isAuthenticated ?\r\n                <span\r\n                  data-id={post.id}\r\n                  onClick={(e) => handleDislike(e)}\r\n                  className=\"post-statusbar-content align-items-start\"\r\n                >\r\n                  <ThumbsDown\r\n                    width=\"23\"\r\n                    height=\"23\"\r\n                    disliked={false}\r\n                    className=\"p-mr-1\" />\r\n                  {\r\n                    post.dislikes > 0 &&\r\n                    <h6 className=\"p-pr-1\">\r\n                      {post.dislikes}\r\n                    </h6>\r\n                  }\r\n                </span>\r\n                :\r\n                <>\r\n                  {\r\n                    post.dislikes > 0 &&\r\n                    <p className=\"p-pr-1\">\r\n                      {`${post.dislikes} ${post.dislikes > 1 ? \"dislikes\" : \"dislike\"}`}\r\n                    </p>\r\n                  }\r\n                </>\r\n            }\r\n          </div>\r\n        }\r\n        <div\r\n          className=\"timeline-postShare-button\"\r\n          data-id={post.id}\r\n          onClick={handleShareButton}\r\n        >\r\n          <span className=\"p-button-label\">\r\n            <i className=\"pi pi-share-alt p-mr-1\" />\r\n            Share\r\n          </span>\r\n        </div>\r\n        <span className={copyAlert === post.id ? \"timeline-copyModalAlert--active\" : \"timeline-copyModalAlert\"}>\r\n          Link copied\r\n        </span>\r\n      </div>\r\n      {\r\n        isAuthenticated &&\r\n        <CommentForm\r\n          postId={post.id}\r\n          imageUrl={profileInfo?.imageUrl}\r\n          expandProfileImage={(e) => expandProfileImage(e.target.src)}\r\n        />\r\n      }\r\n      {\r\n        loading !== \"loadMore\" &&\r\n        <CommentList\r\n          postId={postId}\r\n          onViewComments={handleViewComments}\r\n          commentCount={commentCount}\r\n          expandProfileImage={(e) => expandProfileImage(e.target.src)}\r\n        />\r\n      }\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Post;","import React, { useState, useRef, useEffect } from 'react';\r\nimport { API_ROOT } from \"../../services/agent.service\"\r\nimport { Button } from 'primereact/button';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useForm } from 'react-hook-form';\r\nimport { InputTextarea } from 'primereact/inputtextarea';\r\nimport { formatter } from '../../helpers/converter';\r\nimport 'emoji-mart/css/emoji-mart.css';\r\nimport { Picker } from 'emoji-mart';\r\nimport { Emoji } from 'emoji-mart'\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { Editor } from 'primereact/editor';\r\nimport { createPost, editPost, viewPost } from \"store/modules/timeline\";\r\nimport \"./Timeline.css\";\r\nimport { ACCOUNT_TYPE } from 'constants/accountType';\r\n\r\nconst CreatePostModal = ({ post, clearModalInput }) => {\r\n  const dispatch = useDispatch();\r\n  // const post = useSelector(state => state.timeline.postByPostId);\r\n  const postActionStatus = useSelector(state => state.timeline.loadingPosts);\r\n  const profileInfo = useSelector((state) => state.account.profileInfo);\r\n  const [postObject, setPostObject] = useState({});\r\n  const [isEmojiOpen, setIsEmojiOpen] = useState(false);\r\n  const [_quill, setQuill] = useState(null);\r\n  const [image, setImage] = useState({ preview: \"\", raw: \"\" });\r\n  const { register, handleSubmit, formState: { errors }, setValue } = useForm(\"\");\r\n  const [selectedViewerGroup, setSelectedViewerGroup] = useState({ name: 'Public', code: 'PBC' });\r\n  const baseClassName = isEmojiOpen ? \"TextEditor-actions-emoji-picker-timeline--open\" : \"TextEditor-actions-emoji-picker-timeline\"\r\n  const viewerGroups = [\r\n    { name: 'Public', code: 'PBC' },\r\n    { name: 'Group', code: 'GRP' }\r\n  ];\r\n\r\n  const onViewerGroupChange = (e) => {\r\n    setSelectedViewerGroup(e.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('click', _handleClickEvent);\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (postActionStatus === \"postSuccess\") {\r\n      clearModalInput();\r\n    }\r\n  }, [postActionStatus])\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(post).length > 0) {\r\n      setValue(\"title\", post.title);\r\n      setValue(\"body\", post.body);\r\n      if (post.postImage) {\r\n        const imageurl = API_ROOT + \"/\" + post.postImage\r\n        setImage({\r\n          preview: imageurl,\r\n          raw: post.postImage\r\n        });\r\n      }\r\n      setPostObject({ title: post.title, body: post.body });\r\n    }\r\n    else {\r\n      setPostObject({});\r\n    }\r\n  }, [post]);\r\n\r\n\r\n  const handleImageChange = e => {\r\n    if (e.target.files.length) {\r\n      setImage({\r\n        preview: URL.createObjectURL(e.target.files[0]),\r\n        raw: e.target.files[0]\r\n      });\r\n    }\r\n  };\r\n\r\n  // EmojiPicker\r\n  const _handleQuillLoad = (quill) => {\r\n    setQuill(quill);\r\n  }\r\n\r\n  const _handleClickEvent = (e) => {\r\n    const { target } = e;\r\n    const parentIds = ['TextEditor-actions-emoji-button', 'TextEditor-actions-emoji-picker'];\r\n\r\n    // Check if the target element is a decendant of any of the above parent IDs\r\n    const isDescendant = parentIds.some((parentId) => isDescendantElement(target, parentId));\r\n\r\n    // If element is not a descendant, then close the picker\r\n    if (!isDescendant) {\r\n      _handleEmojiToggle(false);\r\n    }\r\n  }\r\n\r\n  const isDescendantElement = (el, parentId) => {\r\n    let isDescendant = false;\r\n\r\n    if (el.id === parentId) {\r\n      isDescendant = true;\r\n    }\r\n\r\n    while (el = el.parentNode) {\r\n      if (el.id === parentId) {\r\n        isDescendant = true;\r\n      }\r\n    }\r\n\r\n    return isDescendant;\r\n  }\r\n\r\n  const _handleEmojiToggle = (state) => {\r\n    if (isEmojiOpen) {\r\n      setIsEmojiOpen(false)\r\n    }\r\n    else {\r\n      setIsEmojiOpen(state)\r\n    };\r\n  }\r\n\r\n\r\n  const handleEmojiSelect = (e) => {\r\n    const range = _quill.getSelection({ focus: false });\r\n    let sym = e.unified.split('-')\r\n    let codesArray = []\r\n    sym.forEach(el => codesArray.push('0x' + el))\r\n    let emoji = String.fromCodePoint(...codesArray)\r\n    if (range) {\r\n      if (range.length === 0) {\r\n        _quill.insertText(range.index, emoji);\r\n      } else {\r\n        // If cursor position is a selection, then delete the selection and insert emoji at the start index.\r\n        _quill.deleteText(range.index, range.length);\r\n        _quill.insertText(range.index, emoji);\r\n      }\r\n    }\r\n    // Close picker after making a selection\r\n    _handleEmojiToggle(false);\r\n  }\r\n  // EmojiPicker\r\n\r\n  const deleteMediaItem = (e) => {\r\n    setImage({ preview: \"\", raw: \"\" });\r\n  };\r\n\r\n  const inputChange = (e, inputName) => {\r\n    const inputValue =\r\n      inputName && (inputName === \"body\")\r\n        ? e.htmlValue\r\n        : e.target.value\r\n    const updatedPostObject = Object.assign({}, postObject);\r\n    updatedPostObject[inputName] = inputValue;\r\n    setPostObject({ ...postObject, ...updatedPostObject });\r\n    setValue(inputName, inputValue, { shouldValidate: true });\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    const formData = new FormData();\r\n    formData.append(\"title\", data.title);\r\n    formData.append(\"body\", data.body);\r\n    if (image.raw) {\r\n      formData.append(\"postImage\", image.raw)\r\n    };\r\n    if (Object.keys(post).length > 0) {\r\n      dispatch(editPost(post.id, formData));\r\n    }\r\n    else {\r\n      dispatch(createPost(formData));\r\n    }\r\n  }\r\n\r\n  // Text editor header\r\n  const renderHeader = () => {\r\n    return (\r\n      <span className=\"ql-formats text-editor-timeline\">\r\n\r\n        <select className=\"ql-font\"></select>\r\n        <select className=\"ql-size\"></select>\r\n\r\n\r\n        <button className=\"ql-bold\"></button>\r\n        <button className=\"ql-italic\"></button>\r\n        <button className=\"ql-underline\"></button>\r\n        <button className=\"ql-strike\"></button>\r\n\r\n\r\n        <select className=\"ql-color\"></select>\r\n        <select className=\"ql-background\"></select>\r\n\r\n\r\n        <button className=\"ql-script\" value=\"sub\"></button>\r\n        <button className=\"ql-script\" value=\"super\"></button>\r\n\r\n\r\n        <button className=\"ql-list\" value=\"ordered\"></button>\r\n        <button className=\"ql-list\" value=\"bullet\"></button>\r\n        <button className=\"ql-indent\" value=\"-1\"></button>\r\n        <button className=\"ql-indent\" value=\"+1\"></button>\r\n\r\n\r\n        <button className=\"ql-direction\" value=\"rtl\"></button>\r\n        <select className=\"ql-align\"></select>\r\n\r\n        <button className=\"ql-link\"></button>\r\n        <button className=\"ql-formula\"></button>\r\n\r\n        <button className=\"ql-clean\"></button>\r\n        <span\r\n          id=\"TextEditor-actions-emoji-button\"\r\n          onClick={() => _handleEmojiToggle(true)}\r\n        >\r\n          <Emoji\r\n            emoji={{ id: 'slightly_smiling_face' }}\r\n            size={20}\r\n          />\r\n        </span>\r\n        <div\r\n          id=\"TextEditor-actions-emoji-picker\"\r\n          className={baseClassName}\r\n        >\r\n          <Picker\r\n            showPreview={false}\r\n            showSkinTones={false}\r\n            onSelect={(emoji) => handleEmojiSelect(emoji)}\r\n            exclude={[\"flags\", \"recent\"]}\r\n            skin={1}\r\n          />\r\n        </div>\r\n      </span>\r\n    );\r\n  }\r\n  const header = renderHeader();\r\n  // Text editor header\r\n\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"d-flex align-items-center\">\r\n          <img\r\n            width=\"50\"\r\n            height=\"50\"\r\n            alt=\"Profile\"\r\n            src={profileInfo?.imageUrl}\r\n            className=\"rounded-circle profile-picture-timeline\"\r\n          />\r\n          <span className=\"p-ml-2\">\r\n            {\r\n              profileInfo?.accountType === ACCOUNT_TYPE.CORPORATE ?\r\n                <h6>\r\n                  {formatter.capitalizeFirstLetter(profileInfo?.companyName)}\r\n                </h6>\r\n                :\r\n                <h6>\r\n                  {`${formatter.capitalizeFirstLetter(profileInfo?.firstName)} ${formatter.capitalizeFirstLetter(profileInfo?.lastName)}`}\r\n                </h6>\r\n            }\r\n            <div>\r\n              <Dropdown\r\n                value={selectedViewerGroup}\r\n                options={viewerGroups}\r\n                onChange={onViewerGroupChange}\r\n                optionLabel=\"name\"\r\n                className=\"viewerGroups-dropdown\" />\r\n            </div>\r\n          </span>\r\n        </div>\r\n        <div className=\"p-mt-3\">\r\n          <label htmlFor=\"title\">\r\n            <div className=\"createPostModal-title\">\r\n              Title *\r\n              {\r\n                errors.title &&\r\n                <small className=\"text-danger font-weight-bold\">\r\n                  {errors.title.message}\r\n                </small>\r\n              }\r\n            </div>\r\n          </label>\r\n        </div>\r\n        <InputTextarea\r\n          rows={1}\r\n          cols={30}\r\n          name=\"title\"\r\n          autoResize id=\"title\"\r\n          defaultValue={postObject.title}\r\n          className=\"timelineModal-Input w-50\"\r\n          {...register(\"title\",\r\n            {\r\n              validate: (value) => !!value.trim() || \" Title is required\"\r\n            }\r\n          )}\r\n          onChange={(e) => { inputChange(e, \"title\") }\r\n          }\r\n        />\r\n        <div>\r\n          <label htmlFor=\"body\">\r\n            <div className=\"createPostModal-title p-mt-2\">\r\n              Body *\r\n              {\r\n                errors.body &&\r\n                <small className=\"text-danger font-weight-bold\">\r\n                  {errors.body.message}\r\n                </small>\r\n              }\r\n            </div>\r\n          </label>\r\n        </div>\r\n        <div className=\"timelineModal-Input p-p-2\">\r\n          <Editor\r\n            style={{ height: '320px' }}\r\n            value={postObject.body}\r\n            headerTemplate={header}\r\n            onLoad={_handleQuillLoad}\r\n            className=\"TextEditor-container-timeline\"\r\n            onTextChange={(e) => { inputChange(e, \"body\") }}\r\n            {...register(\"body\", {\r\n              validate: value => _quill.getText().trim().length || \" Post content is required\"\r\n            })}\r\n            id=\"body\"\r\n            name=\"body\"\r\n          />\r\n          <div className=\"d-flex justify-content-end align-items-center p-mt-3\">\r\n            <h6 className=\"p-mr-1\">\r\n              Add:\r\n            </h6>\r\n            <input\r\n              type=\"file\"\r\n              id=\"timeline-uploadPhoto\"\r\n              style={{ display: \"none\" }}\r\n              onChange={handleImageChange}\r\n              onClick={(e) => e.target.value = null}\r\n              accept=\"image/*\"\r\n            />\r\n            <label htmlFor=\"timeline-uploadPhoto\" >\r\n              <i className=\"pi pi-images p-ml-1 p-px-1 addToPost-icon\"></i>\r\n            </label>\r\n            <input\r\n              type=\"file\"\r\n              id=\"timeline-uploadVideo\"\r\n              style={{ display: \"none\" }}\r\n              accept=\"video/*\"\r\n              onClick={(e) => e.target.value = null}\r\n            />\r\n            <label htmlFor=\"timeline-uploadVideo\" >\r\n              <i className=\"pi pi-video p-ml-1 p-pr-1 addToPost-icon\"></i>\r\n            </label>\r\n          </div>\r\n          <div className=\" p-grid p-pt-3\">\r\n            <div className=\"p-col-12 p-md-6\">\r\n              {\r\n                image.preview &&\r\n                <div className=\"timelineMediaItem-container\">\r\n                  <div className=\"dropdown font-weight-bold ml-2 portfolioItem-icons\">\r\n                    <Button type=\"button\" role=\"button\"\r\n                      data-bs-toggle=\"dropdown\"\r\n                      id=\"postFormMediaItem\"\r\n                      aria-expanded=\"false\"\r\n                      className=\"timeline-postMediaItem-actionButton\"\r\n                    >\r\n                      <i className=\"pi pi-ellipsis-h text-white\" />\r\n                    </Button>\r\n                    <ul\r\n                      className=\"dropdown-menu timeline-postForm-actionDropdown\"\r\n                      aria-labelledby=\"postFormMediaItem\"\r\n                    >\r\n                      <li\r\n                        className=\"dropdown-item\"\r\n                        onClick={deleteMediaItem}\r\n                      >\r\n                        <i className=\"pi pi-trash\" />\r\n                        Delete Image\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <img\r\n                    src={image.preview}\r\n                    alt=\"Preview\"\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    className=\"timelineMediaItem\"\r\n                  />\r\n                </div>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <Button\r\n            label=\"Post\"\r\n            autoFocus\r\n            className=\"d-flex p-mt-3\"\r\n            type=\"submit\"\r\n          />\r\n        </div>\r\n      </form>\r\n    </ >\r\n  );\r\n}\r\n\r\nexport default CreatePostModal;","import React from 'react';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Button } from 'primereact/button';\r\nimport { ToggleButton } from 'primereact/togglebutton';\r\nimport \"./Timeline.css\";\r\n\r\nconst PostJobModal = ({ visible, onHide, onModalCheckChange, modalJobPostMode }) => {\r\n  const renderFooter = (name) => {\r\n    return (\r\n      <div>\r\n        <Button label=\"No\" icon=\"pi pi-times\" onClick={() => onHide(name)} className=\"p-button-text\" />\r\n        <Button label=\"Yes\" icon=\"pi pi-check\" onClick={() => onHide(name)} autoFocus />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n      Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n      Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\r\n        cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PostJobModal;","import React, { useState } from 'react';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { ToggleButton } from 'primereact/togglebutton';\r\nimport { useSelector } from \"react-redux\";\r\nimport { TIMELINE } from \"constants/timeline\";\r\nimport PostForm from './PostForm';\r\nimport { closeModal } from \"store/modules/modal\";\r\nimport PostJobModal from './PostJobModal';\r\n\r\nconst ModalMode = ({ onHide, post, imageUrl }) => {\r\n  const modalName = useSelector(state => state.modal.name);\r\n  const modalVisible = modalName === TIMELINE.EDITPOST || modalName === TIMELINE.CREATEPOST || modalName === TIMELINE.ACTIVEUSERPICTURE || modalName === TIMELINE.POSTIMAGE;\r\n  const [toggle, setToggle] = useState(true)\r\n  const createPost_Title = \"Create a Post\";\r\n  const EditPost_Title = \"Edit your Post\";\r\n  const dialogTitle = modalName === TIMELINE.EDITPOST ? EditPost_Title : modalName === TIMELINE.CREATEPOST ? createPost_Title : \"\";\r\n\r\n  const toggleModal = () => {\r\n    const displayPostForm = toggle === true ? false : true;\r\n    setToggle(displayPostForm);\r\n  }\r\n\r\n  const onModalClose = () => {\r\n    closeModal();\r\n    onHide();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Dialog header={dialogTitle} visible={modalVisible} onHide={onModalClose} style={{ width: \"60rem\" }} className='dialogModal-timeline'>\r\n        {\r\n          (modalName === TIMELINE.CREATEPOST || modalName === TIMELINE.CREATEJOB) &&\r\n          < ToggleButton\r\n            checked={toggle}\r\n            onLabel=\"I confirm\"\r\n            offLabel=\"I reject\"\r\n            onIcon=\"pi pi-check\"\r\n            offIcon=\"pi pi-times\"\r\n            onChange={toggleModal} />\r\n        }\r\n        {\r\n          (modalName === TIMELINE.CREATEPOST || modalName === TIMELINE.EDITPOST) && toggle &&\r\n          <PostForm\r\n            post={post}\r\n            clearModalInput={onHide}\r\n          />\r\n        }\r\n        {\r\n          !toggle &&\r\n          <PostJobModal\r\n          />\r\n        }\r\n        {\r\n          imageUrl &&\r\n          (modalName === TIMELINE.ACTIVEUSERPICTURE || modalName === TIMELINE.POSTIMAGE) &&\r\n          <div>\r\n            <img src={imageUrl} className=\"timeline-profilepic-expanded\"\r\n            />\r\n          </div>\r\n        }\r\n      </Dialog>\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default ModalMode;\r\n"],"sourceRoot":""}