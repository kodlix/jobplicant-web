{"version":3,"sources":["pages/auth/forgotPassword/NewPassword.js"],"names":["NewPassword","props","dispatch","useDispatch","useForm","mode","reValidateMode","register","handleSubmit","watch","errors","formState","password","useRef","current","url","location","search","shortCode","split","console","log","className","src","alt","width","onSubmit","userdata","updateUserPassword","id","type","name","placeholder","required","minLength","value","message","htmlFor","validate","confirmPassword","label","to"],"mappings":"4OAyGeA,UA9FK,SAACC,GACjB,IAAMC,EAAWC,cAEjB,EAAiEC,YAAQ,CACrEC,KAAM,WACNC,eAAgB,aAFZC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,MAAoBC,EAApD,EAAuCC,UAAaD,OAK9CE,EAAWC,iBAAQ,IACzBD,EAASE,QAAUL,EAAM,WAAY,IAErC,IAAIM,EAAMd,EAAMe,SAASC,OAEnBC,GADNH,EAAMA,EAAII,MAAM,MACM,GAItBC,QAAQC,IAAI,CAAEH,cAWd,OACI,mCACI,qBAAKI,UAAU,UAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,qBAAKA,UAAU,sDAAf,SACI,qBAAKA,UAAU,oBAGnB,sBAAKA,UAAU,gDAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,qBAAKC,IAAI,wBAAwBC,IAAI,OAAOF,UAAU,iBAAiBG,MAAM,UAEjF,sBAAKH,UAAU,mBAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,oBAAIA,UAAU,0BAAd,mCACA,mBAAGA,UAAU,mBAAb,4CAEJ,sBAAMI,SAAUlB,GAvBvB,SAACmB,GAEdzB,EAAS0B,YAAmBV,EATpB,2BASsCS,OAqB1B,SACI,sBAAKL,UAAU,UAAf,UACI,sBAAKA,UAAU,UAAf,UACI,cAAC,IAAD,aACIO,GAAG,WACHC,KAAK,WACLC,KAAK,WACLC,YAAY,gBACRzB,EAAS,WAAY,CACrB0B,SAAU,qBACVC,UAAW,CACPC,MAAO,EACPC,QAAS,mDAVzB,KAaQ,uBAAOC,QAAQ,WAAWf,UAAU,GAApC,SACCZ,EAAOE,UAAY,uBAAMU,UAAU,+BAAhB,cAAgD,4BAAIZ,EAAOE,SAASwB,kBAIhG,sBAAKd,UAAU,UAAf,UACI,cAAC,IAAD,aACIO,GAAG,kBACHC,KAAK,WACLC,KAAK,kBACLC,YAAY,wBACRzB,EAAS,kBAAmB,CAC5B+B,SAAU,SAAAH,GAAK,OAAIA,IAAUvB,EAASE,SAAW,kCAGzD,uBAAOuB,QAAQ,kBAAkBf,UAAU,GAA3C,SACKZ,EAAO6B,iBAAmB,uBAAMjB,UAAU,+BAAhB,cAAgD,4BAAIZ,EAAO6B,gBAAgBH,kBAI9G,cAAC,IAAD,CAAQI,MAAM,UAAUV,KAAK,SAASR,UAAU,eAChD,qBAAKA,UAAU,aAAf,SACI,cAAC,IAAD,CAAMmB,GAAG,SAASnB,UAAU,sCAA5B","file":"static/js/32.305a752e.chunk.js","sourcesContent":["import React, { useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'primereact/button';\r\nimport { InputText } from 'primereact/inputtext';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { useForm } from 'react-hook-form';\r\nimport { updateUserPassword } from 'store/modules/auth';\r\n\r\nimport './ForgotPassword.css';\r\n\r\nconst NewPassword = (props) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { register, handleSubmit, watch, formState: { errors } } = useForm({\r\n        mode: 'onChange',\r\n        reValidateMode: 'onChange'\r\n    })\r\n\r\n    const password = useRef(({}));\r\n    password.current = watch(\"password\", \"\");\r\n\r\n    let url = props.location.search;\r\n    url = url.split('=');\r\n    const shortCode = url[2];\r\n    // userdata.shortCode = shortCode;\r\n    let email = \"schinoyerem007@gmail.com\";\r\n\r\n    console.log({ shortCode })\r\n\r\n\r\n\r\n\r\n    const onSubmit = (userdata) => {\r\n\r\n        dispatch(updateUserPassword(shortCode, email, userdata))\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"p-fluid\">\r\n                <div className=\"p-grid p-mx-0\">\r\n                    <div className=\"p-col-12 p-md-7 p-lg-8 jobplicant-panel-left p-p-0 \">\r\n                        <div className=\"p-col bgimage\">\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"p-col-12 p-md-5 p-lg-4 jobplicant-panel-right\">\r\n                        <div className=\"logo-container\">\r\n                            <img src=\"../../assets/logo.png\" alt=\"Logo\" className=\"reponsive-logo\" width=\"150\" />\r\n                        </div>\r\n                        <div className=\"jobplicant-panel\">\r\n                            <div className=\"jobplicant-heading\">\r\n                                <h3 className=\"jobplicant-title p-mb-1\">Recover your password</h3>\r\n                                <p className=\"p-text-secondary\">Please enter a new password</p>\r\n                            </div>\r\n                            <form onSubmit={handleSubmit(onSubmit)}>\r\n                                <div className=\"p-fluid\">\r\n                                    <div className=\"p-field\">\r\n                                        <InputText\r\n                                            id=\"password\"\r\n                                            type=\"password\"\r\n                                            name=\"password\"\r\n                                            placeholder=\"New Password\"\r\n                                            {...register(\"password\", {\r\n                                                required: \"Password too short\",\r\n                                                minLength: {\r\n                                                    value: 8,\r\n                                                    message: \"Password must not be less than 8 characters\"\r\n                                                }\r\n                                            })}\r\n                                        />  <label htmlFor=\"password\" className=\"\">\r\n                                            {errors.password && <span className=\"text-danger font-weight-bold\"> <p>{errors.password.message}</p>\r\n                                            </span>}\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"p-field\">\r\n                                        <InputText\r\n                                            id=\"confirmPassword\"\r\n                                            type=\"password\"\r\n                                            name=\"confirmPassword\"\r\n                                            placeholder=\"Confirm New Password\"\r\n                                            {...register(\"confirmPassword\", {\r\n                                                validate: value => value === password.current || \"The passwords do not match\"\r\n                                            })}\r\n                                        />\r\n                                        <label htmlFor=\"confirmPassword\" className=\"\">\r\n                                            {errors.confirmPassword && <span className=\"text-danger font-weight-bold\"> <p>{errors.confirmPassword.message}</p>\r\n                                            </span>}\r\n                                        </label>\r\n                                    </div>\r\n                                    <Button label=\"Confirm\" type=\"submit\" className=\"form-group\" />\r\n                                    <div className=\"form-group\">\r\n                                        <Link to=\"/Login\" className=\"p-mt-2 p-text-secondary back-button\">Back to Login</Link>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NewPassword;"],"sourceRoot":""}